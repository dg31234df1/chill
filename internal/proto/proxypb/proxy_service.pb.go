// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proxy_service.proto

package proxypb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	commonpb "github.com/milvus-io/milvus/internal/proto/commonpb"
	internalpb "github.com/milvus-io/milvus/internal/proto/internalpb"
	milvuspb "github.com/milvus-io/milvus/internal/proto/milvuspb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InvalidateCollMetaCacheRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbName               string            `protobuf:"bytes,2,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	CollectionName       string            `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InvalidateCollMetaCacheRequest) Reset()         { *m = InvalidateCollMetaCacheRequest{} }
func (m *InvalidateCollMetaCacheRequest) String() string { return proto.CompactTextString(m) }
func (*InvalidateCollMetaCacheRequest) ProtoMessage()    {}
func (*InvalidateCollMetaCacheRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ca2fbc94d169de, []int{0}
}

func (m *InvalidateCollMetaCacheRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidateCollMetaCacheRequest.Unmarshal(m, b)
}
func (m *InvalidateCollMetaCacheRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidateCollMetaCacheRequest.Marshal(b, m, deterministic)
}
func (m *InvalidateCollMetaCacheRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidateCollMetaCacheRequest.Merge(m, src)
}
func (m *InvalidateCollMetaCacheRequest) XXX_Size() int {
	return xxx_messageInfo_InvalidateCollMetaCacheRequest.Size(m)
}
func (m *InvalidateCollMetaCacheRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidateCollMetaCacheRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidateCollMetaCacheRequest proto.InternalMessageInfo

func (m *InvalidateCollMetaCacheRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *InvalidateCollMetaCacheRequest) GetDbName() string {
	if m != nil {
		return m.DbName
	}
	return ""
}

func (m *InvalidateCollMetaCacheRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

type ReleaseDQLMessageStreamRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReleaseDQLMessageStreamRequest) Reset()         { *m = ReleaseDQLMessageStreamRequest{} }
func (m *ReleaseDQLMessageStreamRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseDQLMessageStreamRequest) ProtoMessage()    {}
func (*ReleaseDQLMessageStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ca2fbc94d169de, []int{1}
}

func (m *ReleaseDQLMessageStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseDQLMessageStreamRequest.Unmarshal(m, b)
}
func (m *ReleaseDQLMessageStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseDQLMessageStreamRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseDQLMessageStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseDQLMessageStreamRequest.Merge(m, src)
}
func (m *ReleaseDQLMessageStreamRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseDQLMessageStreamRequest.Size(m)
}
func (m *ReleaseDQLMessageStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseDQLMessageStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseDQLMessageStreamRequest proto.InternalMessageInfo

func (m *ReleaseDQLMessageStreamRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ReleaseDQLMessageStreamRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *ReleaseDQLMessageStreamRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func init() {
	proto.RegisterType((*InvalidateCollMetaCacheRequest)(nil), "milvus.proto.proxy.InvalidateCollMetaCacheRequest")
	proto.RegisterType((*ReleaseDQLMessageStreamRequest)(nil), "milvus.proto.proxy.ReleaseDQLMessageStreamRequest")
}

func init() { proto.RegisterFile("proxy_service.proto", fileDescriptor_34ca2fbc94d169de) }

var fileDescriptor_34ca2fbc94d169de = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0x86, 0x37, 0xb6, 0xac, 0x38, 0x86, 0x55, 0x46, 0x61, 0x97, 0xa8, 0x4b, 0x89, 0xa0, 0x45,
	0x30, 0x29, 0xd1, 0x27, 0x68, 0x02, 0xa5, 0x60, 0x8b, 0x26, 0x77, 0xde, 0x94, 0x49, 0x72, 0x48,
	0x07, 0x26, 0x33, 0x69, 0x66, 0x52, 0xf4, 0x15, 0xbc, 0xf6, 0x71, 0x7c, 0x38, 0xc9, 0x24, 0x6d,
	0x4d, 0xdb, 0x54, 0xf4, 0x6e, 0xce, 0xc9, 0x77, 0xf8, 0xcf, 0x7f, 0xf2, 0xa3, 0x67, 0x45, 0x29,
	0xbe, 0x7d, 0x5f, 0x49, 0x28, 0xb7, 0x34, 0x01, 0xa7, 0x28, 0x85, 0x12, 0x18, 0xe7, 0x94, 0x6d,
	0x2b, 0xd9, 0x54, 0x8e, 0x26, 0x2c, 0x33, 0x11, 0x79, 0x2e, 0x78, 0xd3, 0xb3, 0x6e, 0x28, 0x57,
	0x50, 0x72, 0xc2, 0xda, 0xda, 0xfc, 0x73, 0xc2, 0xfe, 0x69, 0xa0, 0xfb, 0x39, 0xdf, 0x12, 0x46,
	0x53, 0xa2, 0xc0, 0x17, 0x8c, 0x2d, 0x40, 0x11, 0x9f, 0x24, 0x6b, 0x08, 0x61, 0x53, 0x81, 0x54,
	0x78, 0x82, 0x86, 0x31, 0x91, 0x70, 0x67, 0x8c, 0x8c, 0xf1, 0x63, 0xef, 0xa5, 0xd3, 0x51, 0x6c,
	0xa5, 0x16, 0x32, 0x9b, 0x12, 0x09, 0xa1, 0x26, 0xf1, 0x2d, 0x7a, 0x98, 0xc6, 0x2b, 0x4e, 0x72,
	0xb8, 0x7b, 0x30, 0x32, 0xc6, 0x8f, 0xc2, 0xeb, 0x34, 0x5e, 0x92, 0x1c, 0xf0, 0x5b, 0xf4, 0x24,
	0x11, 0x8c, 0x41, 0xa2, 0xa8, 0xe0, 0x0d, 0x30, 0xd0, 0xc0, 0xcd, 0xa1, 0x5d, 0x83, 0xf6, 0x0f,
	0x03, 0xdd, 0x87, 0xc0, 0x80, 0x48, 0x08, 0xbe, 0x7c, 0x5a, 0x80, 0x94, 0x24, 0x83, 0x48, 0x95,
	0x40, 0xf2, 0xff, 0x5f, 0x0b, 0xa3, 0x61, 0x1a, 0xcf, 0x03, 0xbd, 0xd3, 0x20, 0xd4, 0x6f, 0x6c,
	0x23, 0xf3, 0x20, 0x3d, 0x0f, 0xf4, 0x3a, 0x83, 0xb0, 0xd3, 0xf3, 0x7e, 0x0d, 0xd1, 0xd3, 0xcf,
	0xf5, 0x65, 0x97, 0x22, 0x85, 0xa8, 0x39, 0x3f, 0x2e, 0x10, 0x9e, 0x81, 0xf2, 0x45, 0x5e, 0x08,
	0x0e, 0x5c, 0x45, 0x8a, 0x28, 0x90, 0x78, 0xd2, 0x5d, 0x63, 0x7f, 0xfa, 0x53, 0xb4, 0xb5, 0x61,
	0xbd, 0xe9, 0x99, 0x38, 0xc2, 0xed, 0x2b, 0xbc, 0x41, 0xcf, 0x67, 0xa0, 0x4b, 0x2a, 0x15, 0x4d,
	0xa4, 0xbf, 0x26, 0x9c, 0x03, 0xc3, 0x5e, 0xbf, 0xe6, 0x09, 0xbc, 0x53, 0x7d, 0xdd, 0x9d, 0x69,
	0x8b, 0x48, 0x95, 0x94, 0x67, 0x21, 0xc8, 0x42, 0x70, 0x09, 0xf6, 0x15, 0x2e, 0xd1, 0xab, 0x6e,
	0x38, 0x9a, 0x9b, 0xec, 0x23, 0x72, 0xac, 0xad, 0xf3, 0xe7, 0x5c, 0xce, 0x93, 0xf5, 0xe2, 0xec,
	0xaf, 0xaa, 0x57, 0xad, 0x6a, 0x9b, 0x04, 0x99, 0x33, 0x50, 0x41, 0xba, 0xb3, 0xf7, 0xae, 0xdf,
	0xde, 0x1e, 0xfa, 0x47, 0x5b, 0x0c, 0xdd, 0xf6, 0x84, 0xeb, 0xbc, 0xa1, 0xcb, 0x49, 0xfc, 0x8b,
	0xa1, 0xe9, 0xc7, 0xaf, 0x5e, 0x46, 0xd5, 0xba, 0x8a, 0xeb, 0x2f, 0x6e, 0x83, 0xbe, 0xa7, 0xa2,
	0x7d, 0xb9, 0x3b, 0x43, 0xae, 0x9e, 0x76, 0xb5, 0x62, 0x11, 0xc7, 0xd7, 0xba, 0xfc, 0xf0, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0x1b, 0x9a, 0x9b, 0xba, 0xf6, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProxyNodeServiceClient is the client API for ProxyNodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyNodeServiceClient interface {
	GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error)
	GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	InvalidateCollectionMetaCache(ctx context.Context, in *InvalidateCollMetaCacheRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	GetDdChannel(ctx context.Context, in *internalpb.GetDdChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	ReleaseDQLMessageStream(ctx context.Context, in *ReleaseDQLMessageStreamRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
}

type proxyNodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewProxyNodeServiceClient(cc *grpc.ClientConn) ProxyNodeServiceClient {
	return &proxyNodeServiceClient{cc}
}

func (c *proxyNodeServiceClient) GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error) {
	out := new(internalpb.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.proxy.ProxyNodeService/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyNodeServiceClient) GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.proxy.ProxyNodeService/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyNodeServiceClient) InvalidateCollectionMetaCache(ctx context.Context, in *InvalidateCollMetaCacheRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.proxy.ProxyNodeService/InvalidateCollectionMetaCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyNodeServiceClient) GetDdChannel(ctx context.Context, in *internalpb.GetDdChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.proxy.ProxyNodeService/GetDdChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyNodeServiceClient) ReleaseDQLMessageStream(ctx context.Context, in *ReleaseDQLMessageStreamRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.proxy.ProxyNodeService/ReleaseDQLMessageStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyNodeServiceServer is the server API for ProxyNodeService service.
type ProxyNodeServiceServer interface {
	GetComponentStates(context.Context, *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error)
	GetStatisticsChannel(context.Context, *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error)
	InvalidateCollectionMetaCache(context.Context, *InvalidateCollMetaCacheRequest) (*commonpb.Status, error)
	GetDdChannel(context.Context, *internalpb.GetDdChannelRequest) (*milvuspb.StringResponse, error)
	ReleaseDQLMessageStream(context.Context, *ReleaseDQLMessageStreamRequest) (*commonpb.Status, error)
}

// UnimplementedProxyNodeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProxyNodeServiceServer struct {
}

func (*UnimplementedProxyNodeServiceServer) GetComponentStates(ctx context.Context, req *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedProxyNodeServiceServer) GetStatisticsChannel(ctx context.Context, req *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}
func (*UnimplementedProxyNodeServiceServer) InvalidateCollectionMetaCache(ctx context.Context, req *InvalidateCollMetaCacheRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvalidateCollectionMetaCache not implemented")
}
func (*UnimplementedProxyNodeServiceServer) GetDdChannel(ctx context.Context, req *internalpb.GetDdChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDdChannel not implemented")
}
func (*UnimplementedProxyNodeServiceServer) ReleaseDQLMessageStream(ctx context.Context, req *ReleaseDQLMessageStreamRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseDQLMessageStream not implemented")
}

func RegisterProxyNodeServiceServer(s *grpc.Server, srv ProxyNodeServiceServer) {
	s.RegisterService(&_ProxyNodeService_serviceDesc, srv)
}

func _ProxyNodeService_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetComponentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyNodeServiceServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.proxy.ProxyNodeService/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyNodeServiceServer).GetComponentStates(ctx, req.(*internalpb.GetComponentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyNodeService_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetStatisticsChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyNodeServiceServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.proxy.ProxyNodeService/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyNodeServiceServer).GetStatisticsChannel(ctx, req.(*internalpb.GetStatisticsChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyNodeService_InvalidateCollectionMetaCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvalidateCollMetaCacheRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyNodeServiceServer).InvalidateCollectionMetaCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.proxy.ProxyNodeService/InvalidateCollectionMetaCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyNodeServiceServer).InvalidateCollectionMetaCache(ctx, req.(*InvalidateCollMetaCacheRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyNodeService_GetDdChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetDdChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyNodeServiceServer).GetDdChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.proxy.ProxyNodeService/GetDdChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyNodeServiceServer).GetDdChannel(ctx, req.(*internalpb.GetDdChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyNodeService_ReleaseDQLMessageStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseDQLMessageStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyNodeServiceServer).ReleaseDQLMessageStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.proxy.ProxyNodeService/ReleaseDQLMessageStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyNodeServiceServer).ReleaseDQLMessageStream(ctx, req.(*ReleaseDQLMessageStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProxyNodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.proto.proxy.ProxyNodeService",
	HandlerType: (*ProxyNodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComponentStates",
			Handler:    _ProxyNodeService_GetComponentStates_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _ProxyNodeService_GetStatisticsChannel_Handler,
		},
		{
			MethodName: "InvalidateCollectionMetaCache",
			Handler:    _ProxyNodeService_InvalidateCollectionMetaCache_Handler,
		},
		{
			MethodName: "GetDdChannel",
			Handler:    _ProxyNodeService_GetDdChannel_Handler,
		},
		{
			MethodName: "ReleaseDQLMessageStream",
			Handler:    _ProxyNodeService_ReleaseDQLMessageStream_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proxy_service.proto",
}
