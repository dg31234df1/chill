// Code generated by protoc-gen-go. DO NOT EDIT.
// source: index_service.proto

package indexpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	commonpb "github.com/zilliztech/milvus-distributed/internal/proto/commonpb"
	internalpb2 "github.com/zilliztech/milvus-distributed/internal/proto/internalpb2"
	milvuspb "github.com/zilliztech/milvus-distributed/internal/proto/milvuspb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterNodeRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Address              *commonpb.Address `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RegisterNodeRequest) Reset()         { *m = RegisterNodeRequest{} }
func (m *RegisterNodeRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeRequest) ProtoMessage()    {}
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{0}
}

func (m *RegisterNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeRequest.Unmarshal(m, b)
}
func (m *RegisterNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeRequest.Marshal(b, m, deterministic)
}
func (m *RegisterNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeRequest.Merge(m, src)
}
func (m *RegisterNodeRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeRequest.Size(m)
}
func (m *RegisterNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeRequest proto.InternalMessageInfo

func (m *RegisterNodeRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *RegisterNodeRequest) GetAddress() *commonpb.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

type RegisterNodeResponse struct {
	Status               *commonpb.Status        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	InitParams           *internalpb2.InitParams `protobuf:"bytes,2,opt,name=init_params,json=initParams,proto3" json:"init_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RegisterNodeResponse) Reset()         { *m = RegisterNodeResponse{} }
func (m *RegisterNodeResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeResponse) ProtoMessage()    {}
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{1}
}

func (m *RegisterNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeResponse.Unmarshal(m, b)
}
func (m *RegisterNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeResponse.Marshal(b, m, deterministic)
}
func (m *RegisterNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeResponse.Merge(m, src)
}
func (m *RegisterNodeResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeResponse.Size(m)
}
func (m *RegisterNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeResponse proto.InternalMessageInfo

func (m *RegisterNodeResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RegisterNodeResponse) GetInitParams() *internalpb2.InitParams {
	if m != nil {
		return m.InitParams
	}
	return nil
}

type IndexStatesRequest struct {
	IndexBuildIDs        []int64  `protobuf:"varint,1,rep,packed,name=indexBuildIDs,proto3" json:"indexBuildIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexStatesRequest) Reset()         { *m = IndexStatesRequest{} }
func (m *IndexStatesRequest) String() string { return proto.CompactTextString(m) }
func (*IndexStatesRequest) ProtoMessage()    {}
func (*IndexStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{2}
}

func (m *IndexStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexStatesRequest.Unmarshal(m, b)
}
func (m *IndexStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexStatesRequest.Marshal(b, m, deterministic)
}
func (m *IndexStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexStatesRequest.Merge(m, src)
}
func (m *IndexStatesRequest) XXX_Size() int {
	return xxx_messageInfo_IndexStatesRequest.Size(m)
}
func (m *IndexStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexStatesRequest proto.InternalMessageInfo

func (m *IndexStatesRequest) GetIndexBuildIDs() []int64 {
	if m != nil {
		return m.IndexBuildIDs
	}
	return nil
}

type IndexInfo struct {
	State                commonpb.IndexState `protobuf:"varint,1,opt,name=state,proto3,enum=milvus.proto.common.IndexState" json:"state,omitempty"`
	IndexBuildID         int64               `protobuf:"varint,2,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	IndexID              int64               `protobuf:"varint,3,opt,name=indexID,proto3" json:"indexID,omitempty"`
	IndexName            string              `protobuf:"bytes,4,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Reason               string              `protobuf:"bytes,5,opt,name=Reason,proto3" json:"Reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *IndexInfo) Reset()         { *m = IndexInfo{} }
func (m *IndexInfo) String() string { return proto.CompactTextString(m) }
func (*IndexInfo) ProtoMessage()    {}
func (*IndexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{3}
}

func (m *IndexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexInfo.Unmarshal(m, b)
}
func (m *IndexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexInfo.Marshal(b, m, deterministic)
}
func (m *IndexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexInfo.Merge(m, src)
}
func (m *IndexInfo) XXX_Size() int {
	return xxx_messageInfo_IndexInfo.Size(m)
}
func (m *IndexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IndexInfo proto.InternalMessageInfo

func (m *IndexInfo) GetState() commonpb.IndexState {
	if m != nil {
		return m.State
	}
	return commonpb.IndexState_NONE
}

func (m *IndexInfo) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

func (m *IndexInfo) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *IndexInfo) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *IndexInfo) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type IndexStatesResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	States               []*IndexInfo     `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IndexStatesResponse) Reset()         { *m = IndexStatesResponse{} }
func (m *IndexStatesResponse) String() string { return proto.CompactTextString(m) }
func (*IndexStatesResponse) ProtoMessage()    {}
func (*IndexStatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{4}
}

func (m *IndexStatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexStatesResponse.Unmarshal(m, b)
}
func (m *IndexStatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexStatesResponse.Marshal(b, m, deterministic)
}
func (m *IndexStatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexStatesResponse.Merge(m, src)
}
func (m *IndexStatesResponse) XXX_Size() int {
	return xxx_messageInfo_IndexStatesResponse.Size(m)
}
func (m *IndexStatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexStatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IndexStatesResponse proto.InternalMessageInfo

func (m *IndexStatesResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *IndexStatesResponse) GetStates() []*IndexInfo {
	if m != nil {
		return m.States
	}
	return nil
}

type BuildIndexRequest struct {
	IndexName            string                   `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	IndexID              int64                    `protobuf:"varint,2,opt,name=indexID,proto3" json:"indexID,omitempty"`
	DataPaths            []string                 `protobuf:"bytes,3,rep,name=data_paths,json=dataPaths,proto3" json:"data_paths,omitempty"`
	TypeParams           []*commonpb.KeyValuePair `protobuf:"bytes,4,rep,name=type_params,json=typeParams,proto3" json:"type_params,omitempty"`
	IndexParams          []*commonpb.KeyValuePair `protobuf:"bytes,5,rep,name=index_params,json=indexParams,proto3" json:"index_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BuildIndexRequest) Reset()         { *m = BuildIndexRequest{} }
func (m *BuildIndexRequest) String() string { return proto.CompactTextString(m) }
func (*BuildIndexRequest) ProtoMessage()    {}
func (*BuildIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{5}
}

func (m *BuildIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildIndexRequest.Unmarshal(m, b)
}
func (m *BuildIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildIndexRequest.Marshal(b, m, deterministic)
}
func (m *BuildIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildIndexRequest.Merge(m, src)
}
func (m *BuildIndexRequest) XXX_Size() int {
	return xxx_messageInfo_BuildIndexRequest.Size(m)
}
func (m *BuildIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildIndexRequest proto.InternalMessageInfo

func (m *BuildIndexRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *BuildIndexRequest) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *BuildIndexRequest) GetDataPaths() []string {
	if m != nil {
		return m.DataPaths
	}
	return nil
}

func (m *BuildIndexRequest) GetTypeParams() []*commonpb.KeyValuePair {
	if m != nil {
		return m.TypeParams
	}
	return nil
}

func (m *BuildIndexRequest) GetIndexParams() []*commonpb.KeyValuePair {
	if m != nil {
		return m.IndexParams
	}
	return nil
}

type BuildIndexResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	IndexBuildID         int64            `protobuf:"varint,2,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BuildIndexResponse) Reset()         { *m = BuildIndexResponse{} }
func (m *BuildIndexResponse) String() string { return proto.CompactTextString(m) }
func (*BuildIndexResponse) ProtoMessage()    {}
func (*BuildIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{6}
}

func (m *BuildIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildIndexResponse.Unmarshal(m, b)
}
func (m *BuildIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildIndexResponse.Marshal(b, m, deterministic)
}
func (m *BuildIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildIndexResponse.Merge(m, src)
}
func (m *BuildIndexResponse) XXX_Size() int {
	return xxx_messageInfo_BuildIndexResponse.Size(m)
}
func (m *BuildIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuildIndexResponse proto.InternalMessageInfo

func (m *BuildIndexResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BuildIndexResponse) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

type BuildIndexCmd struct {
	IndexBuildID         int64              `protobuf:"varint,1,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	Req                  *BuildIndexRequest `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BuildIndexCmd) Reset()         { *m = BuildIndexCmd{} }
func (m *BuildIndexCmd) String() string { return proto.CompactTextString(m) }
func (*BuildIndexCmd) ProtoMessage()    {}
func (*BuildIndexCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{7}
}

func (m *BuildIndexCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildIndexCmd.Unmarshal(m, b)
}
func (m *BuildIndexCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildIndexCmd.Marshal(b, m, deterministic)
}
func (m *BuildIndexCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildIndexCmd.Merge(m, src)
}
func (m *BuildIndexCmd) XXX_Size() int {
	return xxx_messageInfo_BuildIndexCmd.Size(m)
}
func (m *BuildIndexCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildIndexCmd.DiscardUnknown(m)
}

var xxx_messageInfo_BuildIndexCmd proto.InternalMessageInfo

func (m *BuildIndexCmd) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

func (m *BuildIndexCmd) GetReq() *BuildIndexRequest {
	if m != nil {
		return m.Req
	}
	return nil
}

type BuildIndexNotification struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	IndexBuildID         int64            `protobuf:"varint,2,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	IndexFilePaths       []string         `protobuf:"bytes,3,rep,name=index_file_paths,json=indexFilePaths,proto3" json:"index_file_paths,omitempty"`
	NodeID               int64            `protobuf:"varint,4,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BuildIndexNotification) Reset()         { *m = BuildIndexNotification{} }
func (m *BuildIndexNotification) String() string { return proto.CompactTextString(m) }
func (*BuildIndexNotification) ProtoMessage()    {}
func (*BuildIndexNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{8}
}

func (m *BuildIndexNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildIndexNotification.Unmarshal(m, b)
}
func (m *BuildIndexNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildIndexNotification.Marshal(b, m, deterministic)
}
func (m *BuildIndexNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildIndexNotification.Merge(m, src)
}
func (m *BuildIndexNotification) XXX_Size() int {
	return xxx_messageInfo_BuildIndexNotification.Size(m)
}
func (m *BuildIndexNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildIndexNotification.DiscardUnknown(m)
}

var xxx_messageInfo_BuildIndexNotification proto.InternalMessageInfo

func (m *BuildIndexNotification) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BuildIndexNotification) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

func (m *BuildIndexNotification) GetIndexFilePaths() []string {
	if m != nil {
		return m.IndexFilePaths
	}
	return nil
}

func (m *BuildIndexNotification) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

type IndexFilePathsRequest struct {
	IndexBuildIDs        []int64  `protobuf:"varint,1,rep,packed,name=indexBuildIDs,proto3" json:"indexBuildIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexFilePathsRequest) Reset()         { *m = IndexFilePathsRequest{} }
func (m *IndexFilePathsRequest) String() string { return proto.CompactTextString(m) }
func (*IndexFilePathsRequest) ProtoMessage()    {}
func (*IndexFilePathsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{9}
}

func (m *IndexFilePathsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexFilePathsRequest.Unmarshal(m, b)
}
func (m *IndexFilePathsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexFilePathsRequest.Marshal(b, m, deterministic)
}
func (m *IndexFilePathsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexFilePathsRequest.Merge(m, src)
}
func (m *IndexFilePathsRequest) XXX_Size() int {
	return xxx_messageInfo_IndexFilePathsRequest.Size(m)
}
func (m *IndexFilePathsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexFilePathsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexFilePathsRequest proto.InternalMessageInfo

func (m *IndexFilePathsRequest) GetIndexBuildIDs() []int64 {
	if m != nil {
		return m.IndexBuildIDs
	}
	return nil
}

type IndexFilePathInfo struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	IndexBuildID         int64            `protobuf:"varint,2,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	IndexFilePaths       []string         `protobuf:"bytes,3,rep,name=index_file_paths,json=indexFilePaths,proto3" json:"index_file_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IndexFilePathInfo) Reset()         { *m = IndexFilePathInfo{} }
func (m *IndexFilePathInfo) String() string { return proto.CompactTextString(m) }
func (*IndexFilePathInfo) ProtoMessage()    {}
func (*IndexFilePathInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{10}
}

func (m *IndexFilePathInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexFilePathInfo.Unmarshal(m, b)
}
func (m *IndexFilePathInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexFilePathInfo.Marshal(b, m, deterministic)
}
func (m *IndexFilePathInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexFilePathInfo.Merge(m, src)
}
func (m *IndexFilePathInfo) XXX_Size() int {
	return xxx_messageInfo_IndexFilePathInfo.Size(m)
}
func (m *IndexFilePathInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexFilePathInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IndexFilePathInfo proto.InternalMessageInfo

func (m *IndexFilePathInfo) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *IndexFilePathInfo) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

func (m *IndexFilePathInfo) GetIndexFilePaths() []string {
	if m != nil {
		return m.IndexFilePaths
	}
	return nil
}

type IndexFilePathsResponse struct {
	Status               *commonpb.Status     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	FilePaths            []*IndexFilePathInfo `protobuf:"bytes,2,rep,name=file_paths,json=filePaths,proto3" json:"file_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *IndexFilePathsResponse) Reset()         { *m = IndexFilePathsResponse{} }
func (m *IndexFilePathsResponse) String() string { return proto.CompactTextString(m) }
func (*IndexFilePathsResponse) ProtoMessage()    {}
func (*IndexFilePathsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{11}
}

func (m *IndexFilePathsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexFilePathsResponse.Unmarshal(m, b)
}
func (m *IndexFilePathsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexFilePathsResponse.Marshal(b, m, deterministic)
}
func (m *IndexFilePathsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexFilePathsResponse.Merge(m, src)
}
func (m *IndexFilePathsResponse) XXX_Size() int {
	return xxx_messageInfo_IndexFilePathsResponse.Size(m)
}
func (m *IndexFilePathsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexFilePathsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IndexFilePathsResponse proto.InternalMessageInfo

func (m *IndexFilePathsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *IndexFilePathsResponse) GetFilePaths() []*IndexFilePathInfo {
	if m != nil {
		return m.FilePaths
	}
	return nil
}

type IndexMeta struct {
	IndexBuildID         int64               `protobuf:"varint,1,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	State                commonpb.IndexState `protobuf:"varint,2,opt,name=state,proto3,enum=milvus.proto.common.IndexState" json:"state,omitempty"`
	FailReason           string              `protobuf:"bytes,3,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason,omitempty"`
	Req                  *BuildIndexRequest  `protobuf:"bytes,4,opt,name=req,proto3" json:"req,omitempty"`
	IndexFilePaths       []string            `protobuf:"bytes,5,rep,name=index_file_paths,json=indexFilePaths,proto3" json:"index_file_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *IndexMeta) Reset()         { *m = IndexMeta{} }
func (m *IndexMeta) String() string { return proto.CompactTextString(m) }
func (*IndexMeta) ProtoMessage()    {}
func (*IndexMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{12}
}

func (m *IndexMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexMeta.Unmarshal(m, b)
}
func (m *IndexMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexMeta.Marshal(b, m, deterministic)
}
func (m *IndexMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexMeta.Merge(m, src)
}
func (m *IndexMeta) XXX_Size() int {
	return xxx_messageInfo_IndexMeta.Size(m)
}
func (m *IndexMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexMeta.DiscardUnknown(m)
}

var xxx_messageInfo_IndexMeta proto.InternalMessageInfo

func (m *IndexMeta) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

func (m *IndexMeta) GetState() commonpb.IndexState {
	if m != nil {
		return m.State
	}
	return commonpb.IndexState_NONE
}

func (m *IndexMeta) GetFailReason() string {
	if m != nil {
		return m.FailReason
	}
	return ""
}

func (m *IndexMeta) GetReq() *BuildIndexRequest {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *IndexMeta) GetIndexFilePaths() []string {
	if m != nil {
		return m.IndexFilePaths
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterNodeRequest)(nil), "milvus.proto.index.RegisterNodeRequest")
	proto.RegisterType((*RegisterNodeResponse)(nil), "milvus.proto.index.RegisterNodeResponse")
	proto.RegisterType((*IndexStatesRequest)(nil), "milvus.proto.index.IndexStatesRequest")
	proto.RegisterType((*IndexInfo)(nil), "milvus.proto.index.IndexInfo")
	proto.RegisterType((*IndexStatesResponse)(nil), "milvus.proto.index.IndexStatesResponse")
	proto.RegisterType((*BuildIndexRequest)(nil), "milvus.proto.index.BuildIndexRequest")
	proto.RegisterType((*BuildIndexResponse)(nil), "milvus.proto.index.BuildIndexResponse")
	proto.RegisterType((*BuildIndexCmd)(nil), "milvus.proto.index.BuildIndexCmd")
	proto.RegisterType((*BuildIndexNotification)(nil), "milvus.proto.index.BuildIndexNotification")
	proto.RegisterType((*IndexFilePathsRequest)(nil), "milvus.proto.index.IndexFilePathsRequest")
	proto.RegisterType((*IndexFilePathInfo)(nil), "milvus.proto.index.IndexFilePathInfo")
	proto.RegisterType((*IndexFilePathsResponse)(nil), "milvus.proto.index.IndexFilePathsResponse")
	proto.RegisterType((*IndexMeta)(nil), "milvus.proto.index.IndexMeta")
}

func init() { proto.RegisterFile("index_service.proto", fileDescriptor_a5d2036b4df73e0a) }

var fileDescriptor_a5d2036b4df73e0a = []byte{
	// 891 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0x5f, 0x6f, 0x1b, 0x45,
	0x10, 0xcf, 0xe5, 0x12, 0x57, 0x19, 0xbb, 0x51, 0xb3, 0x29, 0x91, 0x65, 0xa8, 0x9a, 0x1c, 0xb4,
	0x35, 0x95, 0xb0, 0x91, 0xab, 0x82, 0x84, 0x84, 0x50, 0x13, 0x43, 0x64, 0xa1, 0x46, 0xd1, 0xb6,
	0x02, 0x51, 0x09, 0x45, 0xeb, 0xbb, 0xb1, 0xbd, 0xe2, 0x6e, 0xef, 0x7a, 0xbb, 0xae, 0x70, 0x5f,
	0x10, 0x9f, 0x80, 0x07, 0x10, 0x5f, 0x84, 0x07, 0xbe, 0x13, 0x3c, 0xf3, 0x8e, 0x6e, 0xf7, 0xce,
	0xbe, 0xb3, 0xaf, 0xfe, 0xa3, 0x80, 0x78, 0xe1, 0xcd, 0x33, 0x37, 0x7f, 0x7f, 0xf3, 0x9b, 0x59,
	0xc3, 0x21, 0x17, 0x1e, 0x7e, 0x7f, 0x25, 0x31, 0x7e, 0xc5, 0x5d, 0x6c, 0x45, 0x71, 0xa8, 0x42,
	0x42, 0x02, 0xee, 0xbf, 0x1a, 0x4b, 0x23, 0xb5, 0xb4, 0x45, 0xa3, 0xe6, 0x86, 0x41, 0x10, 0x0a,
	0xa3, 0x6b, 0xec, 0x73, 0xa1, 0x30, 0x16, 0xcc, 0x4f, 0xe5, 0x5a, 0xde, 0xc3, 0xf9, 0x01, 0x0e,
	0x29, 0x0e, 0xb9, 0x54, 0x18, 0x5f, 0x84, 0x1e, 0x52, 0x7c, 0x39, 0x46, 0xa9, 0xc8, 0x87, 0xb0,
	0xd3, 0x67, 0x12, 0xeb, 0xd6, 0xb1, 0xd5, 0xac, 0x76, 0xde, 0x69, 0x15, 0xb2, 0xa4, 0xe1, 0x9f,
	0xca, 0xe1, 0x29, 0x93, 0x48, 0xb5, 0x25, 0xf9, 0x08, 0x6e, 0x30, 0xcf, 0x8b, 0x51, 0xca, 0xfa,
	0xf6, 0x12, 0xa7, 0x27, 0xc6, 0x86, 0x66, 0xc6, 0xce, 0x4f, 0x16, 0xdc, 0x2e, 0x56, 0x20, 0xa3,
	0x50, 0x48, 0x24, 0x8f, 0xa0, 0x22, 0x15, 0x53, 0x63, 0x99, 0x16, 0xf1, 0x76, 0x69, 0xbc, 0x67,
	0xda, 0x84, 0xa6, 0xa6, 0xe4, 0x14, 0xaa, 0x5c, 0x70, 0x75, 0x15, 0xb1, 0x98, 0x05, 0x59, 0x25,
	0x27, 0xad, 0x39, 0x90, 0x52, 0x3c, 0x7a, 0x82, 0xab, 0x4b, 0x6d, 0x48, 0x81, 0x4f, 0x7f, 0x3b,
	0x9f, 0x00, 0xe9, 0x25, 0x38, 0x26, 0xa1, 0x51, 0x66, 0x88, 0xbc, 0x07, 0x37, 0x35, 0xba, 0xa7,
	0x63, 0xee, 0x7b, 0xbd, 0x6e, 0x52, 0x95, 0xdd, 0xb4, 0x69, 0x51, 0xe9, 0xfc, 0x6e, 0xc1, 0x9e,
	0x76, 0xee, 0x89, 0x41, 0x48, 0x1e, 0xc3, 0x6e, 0x52, 0x97, 0x81, 0x71, 0xbf, 0x73, 0xb7, 0xb4,
	0x83, 0x59, 0x2e, 0x6a, 0xac, 0x89, 0x03, 0xb5, 0x7c, 0x54, 0xdd, 0x85, 0x4d, 0x0b, 0x3a, 0x52,
	0x87, 0x1b, 0x5a, 0xee, 0x75, 0xeb, 0xb6, 0xfe, 0x9c, 0x89, 0xe4, 0x0e, 0x80, 0x21, 0x8a, 0x60,
	0x01, 0xd6, 0x77, 0x8e, 0xad, 0xe6, 0x1e, 0xdd, 0xd3, 0x9a, 0x0b, 0x16, 0x20, 0x39, 0x82, 0x0a,
	0x45, 0x26, 0x43, 0x51, 0xdf, 0xd5, 0x9f, 0x52, 0xc9, 0xf9, 0xd1, 0x82, 0xc3, 0x42, 0xdb, 0xd7,
	0x19, 0xc3, 0x63, 0xe3, 0x84, 0xc9, 0x04, 0xec, 0x66, 0xb5, 0x73, 0xa7, 0xb5, 0x48, 0xd3, 0xd6,
	0x14, 0x27, 0x9a, 0x1a, 0x3b, 0x7f, 0x59, 0x70, 0x60, 0x1a, 0x4c, 0x3e, 0x65, 0xc8, 0x17, 0x1b,
	0xb2, 0xe6, 0x1b, 0xca, 0x21, 0xb1, 0xbd, 0x80, 0x84, 0xc7, 0x14, 0xbb, 0x8a, 0x98, 0x1a, 0xc9,
	0xba, 0x7d, 0x6c, 0x27, 0x8e, 0x89, 0xe6, 0x32, 0x51, 0x24, 0x5c, 0x51, 0x93, 0x08, 0x33, 0xae,
	0xec, 0xe8, 0x4a, 0x4f, 0x4a, 0xdb, 0xfb, 0x12, 0x27, 0x5f, 0x31, 0x7f, 0x8c, 0x97, 0x8c, 0xc7,
	0x14, 0x12, 0x2f, 0xc3, 0x15, 0xd2, 0x4d, 0x47, 0x95, 0x05, 0xd9, 0x5d, 0x37, 0x48, 0x55, 0xbb,
	0xa5, 0x8c, 0x0b, 0x80, 0xe4, 0xdb, 0xbe, 0x0e, 0xf2, 0x6b, 0x70, 0xc7, 0xf1, 0xe1, 0xe6, 0x2c,
	0xdd, 0x59, 0xe0, 0x2d, 0x38, 0x59, 0x25, 0x84, 0xfb, 0x18, 0xec, 0x18, 0x5f, 0xa6, 0x1b, 0x75,
	0xaf, 0x6c, 0x9e, 0x0b, 0x93, 0xa3, 0x89, 0x87, 0xf3, 0x9b, 0x05, 0x47, 0xb3, 0x4f, 0x17, 0xa1,
	0xe2, 0x03, 0xee, 0x32, 0xc5, 0x43, 0xf1, 0xaf, 0x75, 0x48, 0x9a, 0x70, 0xcb, 0x8c, 0x65, 0xc0,
	0x7d, 0x2c, 0xcc, 0x7f, 0x5f, 0xeb, 0xbf, 0xe0, 0x3e, 0x1a, 0x12, 0x1c, 0x41, 0x45, 0x84, 0x1e,
	0xf6, 0xba, 0x7a, 0x53, 0x6c, 0x9a, 0x4a, 0xce, 0xa7, 0xf0, 0x56, 0xaf, 0x60, 0xb9, 0xd9, 0x1d,
	0xf8, 0xd5, 0x82, 0x83, 0x82, 0xbf, 0xbe, 0x07, 0xff, 0x7d, 0xbf, 0xce, 0xcf, 0x16, 0x1c, 0xcd,
	0x37, 0x76, 0x1d, 0xbe, 0x75, 0x01, 0x72, 0x39, 0xcd, 0xb6, 0xdf, 0x7b, 0xe3, 0xb6, 0xe7, 0xd1,
	0xa0, 0x7b, 0x83, 0x69, 0x55, 0x7f, 0x64, 0x67, 0xf3, 0x29, 0x2a, 0xb6, 0x16, 0x1d, 0xa7, 0xa7,
	0x75, 0x7b, 0xa3, 0xd3, 0x7a, 0x17, 0xaa, 0x03, 0xc6, 0xfd, 0xab, 0xd8, 0x9c, 0x40, 0x5b, 0x1f,
	0x13, 0x48, 0x54, 0xe6, 0x0c, 0x66, 0x34, 0xdf, 0xd9, 0x94, 0xe6, 0xa5, 0x23, 0xd8, 0x2d, 0x1b,
	0x41, 0xe7, 0x97, 0x0a, 0xd4, 0x4c, 0x65, 0xe6, 0x25, 0x27, 0x2e, 0xd4, 0xf2, 0x2f, 0x20, 0x79,
	0x50, 0x96, 0xb6, 0xe4, 0x95, 0x6e, 0x34, 0x57, 0x1b, 0x9a, 0xd9, 0x3a, 0x5b, 0xe4, 0x5b, 0x80,
	0x59, 0xe5, 0x64, 0xbd, 0xce, 0x1a, 0xf7, 0x57, 0x99, 0x4d, 0xc3, 0xbb, 0xb0, 0x7f, 0x8e, 0x2a,
	0xf7, 0x80, 0x90, 0xfb, 0x6f, 0x64, 0x41, 0xe1, 0x61, 0x6d, 0x3c, 0x58, 0x69, 0x37, 0x4d, 0xe2,
	0xc3, 0x41, 0x96, 0x64, 0xb6, 0xc1, 0xef, 0xaf, 0x64, 0xdb, 0x34, 0xd5, 0xc3, 0x75, 0x4c, 0x73,
	0x88, 0xdd, 0xd2, 0xd7, 0x6a, 0x92, 0xc3, 0xed, 0xe1, 0x72, 0x40, 0xf2, 0xd7, 0xad, 0xb1, 0x6c,
	0x7f, 0x9c, 0x2d, 0xf2, 0x02, 0xc8, 0x39, 0xaa, 0xb3, 0x30, 0x88, 0x42, 0x81, 0x42, 0xa5, 0xa8,
	0x35, 0x4a, 0x9d, 0x3e, 0x0f, 0x22, 0x35, 0x59, 0x9c, 0x46, 0xfa, 0x3f, 0x66, 0x2e, 0x86, 0xb3,
	0x45, 0xbe, 0xd6, 0xb1, 0x9f, 0xf3, 0x00, 0x9f, 0x73, 0xf7, 0xbb, 0xb3, 0x11, 0x13, 0x02, 0xfd,
	0xa5, 0xb1, 0xdf, 0x2d, 0x7e, 0x4b, 0x85, 0x67, 0x2a, 0xe6, 0x62, 0x98, 0xc3, 0xe4, 0x1b, 0xb8,
	0x7d, 0x8e, 0x3a, 0x0f, 0x97, 0x8a, 0xbb, 0xf2, 0x9f, 0x0b, 0xdd, 0xf9, 0x73, 0x3b, 0xbd, 0x01,
	0x7a, 0x07, 0x2e, 0x0a, 0x74, 0x3d, 0x59, 0x0e, 0xfb, 0x59, 0xe0, 0xfd, 0x8f, 0xf6, 0x46, 0xa1,
	0x4f, 0x9f, 0xbc, 0xf8, 0x6c, 0xc8, 0xd5, 0x68, 0xdc, 0x4f, 0xbc, 0xdb, 0xaf, 0xb9, 0xef, 0xf3,
	0xd7, 0x0a, 0xdd, 0x51, 0xdb, 0x38, 0x7c, 0xe0, 0x71, 0xa9, 0x62, 0xde, 0x1f, 0x2b, 0xf4, 0xda,
	0x59, 0xeb, 0x6d, 0x1d, 0xb2, 0xad, 0xd1, 0x8f, 0xfa, 0xfd, 0x8a, 0x16, 0x1f, 0xfd, 0x1d, 0x00,
	0x00, 0xff, 0xff, 0xe9, 0x3f, 0x99, 0x70, 0x98, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IndexServiceClient is the client API for IndexService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IndexServiceClient interface {
	//*
	// @brief This method is used to create collection
	//
	// @param CollectionSchema, use to provide collection information to be created.
	//
	// @return Status
	RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeResponse, error)
	BuildIndex(ctx context.Context, in *BuildIndexRequest, opts ...grpc.CallOption) (*BuildIndexResponse, error)
	GetIndexStates(ctx context.Context, in *IndexStatesRequest, opts ...grpc.CallOption) (*IndexStatesResponse, error)
	GetIndexFilePaths(ctx context.Context, in *IndexFilePathsRequest, opts ...grpc.CallOption) (*IndexFilePathsResponse, error)
	NotifyBuildIndex(ctx context.Context, in *BuildIndexNotification, opts ...grpc.CallOption) (*commonpb.Status, error)
	GetComponentStates(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*internalpb2.ComponentStates, error)
	GetTimeTickChannel(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
}

type indexServiceClient struct {
	cc *grpc.ClientConn
}

func NewIndexServiceClient(cc *grpc.ClientConn) IndexServiceClient {
	return &indexServiceClient{cc}
}

func (c *indexServiceClient) RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeResponse, error) {
	out := new(RegisterNodeResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/RegisterNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) BuildIndex(ctx context.Context, in *BuildIndexRequest, opts ...grpc.CallOption) (*BuildIndexResponse, error) {
	out := new(BuildIndexResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/BuildIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) GetIndexStates(ctx context.Context, in *IndexStatesRequest, opts ...grpc.CallOption) (*IndexStatesResponse, error) {
	out := new(IndexStatesResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/GetIndexStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) GetIndexFilePaths(ctx context.Context, in *IndexFilePathsRequest, opts ...grpc.CallOption) (*IndexFilePathsResponse, error) {
	out := new(IndexFilePathsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/GetIndexFilePaths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) NotifyBuildIndex(ctx context.Context, in *BuildIndexNotification, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/NotifyBuildIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) GetComponentStates(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*internalpb2.ComponentStates, error) {
	out := new(internalpb2.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) GetTimeTickChannel(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/GetTimeTickChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) GetStatisticsChannel(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IndexServiceServer is the server API for IndexService service.
type IndexServiceServer interface {
	//*
	// @brief This method is used to create collection
	//
	// @param CollectionSchema, use to provide collection information to be created.
	//
	// @return Status
	RegisterNode(context.Context, *RegisterNodeRequest) (*RegisterNodeResponse, error)
	BuildIndex(context.Context, *BuildIndexRequest) (*BuildIndexResponse, error)
	GetIndexStates(context.Context, *IndexStatesRequest) (*IndexStatesResponse, error)
	GetIndexFilePaths(context.Context, *IndexFilePathsRequest) (*IndexFilePathsResponse, error)
	NotifyBuildIndex(context.Context, *BuildIndexNotification) (*commonpb.Status, error)
	GetComponentStates(context.Context, *commonpb.Empty) (*internalpb2.ComponentStates, error)
	GetTimeTickChannel(context.Context, *commonpb.Empty) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(context.Context, *commonpb.Empty) (*milvuspb.StringResponse, error)
}

// UnimplementedIndexServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIndexServiceServer struct {
}

func (*UnimplementedIndexServiceServer) RegisterNode(ctx context.Context, req *RegisterNodeRequest) (*RegisterNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterNode not implemented")
}
func (*UnimplementedIndexServiceServer) BuildIndex(ctx context.Context, req *BuildIndexRequest) (*BuildIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildIndex not implemented")
}
func (*UnimplementedIndexServiceServer) GetIndexStates(ctx context.Context, req *IndexStatesRequest) (*IndexStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIndexStates not implemented")
}
func (*UnimplementedIndexServiceServer) GetIndexFilePaths(ctx context.Context, req *IndexFilePathsRequest) (*IndexFilePathsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIndexFilePaths not implemented")
}
func (*UnimplementedIndexServiceServer) NotifyBuildIndex(ctx context.Context, req *BuildIndexNotification) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyBuildIndex not implemented")
}
func (*UnimplementedIndexServiceServer) GetComponentStates(ctx context.Context, req *commonpb.Empty) (*internalpb2.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedIndexServiceServer) GetTimeTickChannel(ctx context.Context, req *commonpb.Empty) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeTickChannel not implemented")
}
func (*UnimplementedIndexServiceServer) GetStatisticsChannel(ctx context.Context, req *commonpb.Empty) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}

func RegisterIndexServiceServer(s *grpc.Server, srv IndexServiceServer) {
	s.RegisterService(&_IndexService_serviceDesc, srv)
}

func _IndexService_RegisterNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).RegisterNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/RegisterNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).RegisterNode(ctx, req.(*RegisterNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_BuildIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).BuildIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/BuildIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).BuildIndex(ctx, req.(*BuildIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_GetIndexStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).GetIndexStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/GetIndexStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).GetIndexStates(ctx, req.(*IndexStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_GetIndexFilePaths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexFilePathsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).GetIndexFilePaths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/GetIndexFilePaths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).GetIndexFilePaths(ctx, req.(*IndexFilePathsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_NotifyBuildIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildIndexNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).NotifyBuildIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/NotifyBuildIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).NotifyBuildIndex(ctx, req.(*BuildIndexNotification))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(commonpb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).GetComponentStates(ctx, req.(*commonpb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_GetTimeTickChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(commonpb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).GetTimeTickChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/GetTimeTickChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).GetTimeTickChannel(ctx, req.(*commonpb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(commonpb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).GetStatisticsChannel(ctx, req.(*commonpb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _IndexService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.proto.index.IndexService",
	HandlerType: (*IndexServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterNode",
			Handler:    _IndexService_RegisterNode_Handler,
		},
		{
			MethodName: "BuildIndex",
			Handler:    _IndexService_BuildIndex_Handler,
		},
		{
			MethodName: "GetIndexStates",
			Handler:    _IndexService_GetIndexStates_Handler,
		},
		{
			MethodName: "GetIndexFilePaths",
			Handler:    _IndexService_GetIndexFilePaths_Handler,
		},
		{
			MethodName: "NotifyBuildIndex",
			Handler:    _IndexService_NotifyBuildIndex_Handler,
		},
		{
			MethodName: "GetComponentStates",
			Handler:    _IndexService_GetComponentStates_Handler,
		},
		{
			MethodName: "GetTimeTickChannel",
			Handler:    _IndexService_GetTimeTickChannel_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _IndexService_GetStatisticsChannel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "index_service.proto",
}

// IndexNodeClient is the client API for IndexNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IndexNodeClient interface {
	//*
	// @brief This method is used to create collection
	//
	// @param CollectionSchema, use to provide collection information to be created.
	//
	// @return Status
	BuildIndex(ctx context.Context, in *BuildIndexCmd, opts ...grpc.CallOption) (*commonpb.Status, error)
	GetComponentStates(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*internalpb2.ComponentStates, error)
	GetTimeTickChannel(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
}

type indexNodeClient struct {
	cc *grpc.ClientConn
}

func NewIndexNodeClient(cc *grpc.ClientConn) IndexNodeClient {
	return &indexNodeClient{cc}
}

func (c *indexNodeClient) BuildIndex(ctx context.Context, in *BuildIndexCmd, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexNode/BuildIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexNodeClient) GetComponentStates(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*internalpb2.ComponentStates, error) {
	out := new(internalpb2.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexNode/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexNodeClient) GetTimeTickChannel(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexNode/GetTimeTickChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexNodeClient) GetStatisticsChannel(ctx context.Context, in *commonpb.Empty, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexNode/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IndexNodeServer is the server API for IndexNode service.
type IndexNodeServer interface {
	//*
	// @brief This method is used to create collection
	//
	// @param CollectionSchema, use to provide collection information to be created.
	//
	// @return Status
	BuildIndex(context.Context, *BuildIndexCmd) (*commonpb.Status, error)
	GetComponentStates(context.Context, *commonpb.Empty) (*internalpb2.ComponentStates, error)
	GetTimeTickChannel(context.Context, *commonpb.Empty) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(context.Context, *commonpb.Empty) (*milvuspb.StringResponse, error)
}

// UnimplementedIndexNodeServer can be embedded to have forward compatible implementations.
type UnimplementedIndexNodeServer struct {
}

func (*UnimplementedIndexNodeServer) BuildIndex(ctx context.Context, req *BuildIndexCmd) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildIndex not implemented")
}
func (*UnimplementedIndexNodeServer) GetComponentStates(ctx context.Context, req *commonpb.Empty) (*internalpb2.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedIndexNodeServer) GetTimeTickChannel(ctx context.Context, req *commonpb.Empty) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeTickChannel not implemented")
}
func (*UnimplementedIndexNodeServer) GetStatisticsChannel(ctx context.Context, req *commonpb.Empty) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}

func RegisterIndexNodeServer(s *grpc.Server, srv IndexNodeServer) {
	s.RegisterService(&_IndexNode_serviceDesc, srv)
}

func _IndexNode_BuildIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildIndexCmd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexNodeServer).BuildIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexNode/BuildIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexNodeServer).BuildIndex(ctx, req.(*BuildIndexCmd))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexNode_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(commonpb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexNodeServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexNode/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexNodeServer).GetComponentStates(ctx, req.(*commonpb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexNode_GetTimeTickChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(commonpb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexNodeServer).GetTimeTickChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexNode/GetTimeTickChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexNodeServer).GetTimeTickChannel(ctx, req.(*commonpb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexNode_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(commonpb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexNodeServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexNode/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexNodeServer).GetStatisticsChannel(ctx, req.(*commonpb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _IndexNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.proto.index.IndexNode",
	HandlerType: (*IndexNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuildIndex",
			Handler:    _IndexNode_BuildIndex_Handler,
		},
		{
			MethodName: "GetComponentStates",
			Handler:    _IndexNode_GetComponentStates_Handler,
		},
		{
			MethodName: "GetTimeTickChannel",
			Handler:    _IndexNode_GetTimeTickChannel_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _IndexNode_GetStatisticsChannel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "index_service.proto",
}
