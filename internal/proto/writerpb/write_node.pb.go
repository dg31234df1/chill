// Code generated by protoc-gen-go. DO NOT EDIT.
// source: write_node.proto

package writerpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FieldFlushMeta struct {
	FieldID              int32    `protobuf:"varint,1,opt,name=fieldID,proto3" json:"fieldID,omitempty"`
	BinlogPaths          []string `protobuf:"bytes,2,rep,name=binlog_paths,json=binlogPaths,proto3" json:"binlog_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldFlushMeta) Reset()         { *m = FieldFlushMeta{} }
func (m *FieldFlushMeta) String() string { return proto.CompactTextString(m) }
func (*FieldFlushMeta) ProtoMessage()    {}
func (*FieldFlushMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec4781d562c3e8f, []int{0}
}

func (m *FieldFlushMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldFlushMeta.Unmarshal(m, b)
}
func (m *FieldFlushMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldFlushMeta.Marshal(b, m, deterministic)
}
func (m *FieldFlushMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldFlushMeta.Merge(m, src)
}
func (m *FieldFlushMeta) XXX_Size() int {
	return xxx_messageInfo_FieldFlushMeta.Size(m)
}
func (m *FieldFlushMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldFlushMeta.DiscardUnknown(m)
}

var xxx_messageInfo_FieldFlushMeta proto.InternalMessageInfo

func (m *FieldFlushMeta) GetFieldID() int32 {
	if m != nil {
		return m.FieldID
	}
	return 0
}

func (m *FieldFlushMeta) GetBinlogPaths() []string {
	if m != nil {
		return m.BinlogPaths
	}
	return nil
}

//etcd meta
type SegmentFlushMeta struct {
	SegmentID            int64             `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	IsClosed             bool              `protobuf:"varint,2,opt,name=is_closed,json=isClosed,proto3" json:"is_closed,omitempty"`
	OpenTime             uint64            `protobuf:"varint,3,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	CloseTime            uint64            `protobuf:"varint,4,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	Fields               []*FieldFlushMeta `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SegmentFlushMeta) Reset()         { *m = SegmentFlushMeta{} }
func (m *SegmentFlushMeta) String() string { return proto.CompactTextString(m) }
func (*SegmentFlushMeta) ProtoMessage()    {}
func (*SegmentFlushMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec4781d562c3e8f, []int{1}
}

func (m *SegmentFlushMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentFlushMeta.Unmarshal(m, b)
}
func (m *SegmentFlushMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentFlushMeta.Marshal(b, m, deterministic)
}
func (m *SegmentFlushMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentFlushMeta.Merge(m, src)
}
func (m *SegmentFlushMeta) XXX_Size() int {
	return xxx_messageInfo_SegmentFlushMeta.Size(m)
}
func (m *SegmentFlushMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentFlushMeta.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentFlushMeta proto.InternalMessageInfo

func (m *SegmentFlushMeta) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentFlushMeta) GetIsClosed() bool {
	if m != nil {
		return m.IsClosed
	}
	return false
}

func (m *SegmentFlushMeta) GetOpenTime() uint64 {
	if m != nil {
		return m.OpenTime
	}
	return 0
}

func (m *SegmentFlushMeta) GetCloseTime() uint64 {
	if m != nil {
		return m.CloseTime
	}
	return 0
}

func (m *SegmentFlushMeta) GetFields() []*FieldFlushMeta {
	if m != nil {
		return m.Fields
	}
	return nil
}

type DDLFlushMeta struct {
	CollectionID         int64    `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	BinlogPaths          []string `protobuf:"bytes,2,rep,name=binlog_paths,json=binlogPaths,proto3" json:"binlog_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DDLFlushMeta) Reset()         { *m = DDLFlushMeta{} }
func (m *DDLFlushMeta) String() string { return proto.CompactTextString(m) }
func (*DDLFlushMeta) ProtoMessage()    {}
func (*DDLFlushMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec4781d562c3e8f, []int{2}
}

func (m *DDLFlushMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DDLFlushMeta.Unmarshal(m, b)
}
func (m *DDLFlushMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DDLFlushMeta.Marshal(b, m, deterministic)
}
func (m *DDLFlushMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DDLFlushMeta.Merge(m, src)
}
func (m *DDLFlushMeta) XXX_Size() int {
	return xxx_messageInfo_DDLFlushMeta.Size(m)
}
func (m *DDLFlushMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_DDLFlushMeta.DiscardUnknown(m)
}

var xxx_messageInfo_DDLFlushMeta proto.InternalMessageInfo

func (m *DDLFlushMeta) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *DDLFlushMeta) GetBinlogPaths() []string {
	if m != nil {
		return m.BinlogPaths
	}
	return nil
}

func init() {
	proto.RegisterType((*FieldFlushMeta)(nil), "milvus.proto.service.FieldFlushMeta")
	proto.RegisterType((*SegmentFlushMeta)(nil), "milvus.proto.service.SegmentFlushMeta")
	proto.RegisterType((*DDLFlushMeta)(nil), "milvus.proto.service.DDLFlushMeta")
}

func init() { proto.RegisterFile("write_node.proto", fileDescriptor_8ec4781d562c3e8f) }

var fileDescriptor_8ec4781d562c3e8f = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0x49, 0xd3, 0xf6, 0xdf, 0x6c, 0xcb, 0x9f, 0x12, 0x3c, 0x04, 0x54, 0x88, 0xc1, 0x43,
	0x2e, 0x26, 0xa0, 0x57, 0x0f, 0x52, 0x4b, 0x41, 0xb0, 0x20, 0x51, 0x2f, 0x5e, 0x42, 0x93, 0x8c,
	0xcd, 0xc0, 0x66, 0x37, 0xec, 0x4e, 0x2a, 0xf4, 0x0b, 0xfa, 0xb5, 0x24, 0x9b, 0x6a, 0x28, 0x78,
	0xf0, 0xf8, 0x7e, 0x8f, 0x19, 0xde, 0x9b, 0x61, 0xf3, 0x0f, 0x85, 0x04, 0xa9, 0x90, 0x05, 0x44,
	0xb5, 0x92, 0x24, 0xdd, 0x93, 0x0a, 0xf9, 0xae, 0xd1, 0x9d, 0x8a, 0x34, 0xa8, 0x1d, 0xe6, 0x10,
	0xac, 0xd9, 0xff, 0x15, 0x02, 0x2f, 0x56, 0xbc, 0xd1, 0xe5, 0x1a, 0x68, 0xe3, 0x7a, 0xec, 0xdf,
	0x7b, 0x4b, 0x1e, 0x96, 0x9e, 0xe5, 0x5b, 0xe1, 0x28, 0xf9, 0x96, 0xee, 0x05, 0x9b, 0x65, 0x28,
	0xb8, 0xdc, 0xa6, 0xf5, 0x86, 0x4a, 0xed, 0x0d, 0x7c, 0x3b, 0x74, 0x92, 0x69, 0xc7, 0x9e, 0x5a,
	0x14, 0x7c, 0x5a, 0x6c, 0xfe, 0x0c, 0xdb, 0x0a, 0x04, 0xf5, 0x1b, 0xcf, 0x98, 0xa3, 0x3b, 0x76,
	0xd8, 0x69, 0x27, 0x3d, 0x70, 0x4f, 0x99, 0x83, 0x3a, 0xcd, 0xb9, 0xd4, 0x50, 0x78, 0x03, 0xdf,
	0x0a, 0x27, 0xc9, 0x04, 0xf5, 0xbd, 0xd1, 0xad, 0x29, 0x6b, 0x10, 0x29, 0x61, 0x05, 0x9e, 0xed,
	0x5b, 0xe1, 0x30, 0x99, 0xb4, 0xe0, 0x05, 0x2b, 0x70, 0xcf, 0x19, 0x33, 0x63, 0x9d, 0x3b, 0x34,
	0xae, 0x63, 0x88, 0xb1, 0x6f, 0xd9, 0xd8, 0x24, 0xd7, 0xde, 0xc8, 0xb7, 0xc3, 0xe9, 0xf5, 0x65,
	0xf4, 0xdb, 0x05, 0xa2, 0xe3, 0xfa, 0xc9, 0x61, 0x26, 0x78, 0x65, 0xb3, 0xe5, 0xf2, 0xb1, 0x2f,
	0x11, 0xb0, 0x59, 0x2e, 0x39, 0x87, 0x9c, 0x50, 0x8a, 0x9f, 0x1e, 0x47, 0xec, 0x0f, 0x07, 0x5a,
	0x2c, 0xde, 0xee, 0xb6, 0x48, 0x65, 0x93, 0x45, 0xb9, 0xac, 0xe2, 0x3d, 0x72, 0x8e, 0x7b, 0x82,
	0xbc, 0x8c, 0xbb, 0x6c, 0x57, 0x05, 0x6a, 0x52, 0x98, 0x35, 0x04, 0x45, 0x8c, 0x82, 0x40, 0x89,
	0x0d, 0x8f, 0x4d, 0xe0, 0xd8, 0x7c, 0x54, 0xd5, 0x59, 0x36, 0x36, 0xfa, 0xe6, 0x2b, 0x00, 0x00,
	0xff, 0xff, 0x57, 0x2d, 0x9a, 0xbc, 0xe4, 0x01, 0x00, 0x00,
}
