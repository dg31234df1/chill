// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package commonpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_SUCCESS                 ErrorCode = 0
	ErrorCode_ERROR_CODE_UNEXPECTED_ERROR        ErrorCode = 1
	ErrorCode_ERROR_CODE_CONNECT_FAILED          ErrorCode = 2
	ErrorCode_ERROR_CODE_PERMISSION_DENIED       ErrorCode = 3
	ErrorCode_ERROR_CODE_COLLECTION_NOT_EXISTS   ErrorCode = 4
	ErrorCode_ERROR_CODE_ILLEGAL_ARGUMENT        ErrorCode = 5
	ErrorCode_ERROR_CODE_ILLEGAL_DIMENSION       ErrorCode = 7
	ErrorCode_ERROR_CODE_ILLEGAL_INDEX_TYPE      ErrorCode = 8
	ErrorCode_ERROR_CODE_ILLEGAL_COLLECTION_NAME ErrorCode = 9
	ErrorCode_ERROR_CODE_ILLEGAL_TOPK            ErrorCode = 10
	ErrorCode_ERROR_CODE_ILLEGAL_ROWRECORD       ErrorCode = 11
	ErrorCode_ERROR_CODE_ILLEGAL_VECTOR_ID       ErrorCode = 12
	ErrorCode_ERROR_CODE_ILLEGAL_SEARCH_RESULT   ErrorCode = 13
	ErrorCode_ERROR_CODE_FILE_NOT_FOUND          ErrorCode = 14
	ErrorCode_ERROR_CODE_META_FAILED             ErrorCode = 15
	ErrorCode_ERROR_CODE_CACHE_FAILED            ErrorCode = 16
	ErrorCode_ERROR_CODE_CANNOT_CREATE_FOLDER    ErrorCode = 17
	ErrorCode_ERROR_CODE_CANNOT_CREATE_FILE      ErrorCode = 18
	ErrorCode_ERROR_CODE_CANNOT_DELETE_FOLDER    ErrorCode = 19
	ErrorCode_ERROR_CODE_CANNOT_DELETE_FILE      ErrorCode = 20
	ErrorCode_ERROR_CODE_BUILD_INDEX_ERROR       ErrorCode = 21
	ErrorCode_ERROR_CODE_ILLEGAL_NLIST           ErrorCode = 22
	ErrorCode_ERROR_CODE_ILLEGAL_METRIC_TYPE     ErrorCode = 23
	ErrorCode_ERROR_CODE_OUT_OF_MEMORY           ErrorCode = 24
	ErrorCode_ERROR_CODE_INDEX_NOT_EXIST         ErrorCode = 25
	// internal error code.
	ErrorCode_ERROR_CODE_DD_REQUEST_RACE ErrorCode = 1000
)

var ErrorCode_name = map[int32]string{
	0:    "ERROR_CODE_SUCCESS",
	1:    "ERROR_CODE_UNEXPECTED_ERROR",
	2:    "ERROR_CODE_CONNECT_FAILED",
	3:    "ERROR_CODE_PERMISSION_DENIED",
	4:    "ERROR_CODE_COLLECTION_NOT_EXISTS",
	5:    "ERROR_CODE_ILLEGAL_ARGUMENT",
	7:    "ERROR_CODE_ILLEGAL_DIMENSION",
	8:    "ERROR_CODE_ILLEGAL_INDEX_TYPE",
	9:    "ERROR_CODE_ILLEGAL_COLLECTION_NAME",
	10:   "ERROR_CODE_ILLEGAL_TOPK",
	11:   "ERROR_CODE_ILLEGAL_ROWRECORD",
	12:   "ERROR_CODE_ILLEGAL_VECTOR_ID",
	13:   "ERROR_CODE_ILLEGAL_SEARCH_RESULT",
	14:   "ERROR_CODE_FILE_NOT_FOUND",
	15:   "ERROR_CODE_META_FAILED",
	16:   "ERROR_CODE_CACHE_FAILED",
	17:   "ERROR_CODE_CANNOT_CREATE_FOLDER",
	18:   "ERROR_CODE_CANNOT_CREATE_FILE",
	19:   "ERROR_CODE_CANNOT_DELETE_FOLDER",
	20:   "ERROR_CODE_CANNOT_DELETE_FILE",
	21:   "ERROR_CODE_BUILD_INDEX_ERROR",
	22:   "ERROR_CODE_ILLEGAL_NLIST",
	23:   "ERROR_CODE_ILLEGAL_METRIC_TYPE",
	24:   "ERROR_CODE_OUT_OF_MEMORY",
	25:   "ERROR_CODE_INDEX_NOT_EXIST",
	1000: "ERROR_CODE_DD_REQUEST_RACE",
}

var ErrorCode_value = map[string]int32{
	"ERROR_CODE_SUCCESS":                 0,
	"ERROR_CODE_UNEXPECTED_ERROR":        1,
	"ERROR_CODE_CONNECT_FAILED":          2,
	"ERROR_CODE_PERMISSION_DENIED":       3,
	"ERROR_CODE_COLLECTION_NOT_EXISTS":   4,
	"ERROR_CODE_ILLEGAL_ARGUMENT":        5,
	"ERROR_CODE_ILLEGAL_DIMENSION":       7,
	"ERROR_CODE_ILLEGAL_INDEX_TYPE":      8,
	"ERROR_CODE_ILLEGAL_COLLECTION_NAME": 9,
	"ERROR_CODE_ILLEGAL_TOPK":            10,
	"ERROR_CODE_ILLEGAL_ROWRECORD":       11,
	"ERROR_CODE_ILLEGAL_VECTOR_ID":       12,
	"ERROR_CODE_ILLEGAL_SEARCH_RESULT":   13,
	"ERROR_CODE_FILE_NOT_FOUND":          14,
	"ERROR_CODE_META_FAILED":             15,
	"ERROR_CODE_CACHE_FAILED":            16,
	"ERROR_CODE_CANNOT_CREATE_FOLDER":    17,
	"ERROR_CODE_CANNOT_CREATE_FILE":      18,
	"ERROR_CODE_CANNOT_DELETE_FOLDER":    19,
	"ERROR_CODE_CANNOT_DELETE_FILE":      20,
	"ERROR_CODE_BUILD_INDEX_ERROR":       21,
	"ERROR_CODE_ILLEGAL_NLIST":           22,
	"ERROR_CODE_ILLEGAL_METRIC_TYPE":     23,
	"ERROR_CODE_OUT_OF_MEMORY":           24,
	"ERROR_CODE_INDEX_NOT_EXIST":         25,
	"ERROR_CODE_DD_REQUEST_RACE":         1000,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

type IndexState int32

const (
	IndexState_INDEX_STATE_NONE        IndexState = 0
	IndexState_INDEX_STATE_UNISSUED    IndexState = 1
	IndexState_INDEX_STATE_IN_PROGRESS IndexState = 2
	IndexState_INDEX_STATE_FINISHED    IndexState = 3
	IndexState_INDEX_STATE_FAILED      IndexState = 4
	IndexState_INDEX_STATE_DELETED     IndexState = 5
)

var IndexState_name = map[int32]string{
	0: "INDEX_STATE_NONE",
	1: "INDEX_STATE_UNISSUED",
	2: "INDEX_STATE_IN_PROGRESS",
	3: "INDEX_STATE_FINISHED",
	4: "INDEX_STATE_FAILED",
	5: "INDEX_STATE_DELETED",
}

var IndexState_value = map[string]int32{
	"INDEX_STATE_NONE":        0,
	"INDEX_STATE_UNISSUED":    1,
	"INDEX_STATE_IN_PROGRESS": 2,
	"INDEX_STATE_FINISHED":    3,
	"INDEX_STATE_FAILED":      4,
	"INDEX_STATE_DELETED":     5,
}

func (x IndexState) String() string {
	return proto.EnumName(IndexState_name, int32(x))
}

func (IndexState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

type SegmentState int32

const (
	SegmentState_SegmentNone     SegmentState = 0
	SegmentState_SegmentNotExist SegmentState = 1
	SegmentState_SegmentGrowing  SegmentState = 2
	SegmentState_SegmentSealed   SegmentState = 3
	SegmentState_SegmentFlushed  SegmentState = 4
)

var SegmentState_name = map[int32]string{
	0: "SegmentNone",
	1: "SegmentNotExist",
	2: "SegmentGrowing",
	3: "SegmentSealed",
	4: "SegmentFlushed",
}

var SegmentState_value = map[string]int32{
	"SegmentNone":     0,
	"SegmentNotExist": 1,
	"SegmentGrowing":  2,
	"SegmentSealed":   3,
	"SegmentFlushed":  4,
}

func (x SegmentState) String() string {
	return proto.EnumName(SegmentState_name, int32(x))
}

func (SegmentState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{2}
}

type MsgType int32

const (
	MsgType_None MsgType = 0
	// DEFINITION REQUESTS: COLLECTION
	MsgType_CreateCollection   MsgType = 100
	MsgType_DropCollection     MsgType = 101
	MsgType_HasCollection      MsgType = 102
	MsgType_DescribeCollection MsgType = 103
	MsgType_ShowCollections    MsgType = 104
	MsgType_GetSystemConfigs   MsgType = 105
	MsgType_LoadCollection     MsgType = 106
	MsgType_ReleaseCollection  MsgType = 107
	// DEFINITION REQUESTS: PARTITION
	MsgType_CreatePartition   MsgType = 200
	MsgType_DropPartition     MsgType = 201
	MsgType_HasPartition      MsgType = 202
	MsgType_DescribePartition MsgType = 203
	MsgType_ShowPartitions    MsgType = 204
	MsgType_LoadPartitions    MsgType = 205
	MsgType_ReleasePartitions MsgType = 206
	// DEFINE REQUESTS: SEGMENT
	MsgType_ShowSegments    MsgType = 250
	MsgType_DescribeSegment MsgType = 251
	// DEFINITION REQUESTS: INDEX
	MsgType_CreateIndex   MsgType = 300
	MsgType_DescribeIndex MsgType = 301
	MsgType_DropIndex     MsgType = 302
	// MANIPULATION REQUESTS
	MsgType_Insert MsgType = 400
	MsgType_Delete MsgType = 401
	MsgType_Flush  MsgType = 402
	// QUERY
	MsgType_Search                  MsgType = 500
	MsgType_SearchResult            MsgType = 501
	MsgType_GetIndexState           MsgType = 502
	MsgType_GetCollectionStatistics MsgType = 503
	MsgType_GetPartitionStatistics  MsgType = 504
	// DATA SERVICE
	MsgType_SegmentInfo MsgType = 600
	// SYSTEM CONTROL
	MsgType_TimeTick          MsgType = 1200
	MsgType_QueryNodeStats    MsgType = 1201
	MsgType_LoadIndex         MsgType = 1202
	MsgType_RequestID         MsgType = 1203
	MsgType_RequestTSO        MsgType = 1204
	MsgType_AllocateSegment   MsgType = 1205
	MsgType_SegmentStatistics MsgType = 1206
	MsgType_SegmentFlushDone  MsgType = 1207
)

var MsgType_name = map[int32]string{
	0:    "None",
	100:  "CreateCollection",
	101:  "DropCollection",
	102:  "HasCollection",
	103:  "DescribeCollection",
	104:  "ShowCollections",
	105:  "GetSystemConfigs",
	106:  "LoadCollection",
	107:  "ReleaseCollection",
	200:  "CreatePartition",
	201:  "DropPartition",
	202:  "HasPartition",
	203:  "DescribePartition",
	204:  "ShowPartitions",
	205:  "LoadPartitions",
	206:  "ReleasePartitions",
	250:  "ShowSegments",
	251:  "DescribeSegment",
	300:  "CreateIndex",
	301:  "DescribeIndex",
	302:  "DropIndex",
	400:  "Insert",
	401:  "Delete",
	402:  "Flush",
	500:  "Search",
	501:  "SearchResult",
	502:  "GetIndexState",
	503:  "GetCollectionStatistics",
	504:  "GetPartitionStatistics",
	600:  "SegmentInfo",
	1200: "TimeTick",
	1201: "QueryNodeStats",
	1202: "LoadIndex",
	1203: "RequestID",
	1204: "RequestTSO",
	1205: "AllocateSegment",
	1206: "SegmentStatistics",
	1207: "SegmentFlushDone",
}

var MsgType_value = map[string]int32{
	"None":                    0,
	"CreateCollection":        100,
	"DropCollection":          101,
	"HasCollection":           102,
	"DescribeCollection":      103,
	"ShowCollections":         104,
	"GetSystemConfigs":        105,
	"LoadCollection":          106,
	"ReleaseCollection":       107,
	"CreatePartition":         200,
	"DropPartition":           201,
	"HasPartition":            202,
	"DescribePartition":       203,
	"ShowPartitions":          204,
	"LoadPartitions":          205,
	"ReleasePartitions":       206,
	"ShowSegments":            250,
	"DescribeSegment":         251,
	"CreateIndex":             300,
	"DescribeIndex":           301,
	"DropIndex":               302,
	"Insert":                  400,
	"Delete":                  401,
	"Flush":                   402,
	"Search":                  500,
	"SearchResult":            501,
	"GetIndexState":           502,
	"GetCollectionStatistics": 503,
	"GetPartitionStatistics":  504,
	"SegmentInfo":             600,
	"TimeTick":                1200,
	"QueryNodeStats":          1201,
	"LoadIndex":               1202,
	"RequestID":               1203,
	"RequestTSO":              1204,
	"AllocateSegment":         1205,
	"SegmentStatistics":       1206,
	"SegmentFlushDone":        1207,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}

func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{3}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Status struct {
	ErrorCode            ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=milvus.proto.common.ErrorCode" json:"error_code,omitempty"`
	Reason               string    `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetErrorCode() ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ErrorCode_ERROR_CODE_SUCCESS
}

func (m *Status) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type KeyValuePair struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValuePair) Reset()         { *m = KeyValuePair{} }
func (m *KeyValuePair) String() string { return proto.CompactTextString(m) }
func (*KeyValuePair) ProtoMessage()    {}
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{2}
}

func (m *KeyValuePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValuePair.Unmarshal(m, b)
}
func (m *KeyValuePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValuePair.Marshal(b, m, deterministic)
}
func (m *KeyValuePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValuePair.Merge(m, src)
}
func (m *KeyValuePair) XXX_Size() int {
	return xxx_messageInfo_KeyValuePair.Size(m)
}
func (m *KeyValuePair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValuePair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValuePair proto.InternalMessageInfo

func (m *KeyValuePair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValuePair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Blob struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Blob) Reset()         { *m = Blob{} }
func (m *Blob) String() string { return proto.CompactTextString(m) }
func (*Blob) ProtoMessage()    {}
func (*Blob) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{3}
}

func (m *Blob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blob.Unmarshal(m, b)
}
func (m *Blob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blob.Marshal(b, m, deterministic)
}
func (m *Blob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blob.Merge(m, src)
}
func (m *Blob) XXX_Size() int {
	return xxx_messageInfo_Blob.Size(m)
}
func (m *Blob) XXX_DiscardUnknown() {
	xxx_messageInfo_Blob.DiscardUnknown(m)
}

var xxx_messageInfo_Blob proto.InternalMessageInfo

func (m *Blob) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Address struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int64    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{4}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Address) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

type MsgBase struct {
	MsgType              MsgType  `protobuf:"varint,1,opt,name=msg_type,json=msgType,proto3,enum=milvus.proto.common.MsgType" json:"msg_type,omitempty"`
	MsgID                int64    `protobuf:"varint,2,opt,name=msgID,proto3" json:"msgID,omitempty"`
	Timestamp            uint64   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SourceID             int64    `protobuf:"varint,4,opt,name=sourceID,proto3" json:"sourceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgBase) Reset()         { *m = MsgBase{} }
func (m *MsgBase) String() string { return proto.CompactTextString(m) }
func (*MsgBase) ProtoMessage()    {}
func (*MsgBase) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{5}
}

func (m *MsgBase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgBase.Unmarshal(m, b)
}
func (m *MsgBase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgBase.Marshal(b, m, deterministic)
}
func (m *MsgBase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBase.Merge(m, src)
}
func (m *MsgBase) XXX_Size() int {
	return xxx_messageInfo_MsgBase.Size(m)
}
func (m *MsgBase) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBase.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBase proto.InternalMessageInfo

func (m *MsgBase) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_None
}

func (m *MsgBase) GetMsgID() int64 {
	if m != nil {
		return m.MsgID
	}
	return 0
}

func (m *MsgBase) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgBase) GetSourceID() int64 {
	if m != nil {
		return m.SourceID
	}
	return 0
}

// Don't Modify This. @czs
type MsgHeader struct {
	Base                 *MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgHeader) Reset()         { *m = MsgHeader{} }
func (m *MsgHeader) String() string { return proto.CompactTextString(m) }
func (*MsgHeader) ProtoMessage()    {}
func (*MsgHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{6}
}

func (m *MsgHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgHeader.Unmarshal(m, b)
}
func (m *MsgHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgHeader.Marshal(b, m, deterministic)
}
func (m *MsgHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgHeader.Merge(m, src)
}
func (m *MsgHeader) XXX_Size() int {
	return xxx_messageInfo_MsgHeader.Size(m)
}
func (m *MsgHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgHeader.DiscardUnknown(m)
}

var xxx_messageInfo_MsgHeader proto.InternalMessageInfo

func (m *MsgHeader) GetBase() *MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func init() {
	proto.RegisterEnum("milvus.proto.common.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("milvus.proto.common.IndexState", IndexState_name, IndexState_value)
	proto.RegisterEnum("milvus.proto.common.SegmentState", SegmentState_name, SegmentState_value)
	proto.RegisterEnum("milvus.proto.common.MsgType", MsgType_name, MsgType_value)
	proto.RegisterType((*Empty)(nil), "milvus.proto.common.Empty")
	proto.RegisterType((*Status)(nil), "milvus.proto.common.Status")
	proto.RegisterType((*KeyValuePair)(nil), "milvus.proto.common.KeyValuePair")
	proto.RegisterType((*Blob)(nil), "milvus.proto.common.Blob")
	proto.RegisterType((*Address)(nil), "milvus.proto.common.Address")
	proto.RegisterType((*MsgBase)(nil), "milvus.proto.common.MsgBase")
	proto.RegisterType((*MsgHeader)(nil), "milvus.proto.common.MsgHeader")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 1278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x55, 0xcb, 0x6e, 0xdb, 0x46,
	0x17, 0x0e, 0x25, 0xf9, 0xc2, 0xe3, 0xdb, 0x78, 0xec, 0xd8, 0x4a, 0xe2, 0x24, 0xfe, 0xf5, 0x17,
	0x45, 0x60, 0x20, 0x76, 0xd1, 0x02, 0xed, 0x2a, 0x40, 0x65, 0x72, 0x24, 0x13, 0xa1, 0x48, 0x65,
	0x48, 0xa5, 0x49, 0x37, 0x04, 0x25, 0x4d, 0x64, 0x36, 0x94, 0xa8, 0x72, 0x46, 0x49, 0x94, 0xa7,
	0x68, 0xf3, 0x0c, 0x5d, 0xb6, 0x45, 0xef, 0x7d, 0x85, 0xde, 0xd7, 0x7d, 0x84, 0x02, 0xdd, 0x36,
	0x6d, 0xd1, 0x6e, 0x8a, 0x21, 0x29, 0x8b, 0x16, 0xe4, 0x1d, 0xcf, 0x77, 0xce, 0xf9, 0xce, 0x77,
	0xbe, 0x19, 0x92, 0xb0, 0xda, 0x89, 0xfa, 0xfd, 0x68, 0x70, 0x38, 0x8c, 0x23, 0x11, 0xe1, 0xad,
	0x7e, 0x10, 0x3e, 0x19, 0xf1, 0x34, 0x3a, 0x4c, 0x53, 0x95, 0x25, 0x58, 0x20, 0xfd, 0xa1, 0x18,
	0x57, 0x3c, 0x58, 0x74, 0x84, 0x2f, 0x46, 0x1c, 0xdf, 0x01, 0x60, 0x71, 0x1c, 0xc5, 0x5e, 0x27,
	0xea, 0xb2, 0xb2, 0xb2, 0xaf, 0xdc, 0x5a, 0x7f, 0xfd, 0xc6, 0xe1, 0x9c, 0xe6, 0x43, 0x22, 0xcb,
	0xb4, 0xa8, 0xcb, 0xa8, 0xca, 0x26, 0x8f, 0x78, 0x07, 0x16, 0x63, 0xe6, 0xf3, 0x68, 0x50, 0x2e,
	0xec, 0x2b, 0xb7, 0x54, 0x9a, 0x45, 0x95, 0x37, 0x61, 0xf5, 0x2e, 0x1b, 0xdf, 0xf7, 0xc3, 0x11,
	0x6b, 0xfa, 0x41, 0x8c, 0x11, 0x14, 0x1f, 0xb3, 0x71, 0xc2, 0xaf, 0x52, 0xf9, 0x88, 0xb7, 0x61,
	0xe1, 0x89, 0x4c, 0x67, 0x8d, 0x69, 0x50, 0xd9, 0x83, 0xd2, 0x71, 0x18, 0xb5, 0xa7, 0x59, 0xd9,
	0xb1, 0x3a, 0xc9, 0xde, 0x86, 0xa5, 0x6a, 0xb7, 0x1b, 0x33, 0xce, 0xf1, 0x3a, 0x14, 0x82, 0x61,
	0xc6, 0x57, 0x08, 0x86, 0x18, 0x43, 0x69, 0x18, 0xc5, 0x22, 0x61, 0x2b, 0xd2, 0xe4, 0xb9, 0xf2,
	0x42, 0x81, 0xa5, 0x06, 0xef, 0x1d, 0xfb, 0x9c, 0xe1, 0xb7, 0x60, 0xb9, 0xcf, 0x7b, 0x9e, 0x18,
	0x0f, 0x27, 0x5b, 0xee, 0xcd, 0xdd, 0xb2, 0xc1, 0x7b, 0xee, 0x78, 0xc8, 0xe8, 0x52, 0x3f, 0x7d,
	0x90, 0x4a, 0xfa, 0xbc, 0x67, 0xe8, 0x19, 0x73, 0x1a, 0xe0, 0x3d, 0x50, 0x45, 0xd0, 0x67, 0x5c,
	0xf8, 0xfd, 0x61, 0xb9, 0xb8, 0xaf, 0xdc, 0x2a, 0xd1, 0x29, 0x80, 0xaf, 0xc2, 0x32, 0x8f, 0x46,
	0x71, 0x87, 0x19, 0x7a, 0xb9, 0x94, 0xb4, 0x9d, 0xc5, 0x95, 0x3b, 0xa0, 0x36, 0x78, 0xef, 0x84,
	0xf9, 0x5d, 0x16, 0xe3, 0xd7, 0xa0, 0xd4, 0xf6, 0x79, 0xaa, 0x68, 0xe5, 0x62, 0x45, 0x72, 0x03,
	0x9a, 0x54, 0x1e, 0xfc, 0xbe, 0x08, 0x2a, 0xc9, 0xd9, 0x8f, 0x09, 0xa5, 0x36, 0xf5, 0x34, 0x5b,
	0x27, 0x9e, 0xd3, 0xd2, 0x34, 0xe2, 0x38, 0xe8, 0x12, 0xbe, 0x09, 0xd7, 0x72, 0x78, 0xcb, 0x22,
	0x0f, 0x9a, 0x44, 0x73, 0x89, 0xee, 0x25, 0x28, 0x52, 0xf0, 0x75, 0xb8, 0x92, 0x2b, 0xd0, 0x6c,
	0xcb, 0x22, 0x9a, 0xeb, 0xd5, 0xaa, 0x86, 0x49, 0x74, 0x54, 0xc0, 0xfb, 0xb0, 0x97, 0x4b, 0x37,
	0x09, 0x6d, 0x18, 0x8e, 0x63, 0xd8, 0x96, 0xa7, 0x13, 0xcb, 0x20, 0x3a, 0x2a, 0xe2, 0x57, 0x60,
	0xff, 0x1c, 0x81, 0x69, 0x12, 0xcd, 0x95, 0x15, 0x96, 0xed, 0x7a, 0xe4, 0x81, 0xe1, 0xb8, 0x0e,
	0x2a, 0xcd, 0xe8, 0x30, 0x4c, 0x93, 0xd4, 0xab, 0xa6, 0x57, 0xa5, 0xf5, 0x56, 0x83, 0x58, 0x2e,
	0x5a, 0x98, 0x19, 0x34, 0x29, 0xd0, 0x8d, 0x06, 0xb1, 0xe4, 0x3c, 0xb4, 0x84, 0xff, 0x07, 0xd7,
	0xe7, 0x54, 0x18, 0x96, 0x4e, 0x1e, 0x78, 0xee, 0xc3, 0x26, 0x41, 0xcb, 0xf8, 0x55, 0xa8, 0xcc,
	0x29, 0xc9, 0x6b, 0xaa, 0x36, 0x08, 0x52, 0xf1, 0x35, 0xd8, 0x9d, 0x53, 0xe7, 0xda, 0xcd, 0xbb,
	0x08, 0x2e, 0x50, 0x42, 0xed, 0x77, 0x28, 0xd1, 0x6c, 0xaa, 0xa3, 0x95, 0x0b, 0x2a, 0xee, 0x13,
	0xcd, 0xb5, 0xa9, 0x67, 0xe8, 0x68, 0x75, 0xc6, 0x94, 0x49, 0x85, 0x43, 0xaa, 0x54, 0x3b, 0xf1,
	0x28, 0x71, 0x5a, 0xa6, 0x8b, 0xd6, 0x66, 0xbc, 0xaf, 0x19, 0x26, 0x49, 0x4c, 0xab, 0xd9, 0x2d,
	0x4b, 0x47, 0xeb, 0xf8, 0x2a, 0xec, 0xe4, 0xd2, 0x0d, 0xe2, 0x56, 0x27, 0xe7, 0xb2, 0x31, 0xb3,
	0x81, 0x56, 0xd5, 0x4e, 0xc8, 0x24, 0x89, 0xf0, 0xff, 0xe1, 0xe6, 0xb9, 0xa4, 0x25, 0x59, 0x35,
	0x4a, 0xaa, 0x2e, 0xf1, 0x6a, 0xb6, 0xa9, 0x13, 0x8a, 0x36, 0x67, 0xec, 0x9c, 0x29, 0x32, 0x4c,
	0x82, 0xf0, 0x7c, 0x1e, 0x9d, 0x98, 0x64, 0xca, 0xb3, 0x35, 0x9f, 0x67, 0x52, 0x24, 0x79, 0xb6,
	0x67, 0xfc, 0x3a, 0x6e, 0x19, 0xa6, 0x9e, 0x9d, 0x5b, 0x7a, 0x0b, 0x2f, 0xe3, 0x3d, 0x28, 0xcf,
	0xf1, 0xcb, 0x32, 0x0d, 0xc7, 0x45, 0x3b, 0xb8, 0x02, 0x37, 0xe6, 0x64, 0x1b, 0xc4, 0xa5, 0x86,
	0x96, 0x1e, 0xfd, 0xee, 0x0c, 0x83, 0xdd, 0x72, 0x3d, 0xbb, 0xe6, 0x35, 0x48, 0xc3, 0xa6, 0x0f,
	0x51, 0x19, 0xdf, 0x80, 0xab, 0x79, 0x86, 0x64, 0xf6, 0xd9, 0xfd, 0x44, 0x57, 0xf0, 0xcd, 0x73,
	0x79, 0x5d, 0xf7, 0x28, 0xb9, 0xd7, 0x22, 0x8e, 0xeb, 0xd1, 0xaa, 0x46, 0xd0, 0x6f, 0x4b, 0x07,
	0x1f, 0x29, 0x00, 0xc6, 0xa0, 0xcb, 0x9e, 0xc9, 0xaf, 0xa5, 0xfc, 0x16, 0xa0, 0x94, 0xc4, 0x71,
	0xa5, 0x5f, 0x96, 0x6d, 0x11, 0x74, 0x09, 0x97, 0x61, 0x3b, 0x8f, 0xb6, 0x2c, 0xc3, 0x71, 0x5a,
	0x44, 0x47, 0x8a, 0x3c, 0xae, 0x7c, 0xc6, 0xb0, 0xbc, 0x26, 0xb5, 0xeb, 0x54, 0xbe, 0xa3, 0x85,
	0xd9, 0xb6, 0x9a, 0x61, 0x19, 0xce, 0x49, 0xf2, 0x6e, 0xed, 0x00, 0x3e, 0x97, 0x49, 0x0f, 0xb8,
	0x84, 0x77, 0x61, 0x2b, 0x8f, 0xa7, 0x6e, 0xeb, 0x68, 0xe1, 0x20, 0x82, 0x55, 0x87, 0xf5, 0xfa,
	0x6c, 0x20, 0x52, 0x9d, 0x1b, 0xb0, 0x92, 0xc5, 0x56, 0x34, 0x60, 0xe8, 0x12, 0xde, 0x82, 0x8d,
	0x33, 0x40, 0x90, 0x67, 0x01, 0x17, 0x48, 0xc1, 0x18, 0xd6, 0x33, 0xb0, 0x1e, 0x47, 0x4f, 0x83,
	0x41, 0x0f, 0x15, 0xf0, 0x26, 0xac, 0x4d, 0x98, 0x98, 0x1f, 0xb2, 0x2e, 0x2a, 0xe6, 0xca, 0x6a,
	0xe1, 0x88, 0x9f, 0xb2, 0x2e, 0x2a, 0x1d, 0xbc, 0x5c, 0x48, 0xbe, 0xac, 0xc9, 0x07, 0x72, 0x19,
	0x4a, 0xd9, 0x94, 0x6d, 0x40, 0x5a, 0xcc, 0x7c, 0xc1, 0xb4, 0x28, 0x0c, 0x59, 0x47, 0x04, 0xd1,
	0x00, 0x75, 0x65, 0xbf, 0x1e, 0x47, 0xc3, 0x1c, 0xc6, 0xe4, 0x98, 0x13, 0x9f, 0xe7, 0xa0, 0x47,
	0x72, 0x69, 0x9d, 0xf1, 0x4e, 0x1c, 0xb4, 0xf3, 0xed, 0xbd, 0x44, 0xfa, 0x69, 0xf4, 0x74, 0x8a,
	0x71, 0x74, 0x2a, 0x27, 0xd5, 0x99, 0x70, 0xc6, 0x5c, 0xb0, 0xbe, 0x16, 0x0d, 0x1e, 0x05, 0x3d,
	0x8e, 0x02, 0x39, 0xc9, 0x8c, 0xfc, 0x6e, 0xae, 0xfd, 0x3d, 0x7c, 0x19, 0x36, 0x29, 0x0b, 0x99,
	0xcf, 0xf3, 0xac, 0x8f, 0xf1, 0x36, 0x6c, 0xa4, 0x52, 0x9b, 0x7e, 0x2c, 0x82, 0x04, 0xfc, 0x4e,
	0x3a, 0xb2, 0x26, 0xa5, 0x4e, 0xb1, 0xef, 0x15, 0xbc, 0x09, 0xab, 0x27, 0x3e, 0x9f, 0x42, 0x3f,
	0x28, 0x78, 0x07, 0x36, 0x27, 0x52, 0xa7, 0xf8, 0x8f, 0x0a, 0xde, 0x82, 0x75, 0x29, 0xf5, 0x0c,
	0xe3, 0xe8, 0xa7, 0x04, 0x94, 0xa2, 0x72, 0xe0, 0xcf, 0x09, 0x43, 0xa6, 0x2a, 0x87, 0xff, 0x92,
	0x0c, 0x93, 0x0c, 0x99, 0xdf, 0x1c, 0xfd, 0xa3, 0x48, 0xa5, 0x93, 0x61, 0x19, 0x8c, 0xfe, 0x55,
	0x30, 0x82, 0x95, 0x54, 0x7f, 0x72, 0x3b, 0xd1, 0xc7, 0x85, 0x44, 0x7b, 0x56, 0x97, 0x62, 0x9f,
	0x14, 0xf0, 0x3a, 0xa8, 0x72, 0x9f, 0x34, 0xfe, 0xb4, 0x80, 0x57, 0x60, 0xd1, 0x18, 0x70, 0x16,
	0x0b, 0xf4, 0x41, 0x51, 0x06, 0x3a, 0x0b, 0x99, 0x60, 0xe8, 0xc3, 0x22, 0x06, 0x58, 0x48, 0x4e,
	0x17, 0xbd, 0x48, 0x12, 0x0e, 0xf3, 0xe3, 0xce, 0x29, 0xfa, 0xa3, 0x98, 0x28, 0x4a, 0x02, 0xca,
	0xf8, 0x28, 0x14, 0xe8, 0xa5, 0xbc, 0x10, 0x6b, 0x75, 0x26, 0xa6, 0xaf, 0x05, 0xfa, 0xb3, 0x88,
	0xf7, 0x60, 0xb7, 0xce, 0xc4, 0xd4, 0x62, 0x99, 0x08, 0xb8, 0x08, 0x3a, 0x1c, 0xfd, 0x55, 0xc4,
	0xd7, 0x60, 0xa7, 0xce, 0xc4, 0xd9, 0xaa, 0xb9, 0xe4, 0xdf, 0x45, 0xb9, 0x4a, 0xb6, 0x98, 0x31,
	0x78, 0x14, 0xa1, 0x5f, 0x4b, 0x78, 0x0d, 0x96, 0xdd, 0xa0, 0xcf, 0xdc, 0xa0, 0xf3, 0x18, 0x7d,
	0xa6, 0x4a, 0x07, 0xef, 0x8d, 0x58, 0x3c, 0xb6, 0xa2, 0x2e, 0x93, 0xad, 0x1c, 0x7d, 0xae, 0xca,
	0xd5, 0xa4, 0xad, 0xe9, 0x6a, 0x5f, 0x24, 0x31, 0x65, 0xef, 0x8f, 0x18, 0x17, 0x86, 0x8e, 0xbe,
	0x54, 0xf1, 0x06, 0x40, 0x16, 0xbb, 0x8e, 0x8d, 0xbe, 0x52, 0xa5, 0x8f, 0xd5, 0x30, 0x8c, 0x3a,
	0xbe, 0x38, 0xf3, 0xf1, 0x6b, 0x55, 0x1e, 0x44, 0xee, 0xcd, 0xc9, 0x44, 0x7d, 0xa3, 0xe2, 0xcb,
	0x80, 0xf2, 0x97, 0x5e, 0x97, 0x17, 0xfc, 0x5b, 0xf5, 0xf8, 0xf8, 0xdd, 0xb7, 0x7b, 0x81, 0x38,
	0x1d, 0xb5, 0xe5, 0xcf, 0xf9, 0xe8, 0x79, 0x10, 0x86, 0xc1, 0x73, 0xc1, 0x3a, 0xa7, 0x47, 0xe9,
	0x8f, 0xfb, 0x76, 0x37, 0xe0, 0x22, 0x0e, 0xda, 0x23, 0xc1, 0xba, 0x47, 0xc1, 0x40, 0xb0, 0x78,
	0xe0, 0x87, 0x47, 0xc9, 0xdf, 0xfc, 0x28, 0xfd, 0x9b, 0x0f, 0xdb, 0xed, 0xc5, 0x24, 0x7e, 0xe3,
	0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x3e, 0x02, 0x01, 0xb0, 0x09, 0x00, 0x00,
}
