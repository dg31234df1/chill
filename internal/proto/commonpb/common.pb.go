// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package commonpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_SUCCESS                 ErrorCode = 0
	ErrorCode_UNEXPECTED_ERROR        ErrorCode = 1
	ErrorCode_CONNECT_FAILED          ErrorCode = 2
	ErrorCode_PERMISSION_DENIED       ErrorCode = 3
	ErrorCode_COLLECTION_NOT_EXISTS   ErrorCode = 4
	ErrorCode_ILLEGAL_ARGUMENT        ErrorCode = 5
	ErrorCode_ILLEGAL_DIMENSION       ErrorCode = 7
	ErrorCode_ILLEGAL_INDEX_TYPE      ErrorCode = 8
	ErrorCode_ILLEGAL_COLLECTION_NAME ErrorCode = 9
	ErrorCode_ILLEGAL_TOPK            ErrorCode = 10
	ErrorCode_ILLEGAL_ROWRECORD       ErrorCode = 11
	ErrorCode_ILLEGAL_VECTOR_ID       ErrorCode = 12
	ErrorCode_ILLEGAL_SEARCH_RESULT   ErrorCode = 13
	ErrorCode_FILE_NOT_FOUND          ErrorCode = 14
	ErrorCode_META_FAILED             ErrorCode = 15
	ErrorCode_CACHE_FAILED            ErrorCode = 16
	ErrorCode_CANNOT_CREATE_FOLDER    ErrorCode = 17
	ErrorCode_CANNOT_CREATE_FILE      ErrorCode = 18
	ErrorCode_CANNOT_DELETE_FOLDER    ErrorCode = 19
	ErrorCode_CANNOT_DELETE_FILE      ErrorCode = 20
	ErrorCode_BUILD_INDEX_ERROR       ErrorCode = 21
	ErrorCode_ILLEGAL_NLIST           ErrorCode = 22
	ErrorCode_ILLEGAL_METRIC_TYPE     ErrorCode = 23
	ErrorCode_OUT_OF_MEMORY           ErrorCode = 24
	// internal error code.
	ErrorCode_DD_REQUEST_RACE ErrorCode = 1000
)

var ErrorCode_name = map[int32]string{
	0:    "SUCCESS",
	1:    "UNEXPECTED_ERROR",
	2:    "CONNECT_FAILED",
	3:    "PERMISSION_DENIED",
	4:    "COLLECTION_NOT_EXISTS",
	5:    "ILLEGAL_ARGUMENT",
	7:    "ILLEGAL_DIMENSION",
	8:    "ILLEGAL_INDEX_TYPE",
	9:    "ILLEGAL_COLLECTION_NAME",
	10:   "ILLEGAL_TOPK",
	11:   "ILLEGAL_ROWRECORD",
	12:   "ILLEGAL_VECTOR_ID",
	13:   "ILLEGAL_SEARCH_RESULT",
	14:   "FILE_NOT_FOUND",
	15:   "META_FAILED",
	16:   "CACHE_FAILED",
	17:   "CANNOT_CREATE_FOLDER",
	18:   "CANNOT_CREATE_FILE",
	19:   "CANNOT_DELETE_FOLDER",
	20:   "CANNOT_DELETE_FILE",
	21:   "BUILD_INDEX_ERROR",
	22:   "ILLEGAL_NLIST",
	23:   "ILLEGAL_METRIC_TYPE",
	24:   "OUT_OF_MEMORY",
	1000: "DD_REQUEST_RACE",
}

var ErrorCode_value = map[string]int32{
	"SUCCESS":                 0,
	"UNEXPECTED_ERROR":        1,
	"CONNECT_FAILED":          2,
	"PERMISSION_DENIED":       3,
	"COLLECTION_NOT_EXISTS":   4,
	"ILLEGAL_ARGUMENT":        5,
	"ILLEGAL_DIMENSION":       7,
	"ILLEGAL_INDEX_TYPE":      8,
	"ILLEGAL_COLLECTION_NAME": 9,
	"ILLEGAL_TOPK":            10,
	"ILLEGAL_ROWRECORD":       11,
	"ILLEGAL_VECTOR_ID":       12,
	"ILLEGAL_SEARCH_RESULT":   13,
	"FILE_NOT_FOUND":          14,
	"META_FAILED":             15,
	"CACHE_FAILED":            16,
	"CANNOT_CREATE_FOLDER":    17,
	"CANNOT_CREATE_FILE":      18,
	"CANNOT_DELETE_FOLDER":    19,
	"CANNOT_DELETE_FILE":      20,
	"BUILD_INDEX_ERROR":       21,
	"ILLEGAL_NLIST":           22,
	"ILLEGAL_METRIC_TYPE":     23,
	"OUT_OF_MEMORY":           24,
	"DD_REQUEST_RACE":         1000,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

type MsgType int32

const (
	MsgType_kNone MsgType = 0
	// Definition Requests: collection
	MsgType_kCreateCollection   MsgType = 100
	MsgType_kDropCollection     MsgType = 101
	MsgType_kHasCollection      MsgType = 102
	MsgType_kDescribeCollection MsgType = 103
	MsgType_kShowCollections    MsgType = 104
	MsgType_kGetSysConfigs      MsgType = 105
	// Definition Requests: partition
	MsgType_kCreatePartition   MsgType = 200
	MsgType_kDropPartition     MsgType = 201
	MsgType_kHasPartition      MsgType = 202
	MsgType_kDescribePartition MsgType = 203
	MsgType_kShowPartitions    MsgType = 204
	// Definition Requests: Index
	MsgType_kCreateIndex           MsgType = 300
	MsgType_kDescribeIndex         MsgType = 301
	MsgType_kDescribeIndexProgress MsgType = 302
	// Manipulation Requests
	MsgType_kInsert MsgType = 400
	MsgType_kDelete MsgType = 401
	MsgType_kFlush  MsgType = 402
	// Query
	MsgType_kSearch       MsgType = 500
	MsgType_kSearchResult MsgType = 501
	// System Control
	MsgType_kTimeTick       MsgType = 1200
	MsgType_kQueryNodeStats MsgType = 1201
	MsgType_kLoadIndex      MsgType = 1202
)

var MsgType_name = map[int32]string{
	0:    "kNone",
	100:  "kCreateCollection",
	101:  "kDropCollection",
	102:  "kHasCollection",
	103:  "kDescribeCollection",
	104:  "kShowCollections",
	105:  "kGetSysConfigs",
	200:  "kCreatePartition",
	201:  "kDropPartition",
	202:  "kHasPartition",
	203:  "kDescribePartition",
	204:  "kShowPartitions",
	300:  "kCreateIndex",
	301:  "kDescribeIndex",
	302:  "kDescribeIndexProgress",
	400:  "kInsert",
	401:  "kDelete",
	402:  "kFlush",
	500:  "kSearch",
	501:  "kSearchResult",
	1200: "kTimeTick",
	1201: "kQueryNodeStats",
	1202: "kLoadIndex",
}

var MsgType_value = map[string]int32{
	"kNone":                  0,
	"kCreateCollection":      100,
	"kDropCollection":        101,
	"kHasCollection":         102,
	"kDescribeCollection":    103,
	"kShowCollections":       104,
	"kGetSysConfigs":         105,
	"kCreatePartition":       200,
	"kDropPartition":         201,
	"kHasPartition":          202,
	"kDescribePartition":     203,
	"kShowPartitions":        204,
	"kCreateIndex":           300,
	"kDescribeIndex":         301,
	"kDescribeIndexProgress": 302,
	"kInsert":                400,
	"kDelete":                401,
	"kFlush":                 402,
	"kSearch":                500,
	"kSearchResult":          501,
	"kTimeTick":              1200,
	"kQueryNodeStats":        1201,
	"kLoadIndex":             1202,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}

func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Status struct {
	ErrorCode            ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=milvus.proto.common.ErrorCode" json:"error_code,omitempty"`
	Reason               string    `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetErrorCode() ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ErrorCode_SUCCESS
}

func (m *Status) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type KeyValuePair struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValuePair) Reset()         { *m = KeyValuePair{} }
func (m *KeyValuePair) String() string { return proto.CompactTextString(m) }
func (*KeyValuePair) ProtoMessage()    {}
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{2}
}

func (m *KeyValuePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValuePair.Unmarshal(m, b)
}
func (m *KeyValuePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValuePair.Marshal(b, m, deterministic)
}
func (m *KeyValuePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValuePair.Merge(m, src)
}
func (m *KeyValuePair) XXX_Size() int {
	return xxx_messageInfo_KeyValuePair.Size(m)
}
func (m *KeyValuePair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValuePair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValuePair proto.InternalMessageInfo

func (m *KeyValuePair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValuePair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Blob struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Blob) Reset()         { *m = Blob{} }
func (m *Blob) String() string { return proto.CompactTextString(m) }
func (*Blob) ProtoMessage()    {}
func (*Blob) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{3}
}

func (m *Blob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blob.Unmarshal(m, b)
}
func (m *Blob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blob.Marshal(b, m, deterministic)
}
func (m *Blob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blob.Merge(m, src)
}
func (m *Blob) XXX_Size() int {
	return xxx_messageInfo_Blob.Size(m)
}
func (m *Blob) XXX_DiscardUnknown() {
	xxx_messageInfo_Blob.DiscardUnknown(m)
}

var xxx_messageInfo_Blob proto.InternalMessageInfo

func (m *Blob) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Address struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int64    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{4}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Address) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

type MsgBase struct {
	MsgType              MsgType  `protobuf:"varint,1,opt,name=msg_type,json=msgType,proto3,enum=milvus.proto.common.MsgType" json:"msg_type,omitempty"`
	MsgID                int64    `protobuf:"varint,2,opt,name=msgID,proto3" json:"msgID,omitempty"`
	Timestamp            uint64   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SourceID             int64    `protobuf:"varint,4,opt,name=sourceID,proto3" json:"sourceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgBase) Reset()         { *m = MsgBase{} }
func (m *MsgBase) String() string { return proto.CompactTextString(m) }
func (*MsgBase) ProtoMessage()    {}
func (*MsgBase) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{5}
}

func (m *MsgBase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgBase.Unmarshal(m, b)
}
func (m *MsgBase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgBase.Marshal(b, m, deterministic)
}
func (m *MsgBase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBase.Merge(m, src)
}
func (m *MsgBase) XXX_Size() int {
	return xxx_messageInfo_MsgBase.Size(m)
}
func (m *MsgBase) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBase.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBase proto.InternalMessageInfo

func (m *MsgBase) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_kNone
}

func (m *MsgBase) GetMsgID() int64 {
	if m != nil {
		return m.MsgID
	}
	return 0
}

func (m *MsgBase) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgBase) GetSourceID() int64 {
	if m != nil {
		return m.SourceID
	}
	return 0
}

func init() {
	proto.RegisterEnum("milvus.proto.common.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("milvus.proto.common.MsgType", MsgType_name, MsgType_value)
	proto.RegisterType((*Empty)(nil), "milvus.proto.common.Empty")
	proto.RegisterType((*Status)(nil), "milvus.proto.common.Status")
	proto.RegisterType((*KeyValuePair)(nil), "milvus.proto.common.KeyValuePair")
	proto.RegisterType((*Blob)(nil), "milvus.proto.common.Blob")
	proto.RegisterType((*Address)(nil), "milvus.proto.common.Address")
	proto.RegisterType((*MsgBase)(nil), "milvus.proto.common.MsgBase")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 941 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x54, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xde, 0xfc, 0xb4, 0xa9, 0x4f, 0xd3, 0x74, 0x3a, 0xfd, 0x0b, 0x6c, 0x85, 0xaa, 0x5e, 0x55,
	0x2b, 0x6d, 0x2b, 0x81, 0x04, 0x57, 0x48, 0xb8, 0xe3, 0x49, 0x6b, 0xad, 0x63, 0x67, 0xc7, 0xce,
	0xd2, 0xe5, 0xc6, 0x72, 0x92, 0xd9, 0xc4, 0xb2, 0x93, 0x89, 0x3c, 0x93, 0x85, 0xec, 0x53, 0xc0,
	0x3e, 0x07, 0x20, 0xe0, 0x8a, 0x47, 0xe0, 0xf7, 0x3d, 0x78, 0x00, 0xb8, 0x47, 0x63, 0xc7, 0x4d,
	0x40, 0x7b, 0x37, 0xe7, 0xfb, 0xfc, 0x7d, 0xf3, 0x9d, 0xe3, 0xd1, 0x81, 0xe6, 0x50, 0x4c, 0xa7,
	0x62, 0x76, 0x35, 0xcf, 0x84, 0x12, 0xf8, 0x70, 0x1a, 0xa7, 0xaf, 0x17, 0xb2, 0xa8, 0xae, 0x0a,
	0xea, 0xa2, 0x01, 0x5b, 0x74, 0x3a, 0x57, 0xcb, 0x8b, 0x10, 0xb6, 0x7d, 0x15, 0xa9, 0x85, 0xc4,
	0x9f, 0x02, 0xf0, 0x2c, 0x13, 0x59, 0x38, 0x14, 0x23, 0xde, 0xae, 0x9c, 0x57, 0x2e, 0x5b, 0x1f,
	0x7e, 0x70, 0xf5, 0x0e, 0xf1, 0x15, 0xd5, 0x9f, 0x11, 0x31, 0xe2, 0xcc, 0xe0, 0xe5, 0x11, 0x9f,
	0xc0, 0x76, 0xc6, 0x23, 0x29, 0x66, 0xed, 0xea, 0x79, 0xe5, 0xd2, 0x60, 0xab, 0xea, 0xe2, 0x63,
	0x68, 0x3e, 0xe3, 0xcb, 0x17, 0x51, 0xba, 0xe0, 0xbd, 0x28, 0xce, 0x30, 0x82, 0x5a, 0xc2, 0x97,
	0xb9, 0xbf, 0xc1, 0xf4, 0x11, 0x1f, 0xc1, 0xd6, 0x6b, 0x4d, 0xaf, 0x84, 0x45, 0x71, 0x71, 0x06,
	0xf5, 0x9b, 0x54, 0x0c, 0xd6, 0xac, 0x56, 0x34, 0x4b, 0xf6, 0x29, 0x34, 0xcc, 0xd1, 0x28, 0xe3,
	0x52, 0xe2, 0x16, 0x54, 0xe3, 0xf9, 0xca, 0xaf, 0x1a, 0xcf, 0x31, 0x86, 0xfa, 0x5c, 0x64, 0x2a,
	0x77, 0xab, 0xb1, 0xfc, 0x7c, 0xf1, 0xb6, 0x02, 0x8d, 0xae, 0x1c, 0xdf, 0x44, 0x92, 0xe3, 0x4f,
	0x60, 0x67, 0x2a, 0xc7, 0xa1, 0x5a, 0xce, 0xcb, 0x2e, 0xcf, 0xde, 0xd9, 0x65, 0x57, 0x8e, 0x83,
	0xe5, 0x9c, 0xb3, 0xc6, 0xb4, 0x38, 0xe8, 0x24, 0x53, 0x39, 0xb6, 0xad, 0x95, 0x73, 0x51, 0xe0,
	0x33, 0x30, 0x54, 0x3c, 0xe5, 0x52, 0x45, 0xd3, 0x79, 0xbb, 0x76, 0x5e, 0xb9, 0xac, 0xb3, 0x35,
	0x80, 0xdf, 0x87, 0x1d, 0x29, 0x16, 0xd9, 0x90, 0xdb, 0x56, 0xbb, 0x9e, 0xcb, 0x1e, 0xea, 0x27,
	0x3f, 0xd7, 0xc1, 0x78, 0x18, 0x25, 0xde, 0x85, 0x86, 0xdf, 0x27, 0x84, 0xfa, 0x3e, 0x7a, 0x84,
	0x8f, 0x00, 0xf5, 0x5d, 0x7a, 0xdf, 0xa3, 0x24, 0xa0, 0x56, 0x48, 0x19, 0xf3, 0x18, 0xaa, 0x60,
	0x0c, 0x2d, 0xe2, 0xb9, 0x2e, 0x25, 0x41, 0xd8, 0x31, 0x6d, 0x87, 0x5a, 0xa8, 0x8a, 0x8f, 0xe1,
	0xa0, 0x47, 0x59, 0xd7, 0xf6, 0x7d, 0xdb, 0x73, 0x43, 0x8b, 0xba, 0x36, 0xb5, 0x50, 0x0d, 0xbf,
	0x07, 0xc7, 0xc4, 0x73, 0x1c, 0x4a, 0x02, 0x0d, 0xbb, 0x5e, 0x10, 0xd2, 0x7b, 0xdb, 0x0f, 0x7c,
	0x54, 0xd7, 0xde, 0xb6, 0xe3, 0xd0, 0x5b, 0xd3, 0x09, 0x4d, 0x76, 0xdb, 0xef, 0x52, 0x37, 0x40,
	0x5b, 0xda, 0xa7, 0x44, 0x2d, 0xbb, 0x4b, 0x5d, 0x6d, 0x87, 0x1a, 0xf8, 0x04, 0x70, 0x09, 0xdb,
	0xae, 0x45, 0xef, 0xc3, 0xe0, 0x65, 0x8f, 0xa2, 0x1d, 0xfc, 0x18, 0x4e, 0x4b, 0x7c, 0xf3, 0x1e,
	0xb3, 0x4b, 0x91, 0x81, 0x11, 0x34, 0x4b, 0x32, 0xf0, 0x7a, 0xcf, 0x10, 0x6c, 0xba, 0x33, 0xef,
	0x73, 0x46, 0x89, 0xc7, 0x2c, 0xb4, 0xbb, 0x09, 0xbf, 0xa0, 0x24, 0xf0, 0x58, 0x68, 0x5b, 0xa8,
	0xa9, 0xc3, 0x97, 0xb0, 0x4f, 0x4d, 0x46, 0xee, 0x42, 0x46, 0xfd, 0xbe, 0x13, 0xa0, 0x3d, 0x3d,
	0x82, 0x8e, 0xed, 0xd0, 0xbc, 0xa3, 0x8e, 0xd7, 0x77, 0x2d, 0xd4, 0xc2, 0xfb, 0xb0, 0xdb, 0xa5,
	0x81, 0x59, 0xce, 0x64, 0x5f, 0xdf, 0x4f, 0x4c, 0x72, 0x47, 0x4b, 0x04, 0xe1, 0x36, 0x1c, 0x11,
	0xd3, 0xd5, 0x22, 0xc2, 0xa8, 0x19, 0xd0, 0xb0, 0xe3, 0x39, 0x16, 0x65, 0xe8, 0x40, 0x37, 0xf8,
	0x3f, 0xc6, 0x76, 0x28, 0xc2, 0x1b, 0x0a, 0x8b, 0x3a, 0x74, 0xad, 0x38, 0xdc, 0x50, 0x94, 0x8c,
	0x56, 0x1c, 0xe9, 0x66, 0x6e, 0xfa, 0xb6, 0x63, 0xad, 0x06, 0x55, 0xfc, 0xb4, 0x63, 0x7c, 0x00,
	0x7b, 0x65, 0x33, 0xae, 0x63, 0xfb, 0x01, 0x3a, 0xc1, 0xa7, 0x70, 0x58, 0x42, 0x5d, 0x1a, 0x30,
	0x9b, 0x14, 0x53, 0x3d, 0xd5, 0xdf, 0x7a, 0xfd, 0x20, 0xf4, 0x3a, 0x61, 0x97, 0x76, 0x3d, 0xf6,
	0x12, 0xb5, 0xf1, 0x11, 0xec, 0x5b, 0x56, 0xc8, 0xe8, 0xf3, 0x3e, 0xf5, 0x83, 0x90, 0x99, 0x84,
	0xa2, 0xbf, 0x1a, 0x4f, 0xfe, 0xac, 0xe5, 0xef, 0x39, 0x7f, 0x96, 0x06, 0x6c, 0x25, 0xae, 0x98,
	0x71, 0xf4, 0x48, 0x47, 0x48, 0x48, 0xc6, 0x23, 0xc5, 0x89, 0x48, 0x53, 0x3e, 0x54, 0xb1, 0x98,
	0xa1, 0x11, 0x3e, 0x84, 0xfd, 0xc4, 0xca, 0xc4, 0x7c, 0x03, 0xe4, 0x7a, 0x92, 0xc9, 0x5d, 0x24,
	0x37, 0xb0, 0x57, 0x3a, 0x58, 0x62, 0x71, 0x39, 0xcc, 0xe2, 0xc1, 0xa6, 0xc3, 0x58, 0xbf, 0x99,
	0xc4, 0x9f, 0x88, 0x2f, 0xd7, 0xa0, 0x44, 0x93, 0xdc, 0xe2, 0x96, 0x2b, 0x7f, 0x29, 0x89, 0x98,
	0xbd, 0x8a, 0xc7, 0x12, 0xc5, 0xf8, 0x18, 0xd0, 0x2a, 0x42, 0x2f, 0xca, 0x54, 0x9c, 0xeb, 0x7f,
	0xa9, 0xe0, 0x43, 0x68, 0xe5, 0x11, 0xd6, 0xe0, 0xaf, 0xfa, 0x3d, 0xef, 0xe9, 0x08, 0x6b, 0xec,
	0xb7, 0x0a, 0x3e, 0x05, 0xfc, 0x10, 0x61, 0x4d, 0xfc, 0x5e, 0xd1, 0x83, 0xc8, 0x23, 0x3c, 0x80,
	0x12, 0xfd, 0x51, 0xc1, 0x07, 0xd0, 0x5c, 0x5d, 0x67, 0xcf, 0x46, 0xfc, 0x2b, 0xf4, 0x6d, 0xb5,
	0xb8, 0x6a, 0xe5, 0x50, 0x80, 0xdf, 0x55, 0xf1, 0x63, 0x38, 0xf9, 0x2f, 0xd8, 0xcb, 0xc4, 0x58,
	0xaf, 0x0f, 0xf4, 0x7d, 0x15, 0x37, 0xa1, 0x91, 0xd8, 0x33, 0xc9, 0x33, 0x85, 0xbe, 0xae, 0xe5,
	0x95, 0xc5, 0x53, 0xae, 0x38, 0xfa, 0xa6, 0x86, 0x77, 0x61, 0x3b, 0xe9, 0xa4, 0x0b, 0x39, 0x41,
	0x6f, 0x0b, 0xca, 0xe7, 0x51, 0x36, 0x9c, 0xa0, 0xbf, 0x6b, 0x79, 0xfc, 0xa2, 0x62, 0x5c, 0x2e,
	0x52, 0x85, 0xfe, 0xa9, 0xe1, 0x16, 0x18, 0x49, 0x10, 0x4f, 0x79, 0x10, 0x0f, 0x13, 0xf4, 0x83,
	0x91, 0xa7, 0x7e, 0xbe, 0xe0, 0xd9, 0xd2, 0x15, 0x23, 0xae, 0x17, 0xad, 0x44, 0x3f, 0x1a, 0x78,
	0x1f, 0x20, 0x71, 0x44, 0x34, 0x2a, 0xe2, 0xfd, 0x64, 0xdc, 0xdc, 0x7c, 0xf1, 0xd9, 0x38, 0x56,
	0x93, 0xc5, 0x40, 0x2f, 0x9f, 0xeb, 0x37, 0x71, 0x9a, 0xc6, 0x6f, 0x14, 0x1f, 0x4e, 0xae, 0x8b,
	0xc5, 0xf4, 0x74, 0x14, 0x4b, 0x95, 0xc5, 0x83, 0x85, 0xe2, 0xa3, 0xeb, 0x78, 0xa6, 0x78, 0x36,
	0x8b, 0xd2, 0xeb, 0x7c, 0x5b, 0x5d, 0x17, 0xdb, 0x6a, 0x3e, 0x18, 0x6c, 0xe7, 0xf5, 0x47, 0xff,
	0x06, 0x00, 0x00, 0xff, 0xff, 0x73, 0xec, 0xf0, 0xa7, 0xfe, 0x05, 0x00, 0x00,
}
