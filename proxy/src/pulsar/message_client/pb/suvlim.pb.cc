// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: suvlim.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "suvlim.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace suvlim {
namespace grpc {

namespace {

const ::google::protobuf::Descriptor* Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeyValuePair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeyValuePair_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectionName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectionName_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectionNameList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectionNameList_reflection_ = NULL;
const ::google::protobuf::Descriptor* FieldName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FieldName_reflection_ = NULL;
const ::google::protobuf::Descriptor* Mapping_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Mapping_reflection_ = NULL;
const ::google::protobuf::Descriptor* MappingList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MappingList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PartitionParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PartitionParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* PartitionList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PartitionList_reflection_ = NULL;
const ::google::protobuf::Descriptor* VectorRowRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VectorRowRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityIds_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityIds_reflection_ = NULL;
const ::google::protobuf::Descriptor* VectorRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VectorRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* VectorParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VectorParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* FieldMeta_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FieldMeta_reflection_ = NULL;
const ::google::protobuf::Descriptor* Schema_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Schema_reflection_ = NULL;
const ::google::protobuf::Descriptor* RowData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RowData_reflection_ = NULL;
const ::google::protobuf::Descriptor* InsertParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InsertParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* SearchParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SearchParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* SearchInSegmentParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SearchInSegmentParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* Entities_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Entities_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* StringReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StringReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* BoolReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BoolReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectionRowCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectionRowCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* Command_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Command_reflection_ = NULL;
const ::google::protobuf::Descriptor* IndexParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IndexParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* FlushParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FlushParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompactParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompactParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteByIDParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteByIDParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectionInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectionInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetEntityIDsParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetEntityIDsParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityIdentity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityIdentity_reflection_ = NULL;
const ::google::protobuf::Descriptor* VectorFieldParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VectorFieldParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* FieldType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FieldType_reflection_ = NULL;
struct FieldTypeOneofInstance {
  int data_type_;
  const ::suvlim::grpc::VectorFieldParam* vector_param_;
}* FieldType_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* FieldParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FieldParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* VectorFieldRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VectorFieldRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* TermQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TermQuery_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompareExpr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompareExpr_reflection_ = NULL;
const ::google::protobuf::Descriptor* RangeQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RangeQuery_reflection_ = NULL;
const ::google::protobuf::Descriptor* VectorQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VectorQuery_reflection_ = NULL;
const ::google::protobuf::Descriptor* BooleanQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BooleanQuery_reflection_ = NULL;
const ::google::protobuf::Descriptor* GeneralQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GeneralQuery_reflection_ = NULL;
struct GeneralQueryOneofInstance {
  const ::suvlim::grpc::BooleanQuery* boolean_query_;
  const ::suvlim::grpc::TermQuery* term_query_;
  const ::suvlim::grpc::RangeQuery* range_query_;
  const ::suvlim::grpc::VectorQuery* vector_query_;
}* GeneralQuery_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* SearchParamPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SearchParamPB_reflection_ = NULL;
const ::google::protobuf::Descriptor* InsertOrDeleteMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InsertOrDeleteMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SearchMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SearchMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* TimeSyncMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TimeSyncMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SegmentRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SegmentRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* Key2SegMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Key2SegMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* DataType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CompareOperator_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Occur_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* OpType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_suvlim_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_suvlim_2eproto() {
  protobuf_AddDesc_suvlim_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "suvlim.proto");
  GOOGLE_CHECK(file != NULL);
  Status_descriptor_ = file->message_type(0);
  static const int Status_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, reason_),
  };
  Status_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Status_descriptor_,
      Status::default_instance_,
      Status_offsets_,
      -1,
      -1,
      -1,
      sizeof(Status),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, _is_default_instance_));
  KeyValuePair_descriptor_ = file->message_type(1);
  static const int KeyValuePair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValuePair, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValuePair, value_),
  };
  KeyValuePair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeyValuePair_descriptor_,
      KeyValuePair::default_instance_,
      KeyValuePair_offsets_,
      -1,
      -1,
      -1,
      sizeof(KeyValuePair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValuePair, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValuePair, _is_default_instance_));
  CollectionName_descriptor_ = file->message_type(2);
  static const int CollectionName_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionName, collection_name_),
  };
  CollectionName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectionName_descriptor_,
      CollectionName::default_instance_,
      CollectionName_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectionName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionName, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionName, _is_default_instance_));
  CollectionNameList_descriptor_ = file->message_type(3);
  static const int CollectionNameList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionNameList, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionNameList, collection_names_),
  };
  CollectionNameList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectionNameList_descriptor_,
      CollectionNameList::default_instance_,
      CollectionNameList_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectionNameList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionNameList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionNameList, _is_default_instance_));
  FieldName_descriptor_ = file->message_type(4);
  static const int FieldName_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldName, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldName, field_name_),
  };
  FieldName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FieldName_descriptor_,
      FieldName::default_instance_,
      FieldName_offsets_,
      -1,
      -1,
      -1,
      sizeof(FieldName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldName, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldName, _is_default_instance_));
  Mapping_descriptor_ = file->message_type(5);
  static const int Mapping_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mapping, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mapping, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mapping, fields_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mapping, extra_params_),
  };
  Mapping_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Mapping_descriptor_,
      Mapping::default_instance_,
      Mapping_offsets_,
      -1,
      -1,
      -1,
      sizeof(Mapping),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mapping, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mapping, _is_default_instance_));
  MappingList_descriptor_ = file->message_type(6);
  static const int MappingList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MappingList, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MappingList, mapping_list_),
  };
  MappingList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MappingList_descriptor_,
      MappingList::default_instance_,
      MappingList_offsets_,
      -1,
      -1,
      -1,
      sizeof(MappingList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MappingList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MappingList, _is_default_instance_));
  PartitionParam_descriptor_ = file->message_type(7);
  static const int PartitionParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionParam, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionParam, tag_),
  };
  PartitionParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PartitionParam_descriptor_,
      PartitionParam::default_instance_,
      PartitionParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(PartitionParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionParam, _is_default_instance_));
  PartitionList_descriptor_ = file->message_type(8);
  static const int PartitionList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionList, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionList, partition_tag_array_),
  };
  PartitionList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PartitionList_descriptor_,
      PartitionList::default_instance_,
      PartitionList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PartitionList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionList, _is_default_instance_));
  VectorRowRecord_descriptor_ = file->message_type(9);
  static const int VectorRowRecord_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorRowRecord, float_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorRowRecord, binary_data_),
  };
  VectorRowRecord_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VectorRowRecord_descriptor_,
      VectorRowRecord::default_instance_,
      VectorRowRecord_offsets_,
      -1,
      -1,
      -1,
      sizeof(VectorRowRecord),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorRowRecord, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorRowRecord, _is_default_instance_));
  EntityIds_descriptor_ = file->message_type(10);
  static const int EntityIds_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityIds, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityIds, entity_id_array_),
  };
  EntityIds_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EntityIds_descriptor_,
      EntityIds::default_instance_,
      EntityIds_offsets_,
      -1,
      -1,
      -1,
      sizeof(EntityIds),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityIds, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityIds, _is_default_instance_));
  VectorRecord_descriptor_ = file->message_type(11);
  static const int VectorRecord_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorRecord, records_),
  };
  VectorRecord_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VectorRecord_descriptor_,
      VectorRecord::default_instance_,
      VectorRecord_offsets_,
      -1,
      -1,
      -1,
      sizeof(VectorRecord),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorRecord, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorRecord, _is_default_instance_));
  VectorParam_descriptor_ = file->message_type(12);
  static const int VectorParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorParam, json_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorParam, row_record_),
  };
  VectorParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VectorParam_descriptor_,
      VectorParam::default_instance_,
      VectorParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(VectorParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorParam, _is_default_instance_));
  FieldMeta_descriptor_ = file->message_type(13);
  static const int FieldMeta_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldMeta, field_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldMeta, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldMeta, dim_),
  };
  FieldMeta_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FieldMeta_descriptor_,
      FieldMeta::default_instance_,
      FieldMeta_offsets_,
      -1,
      -1,
      -1,
      sizeof(FieldMeta),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldMeta, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldMeta, _is_default_instance_));
  Schema_descriptor_ = file->message_type(14);
  static const int Schema_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Schema, field_metas_),
  };
  Schema_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Schema_descriptor_,
      Schema::default_instance_,
      Schema_offsets_,
      -1,
      -1,
      -1,
      sizeof(Schema),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Schema, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Schema, _is_default_instance_));
  RowData_descriptor_ = file->message_type(15);
  static const int RowData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowData, blob_),
  };
  RowData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RowData_descriptor_,
      RowData::default_instance_,
      RowData_offsets_,
      -1,
      -1,
      -1,
      sizeof(RowData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowData, _is_default_instance_));
  InsertParam_descriptor_ = file->message_type(16);
  static const int InsertParam_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertParam, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertParam, schema_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertParam, rows_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertParam, entity_id_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertParam, partition_tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertParam, extra_params_),
  };
  InsertParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InsertParam_descriptor_,
      InsertParam::default_instance_,
      InsertParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(InsertParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertParam, _is_default_instance_));
  SearchParam_descriptor_ = file->message_type(17);
  static const int SearchParam_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParam, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParam, vector_param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParam, dsl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParam, partition_tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParam, extra_params_),
  };
  SearchParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SearchParam_descriptor_,
      SearchParam::default_instance_,
      SearchParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(SearchParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParam, _is_default_instance_));
  SearchInSegmentParam_descriptor_ = file->message_type(18);
  static const int SearchInSegmentParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchInSegmentParam, file_id_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchInSegmentParam, search_param_),
  };
  SearchInSegmentParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SearchInSegmentParam_descriptor_,
      SearchInSegmentParam::default_instance_,
      SearchInSegmentParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(SearchInSegmentParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchInSegmentParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchInSegmentParam, _is_default_instance_));
  Entities_descriptor_ = file->message_type(19);
  static const int Entities_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entities, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entities, ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entities, valid_row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entities, rows_data_),
  };
  Entities_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Entities_descriptor_,
      Entities::default_instance_,
      Entities_offsets_,
      -1,
      -1,
      -1,
      sizeof(Entities),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entities, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entities, _is_default_instance_));
  QueryResult_descriptor_ = file->message_type(20);
  static const int QueryResult_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResult, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResult, entities_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResult, row_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResult, scores_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResult, distances_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResult, extra_params_),
  };
  QueryResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryResult_descriptor_,
      QueryResult::default_instance_,
      QueryResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(QueryResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResult, _is_default_instance_));
  StringReply_descriptor_ = file->message_type(21);
  static const int StringReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringReply, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringReply, string_reply_),
  };
  StringReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StringReply_descriptor_,
      StringReply::default_instance_,
      StringReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(StringReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringReply, _is_default_instance_));
  BoolReply_descriptor_ = file->message_type(22);
  static const int BoolReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolReply, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolReply, bool_reply_),
  };
  BoolReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BoolReply_descriptor_,
      BoolReply::default_instance_,
      BoolReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(BoolReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoolReply, _is_default_instance_));
  CollectionRowCount_descriptor_ = file->message_type(23);
  static const int CollectionRowCount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionRowCount, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionRowCount, collection_row_count_),
  };
  CollectionRowCount_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectionRowCount_descriptor_,
      CollectionRowCount::default_instance_,
      CollectionRowCount_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectionRowCount),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionRowCount, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionRowCount, _is_default_instance_));
  Command_descriptor_ = file->message_type(24);
  static const int Command_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Command, cmd_),
  };
  Command_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Command_descriptor_,
      Command::default_instance_,
      Command_offsets_,
      -1,
      -1,
      -1,
      sizeof(Command),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Command, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Command, _is_default_instance_));
  IndexParam_descriptor_ = file->message_type(25);
  static const int IndexParam_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexParam, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexParam, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexParam, field_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexParam, index_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexParam, extra_params_),
  };
  IndexParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IndexParam_descriptor_,
      IndexParam::default_instance_,
      IndexParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(IndexParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexParam, _is_default_instance_));
  FlushParam_descriptor_ = file->message_type(26);
  static const int FlushParam_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlushParam, collection_name_array_),
  };
  FlushParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FlushParam_descriptor_,
      FlushParam::default_instance_,
      FlushParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(FlushParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlushParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlushParam, _is_default_instance_));
  CompactParam_descriptor_ = file->message_type(27);
  static const int CompactParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactParam, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactParam, threshold_),
  };
  CompactParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CompactParam_descriptor_,
      CompactParam::default_instance_,
      CompactParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(CompactParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactParam, _is_default_instance_));
  DeleteByIDParam_descriptor_ = file->message_type(28);
  static const int DeleteByIDParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteByIDParam, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteByIDParam, id_array_),
  };
  DeleteByIDParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteByIDParam_descriptor_,
      DeleteByIDParam::default_instance_,
      DeleteByIDParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteByIDParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteByIDParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteByIDParam, _is_default_instance_));
  CollectionInfo_descriptor_ = file->message_type(29);
  static const int CollectionInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionInfo, json_info_),
  };
  CollectionInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectionInfo_descriptor_,
      CollectionInfo::default_instance_,
      CollectionInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectionInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectionInfo, _is_default_instance_));
  GetEntityIDsParam_descriptor_ = file->message_type(30);
  static const int GetEntityIDsParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEntityIDsParam, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEntityIDsParam, segment_id_),
  };
  GetEntityIDsParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetEntityIDsParam_descriptor_,
      GetEntityIDsParam::default_instance_,
      GetEntityIDsParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetEntityIDsParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEntityIDsParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEntityIDsParam, _is_default_instance_));
  EntityIdentity_descriptor_ = file->message_type(31);
  static const int EntityIdentity_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityIdentity, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityIdentity, id_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityIdentity, field_names_),
  };
  EntityIdentity_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EntityIdentity_descriptor_,
      EntityIdentity::default_instance_,
      EntityIdentity_offsets_,
      -1,
      -1,
      -1,
      sizeof(EntityIdentity),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityIdentity, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityIdentity, _is_default_instance_));
  VectorFieldParam_descriptor_ = file->message_type(32);
  static const int VectorFieldParam_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorFieldParam, dimension_),
  };
  VectorFieldParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VectorFieldParam_descriptor_,
      VectorFieldParam::default_instance_,
      VectorFieldParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(VectorFieldParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorFieldParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorFieldParam, _is_default_instance_));
  FieldType_descriptor_ = file->message_type(33);
  static const int FieldType_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(FieldType_default_oneof_instance_, data_type_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(FieldType_default_oneof_instance_, vector_param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldType, value_),
  };
  FieldType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FieldType_descriptor_,
      FieldType::default_instance_,
      FieldType_offsets_,
      -1,
      -1,
      -1,
      FieldType_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldType, _oneof_case_[0]),
      sizeof(FieldType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldType, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldType, _is_default_instance_));
  FieldParam_descriptor_ = file->message_type(34);
  static const int FieldParam_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldParam, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldParam, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldParam, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldParam, index_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldParam, extra_params_),
  };
  FieldParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FieldParam_descriptor_,
      FieldParam::default_instance_,
      FieldParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(FieldParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldParam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldParam, _is_default_instance_));
  VectorFieldRecord_descriptor_ = file->message_type(35);
  static const int VectorFieldRecord_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorFieldRecord, value_),
  };
  VectorFieldRecord_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VectorFieldRecord_descriptor_,
      VectorFieldRecord::default_instance_,
      VectorFieldRecord_offsets_,
      -1,
      -1,
      -1,
      sizeof(VectorFieldRecord),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorFieldRecord, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorFieldRecord, _is_default_instance_));
  TermQuery_descriptor_ = file->message_type(36);
  static const int TermQuery_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TermQuery, field_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TermQuery, int_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TermQuery, double_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TermQuery, value_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TermQuery, boost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TermQuery, extra_params_),
  };
  TermQuery_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TermQuery_descriptor_,
      TermQuery::default_instance_,
      TermQuery_offsets_,
      -1,
      -1,
      -1,
      sizeof(TermQuery),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TermQuery, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TermQuery, _is_default_instance_));
  CompareExpr_descriptor_ = file->message_type(37);
  static const int CompareExpr_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompareExpr, operator__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompareExpr, operand_),
  };
  CompareExpr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CompareExpr_descriptor_,
      CompareExpr::default_instance_,
      CompareExpr_offsets_,
      -1,
      -1,
      -1,
      sizeof(CompareExpr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompareExpr, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompareExpr, _is_default_instance_));
  RangeQuery_descriptor_ = file->message_type(38);
  static const int RangeQuery_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RangeQuery, field_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RangeQuery, operand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RangeQuery, boost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RangeQuery, extra_params_),
  };
  RangeQuery_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RangeQuery_descriptor_,
      RangeQuery::default_instance_,
      RangeQuery_offsets_,
      -1,
      -1,
      -1,
      sizeof(RangeQuery),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RangeQuery, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RangeQuery, _is_default_instance_));
  VectorQuery_descriptor_ = file->message_type(39);
  static const int VectorQuery_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorQuery, field_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorQuery, query_boost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorQuery, records_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorQuery, topk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorQuery, extra_params_),
  };
  VectorQuery_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VectorQuery_descriptor_,
      VectorQuery::default_instance_,
      VectorQuery_offsets_,
      -1,
      -1,
      -1,
      sizeof(VectorQuery),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorQuery, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VectorQuery, _is_default_instance_));
  BooleanQuery_descriptor_ = file->message_type(40);
  static const int BooleanQuery_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BooleanQuery, occur_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BooleanQuery, general_query_),
  };
  BooleanQuery_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BooleanQuery_descriptor_,
      BooleanQuery::default_instance_,
      BooleanQuery_offsets_,
      -1,
      -1,
      -1,
      sizeof(BooleanQuery),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BooleanQuery, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BooleanQuery, _is_default_instance_));
  GeneralQuery_descriptor_ = file->message_type(41);
  static const int GeneralQuery_offsets_[5] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(GeneralQuery_default_oneof_instance_, boolean_query_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(GeneralQuery_default_oneof_instance_, term_query_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(GeneralQuery_default_oneof_instance_, range_query_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(GeneralQuery_default_oneof_instance_, vector_query_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralQuery, query_),
  };
  GeneralQuery_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GeneralQuery_descriptor_,
      GeneralQuery::default_instance_,
      GeneralQuery_offsets_,
      -1,
      -1,
      -1,
      GeneralQuery_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralQuery, _oneof_case_[0]),
      sizeof(GeneralQuery),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralQuery, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralQuery, _is_default_instance_));
  SearchParamPB_descriptor_ = file->message_type(42);
  static const int SearchParamPB_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParamPB, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParamPB, partition_tag_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParamPB, general_query_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParamPB, extra_params_),
  };
  SearchParamPB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SearchParamPB_descriptor_,
      SearchParamPB::default_instance_,
      SearchParamPB_offsets_,
      -1,
      -1,
      -1,
      sizeof(SearchParamPB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParamPB, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchParamPB, _is_default_instance_));
  InsertOrDeleteMsg_descriptor_ = file->message_type(43);
  static const int InsertOrDeleteMsg_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, rows_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, partition_tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, segment_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, channel_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, extra_params_),
  };
  InsertOrDeleteMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InsertOrDeleteMsg_descriptor_,
      InsertOrDeleteMsg::default_instance_,
      InsertOrDeleteMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(InsertOrDeleteMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertOrDeleteMsg, _is_default_instance_));
  SearchMsg_descriptor_ = file->message_type(44);
  static const int SearchMsg_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchMsg, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchMsg, records_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchMsg, partition_tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchMsg, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchMsg, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchMsg, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchMsg, extra_params_),
  };
  SearchMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SearchMsg_descriptor_,
      SearchMsg::default_instance_,
      SearchMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SearchMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchMsg, _is_default_instance_));
  TimeSyncMsg_descriptor_ = file->message_type(45);
  static const int TimeSyncMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeSyncMsg, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeSyncMsg, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeSyncMsg, msgtype_),
  };
  TimeSyncMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TimeSyncMsg_descriptor_,
      TimeSyncMsg::default_instance_,
      TimeSyncMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(TimeSyncMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeSyncMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeSyncMsg, _is_default_instance_));
  SegmentRecord_descriptor_ = file->message_type(46);
  static const int SegmentRecord_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentRecord, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentRecord, segment_id_),
  };
  SegmentRecord_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SegmentRecord_descriptor_,
      SegmentRecord::default_instance_,
      SegmentRecord_offsets_,
      -1,
      -1,
      -1,
      sizeof(SegmentRecord),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentRecord, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SegmentRecord, _is_default_instance_));
  Key2SegMsg_descriptor_ = file->message_type(47);
  static const int Key2SegMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key2SegMsg, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key2SegMsg, records_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key2SegMsg, msg_type_),
  };
  Key2SegMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Key2SegMsg_descriptor_,
      Key2SegMsg::default_instance_,
      Key2SegMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(Key2SegMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key2SegMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key2SegMsg, _is_default_instance_));
  ErrorCode_descriptor_ = file->enum_type(0);
  DataType_descriptor_ = file->enum_type(1);
  CompareOperator_descriptor_ = file->enum_type(2);
  Occur_descriptor_ = file->enum_type(3);
  OpType_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_suvlim_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Status_descriptor_, &Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeyValuePair_descriptor_, &KeyValuePair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectionName_descriptor_, &CollectionName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectionNameList_descriptor_, &CollectionNameList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FieldName_descriptor_, &FieldName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Mapping_descriptor_, &Mapping::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MappingList_descriptor_, &MappingList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PartitionParam_descriptor_, &PartitionParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PartitionList_descriptor_, &PartitionList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VectorRowRecord_descriptor_, &VectorRowRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EntityIds_descriptor_, &EntityIds::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VectorRecord_descriptor_, &VectorRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VectorParam_descriptor_, &VectorParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FieldMeta_descriptor_, &FieldMeta::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Schema_descriptor_, &Schema::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RowData_descriptor_, &RowData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InsertParam_descriptor_, &InsertParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SearchParam_descriptor_, &SearchParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SearchInSegmentParam_descriptor_, &SearchInSegmentParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Entities_descriptor_, &Entities::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryResult_descriptor_, &QueryResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StringReply_descriptor_, &StringReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BoolReply_descriptor_, &BoolReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectionRowCount_descriptor_, &CollectionRowCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Command_descriptor_, &Command::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IndexParam_descriptor_, &IndexParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FlushParam_descriptor_, &FlushParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CompactParam_descriptor_, &CompactParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteByIDParam_descriptor_, &DeleteByIDParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectionInfo_descriptor_, &CollectionInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetEntityIDsParam_descriptor_, &GetEntityIDsParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EntityIdentity_descriptor_, &EntityIdentity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VectorFieldParam_descriptor_, &VectorFieldParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FieldType_descriptor_, &FieldType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FieldParam_descriptor_, &FieldParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VectorFieldRecord_descriptor_, &VectorFieldRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TermQuery_descriptor_, &TermQuery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CompareExpr_descriptor_, &CompareExpr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RangeQuery_descriptor_, &RangeQuery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VectorQuery_descriptor_, &VectorQuery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BooleanQuery_descriptor_, &BooleanQuery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GeneralQuery_descriptor_, &GeneralQuery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SearchParamPB_descriptor_, &SearchParamPB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InsertOrDeleteMsg_descriptor_, &InsertOrDeleteMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SearchMsg_descriptor_, &SearchMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TimeSyncMsg_descriptor_, &TimeSyncMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SegmentRecord_descriptor_, &SegmentRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Key2SegMsg_descriptor_, &Key2SegMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_suvlim_2eproto() {
  delete Status::default_instance_;
  delete Status_reflection_;
  delete KeyValuePair::default_instance_;
  delete KeyValuePair_reflection_;
  delete CollectionName::default_instance_;
  delete CollectionName_reflection_;
  delete CollectionNameList::default_instance_;
  delete CollectionNameList_reflection_;
  delete FieldName::default_instance_;
  delete FieldName_reflection_;
  delete Mapping::default_instance_;
  delete Mapping_reflection_;
  delete MappingList::default_instance_;
  delete MappingList_reflection_;
  delete PartitionParam::default_instance_;
  delete PartitionParam_reflection_;
  delete PartitionList::default_instance_;
  delete PartitionList_reflection_;
  delete VectorRowRecord::default_instance_;
  delete VectorRowRecord_reflection_;
  delete EntityIds::default_instance_;
  delete EntityIds_reflection_;
  delete VectorRecord::default_instance_;
  delete VectorRecord_reflection_;
  delete VectorParam::default_instance_;
  delete VectorParam_reflection_;
  delete FieldMeta::default_instance_;
  delete FieldMeta_reflection_;
  delete Schema::default_instance_;
  delete Schema_reflection_;
  delete RowData::default_instance_;
  delete RowData_reflection_;
  delete InsertParam::default_instance_;
  delete InsertParam_reflection_;
  delete SearchParam::default_instance_;
  delete SearchParam_reflection_;
  delete SearchInSegmentParam::default_instance_;
  delete SearchInSegmentParam_reflection_;
  delete Entities::default_instance_;
  delete Entities_reflection_;
  delete QueryResult::default_instance_;
  delete QueryResult_reflection_;
  delete StringReply::default_instance_;
  delete StringReply_reflection_;
  delete BoolReply::default_instance_;
  delete BoolReply_reflection_;
  delete CollectionRowCount::default_instance_;
  delete CollectionRowCount_reflection_;
  delete Command::default_instance_;
  delete Command_reflection_;
  delete IndexParam::default_instance_;
  delete IndexParam_reflection_;
  delete FlushParam::default_instance_;
  delete FlushParam_reflection_;
  delete CompactParam::default_instance_;
  delete CompactParam_reflection_;
  delete DeleteByIDParam::default_instance_;
  delete DeleteByIDParam_reflection_;
  delete CollectionInfo::default_instance_;
  delete CollectionInfo_reflection_;
  delete GetEntityIDsParam::default_instance_;
  delete GetEntityIDsParam_reflection_;
  delete EntityIdentity::default_instance_;
  delete EntityIdentity_reflection_;
  delete VectorFieldParam::default_instance_;
  delete VectorFieldParam_reflection_;
  delete FieldType::default_instance_;
  delete FieldType_default_oneof_instance_;
  delete FieldType_reflection_;
  delete FieldParam::default_instance_;
  delete FieldParam_reflection_;
  delete VectorFieldRecord::default_instance_;
  delete VectorFieldRecord_reflection_;
  delete TermQuery::default_instance_;
  delete TermQuery_reflection_;
  delete CompareExpr::default_instance_;
  delete CompareExpr_reflection_;
  delete RangeQuery::default_instance_;
  delete RangeQuery_reflection_;
  delete VectorQuery::default_instance_;
  delete VectorQuery_reflection_;
  delete BooleanQuery::default_instance_;
  delete BooleanQuery_reflection_;
  delete GeneralQuery::default_instance_;
  delete GeneralQuery_default_oneof_instance_;
  delete GeneralQuery_reflection_;
  delete SearchParamPB::default_instance_;
  delete SearchParamPB_reflection_;
  delete InsertOrDeleteMsg::default_instance_;
  delete InsertOrDeleteMsg_reflection_;
  delete SearchMsg::default_instance_;
  delete SearchMsg_reflection_;
  delete TimeSyncMsg::default_instance_;
  delete TimeSyncMsg_reflection_;
  delete SegmentRecord::default_instance_;
  delete SegmentRecord_reflection_;
  delete Key2SegMsg::default_instance_;
  delete Key2SegMsg_reflection_;
}

void protobuf_AddDesc_suvlim_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_suvlim_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014suvlim.proto\022\013suvlim.grpc\"D\n\006Status\022*\n"
    "\nerror_code\030\001 \001(\0162\026.suvlim.grpc.ErrorCod"
    "e\022\016\n\006reason\030\002 \001(\t\"*\n\014KeyValuePair\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\")\n\016CollectionName\022"
    "\027\n\017collection_name\030\001 \001(\t\"S\n\022CollectionNa"
    "meList\022#\n\006status\030\001 \001(\0132\023.suvlim.grpc.Sta"
    "tus\022\030\n\020collection_names\030\002 \003(\t\"8\n\tFieldNa"
    "me\022\027\n\017collection_name\030\001 \001(\t\022\022\n\nfield_nam"
    "e\030\002 \001(\t\"\241\001\n\007Mapping\022#\n\006status\030\001 \001(\0132\023.su"
    "vlim.grpc.Status\022\027\n\017collection_name\030\002 \001("
    "\t\022\'\n\006fields\030\003 \003(\0132\027.suvlim.grpc.FieldPar"
    "am\022/\n\014extra_params\030\004 \003(\0132\031.suvlim.grpc.K"
    "eyValuePair\"^\n\013MappingList\022#\n\006status\030\001 \001"
    "(\0132\023.suvlim.grpc.Status\022*\n\014mapping_list\030"
    "\002 \003(\0132\024.suvlim.grpc.Mapping\"6\n\016Partition"
    "Param\022\027\n\017collection_name\030\001 \001(\t\022\013\n\003tag\030\002 "
    "\001(\t\"Q\n\rPartitionList\022#\n\006status\030\001 \001(\0132\023.s"
    "uvlim.grpc.Status\022\033\n\023partition_tag_array"
    "\030\002 \003(\t\":\n\017VectorRowRecord\022\022\n\nfloat_data\030"
    "\001 \003(\002\022\023\n\013binary_data\030\002 \001(\014\"I\n\tEntityIds\022"
    "#\n\006status\030\001 \001(\0132\023.suvlim.grpc.Status\022\027\n\017"
    "entity_id_array\030\002 \003(\003\"=\n\014VectorRecord\022-\n"
    "\007records\030\001 \003(\0132\034.suvlim.grpc.VectorRowRe"
    "cord\"J\n\013VectorParam\022\014\n\004json\030\001 \001(\t\022-\n\nrow"
    "_record\030\002 \001(\0132\031.suvlim.grpc.VectorRecord"
    "\"Q\n\tFieldMeta\022\022\n\nfield_name\030\001 \001(\t\022#\n\004typ"
    "e\030\002 \001(\0162\025.suvlim.grpc.DataType\022\013\n\003dim\030\003 "
    "\001(\003\"5\n\006Schema\022+\n\013field_metas\030\001 \003(\0132\026.suv"
    "lim.grpc.FieldMeta\"\027\n\007RowData\022\014\n\004blob\030\001 "
    "\001(\014\"\325\001\n\013InsertParam\022\027\n\017collection_name\030\001"
    " \001(\t\022#\n\006schema\030\002 \001(\0132\023.suvlim.grpc.Schem"
    "a\022\'\n\trows_data\030\003 \003(\0132\024.suvlim.grpc.RowDa"
    "ta\022\027\n\017entity_id_array\030\004 \003(\003\022\025\n\rpartition"
    "_tag\030\005 \001(\t\022/\n\014extra_params\030\006 \003(\0132\031.suvli"
    "m.grpc.KeyValuePair\"\253\001\n\013SearchParam\022\027\n\017c"
    "ollection_name\030\001 \001(\t\022.\n\014vector_param\030\002 \003"
    "(\0132\030.suvlim.grpc.VectorParam\022\013\n\003dsl\030\003 \001("
    "\t\022\025\n\rpartition_tag\030\004 \003(\t\022/\n\014extra_params"
    "\030\005 \003(\0132\031.suvlim.grpc.KeyValuePair\"]\n\024Sea"
    "rchInSegmentParam\022\025\n\rfile_id_array\030\001 \003(\t"
    "\022.\n\014search_param\030\002 \001(\0132\030.suvlim.grpc.Sea"
    "rchParam\"x\n\010Entities\022#\n\006status\030\001 \001(\0132\023.s"
    "uvlim.grpc.Status\022\013\n\003ids\030\002 \003(\003\022\021\n\tvalid_"
    "row\030\003 \003(\010\022\'\n\trows_data\030\004 \003(\0132\024.suvlim.gr"
    "pc.RowData\"\300\001\n\013QueryResult\022#\n\006status\030\001 \001"
    "(\0132\023.suvlim.grpc.Status\022\'\n\010entities\030\002 \001("
    "\0132\025.suvlim.grpc.Entities\022\017\n\007row_num\030\003 \001("
    "\003\022\016\n\006scores\030\004 \003(\002\022\021\n\tdistances\030\005 \003(\002\022/\n\014"
    "extra_params\030\006 \003(\0132\031.suvlim.grpc.KeyValu"
    "ePair\"H\n\013StringReply\022#\n\006status\030\001 \001(\0132\023.s"
    "uvlim.grpc.Status\022\024\n\014string_reply\030\002 \001(\t\""
    "D\n\tBoolReply\022#\n\006status\030\001 \001(\0132\023.suvlim.gr"
    "pc.Status\022\022\n\nbool_reply\030\002 \001(\010\"W\n\022Collect"
    "ionRowCount\022#\n\006status\030\001 \001(\0132\023.suvlim.grp"
    "c.Status\022\034\n\024collection_row_count\030\002 \001(\003\"\026"
    "\n\007Command\022\013\n\003cmd\030\001 \001(\t\"\243\001\n\nIndexParam\022#\n"
    "\006status\030\001 \001(\0132\023.suvlim.grpc.Status\022\027\n\017co"
    "llection_name\030\002 \001(\t\022\022\n\nfield_name\030\003 \001(\t\022"
    "\022\n\nindex_name\030\004 \001(\t\022/\n\014extra_params\030\005 \003("
    "\0132\031.suvlim.grpc.KeyValuePair\"+\n\nFlushPar"
    "am\022\035\n\025collection_name_array\030\001 \003(\t\":\n\014Com"
    "pactParam\022\027\n\017collection_name\030\001 \001(\t\022\021\n\tth"
    "reshold\030\002 \001(\001\"<\n\017DeleteByIDParam\022\027\n\017coll"
    "ection_name\030\001 \001(\t\022\020\n\010id_array\030\002 \003(\003\"H\n\016C"
    "ollectionInfo\022#\n\006status\030\001 \001(\0132\023.suvlim.g"
    "rpc.Status\022\021\n\tjson_info\030\002 \001(\t\"@\n\021GetEnti"
    "tyIDsParam\022\027\n\017collection_name\030\001 \001(\t\022\022\n\ns"
    "egment_id\030\002 \001(\003\"P\n\016EntityIdentity\022\027\n\017col"
    "lection_name\030\001 \001(\t\022\020\n\010id_array\030\002 \003(\003\022\023\n\013"
    "field_names\030\003 \003(\t\"%\n\020VectorFieldParam\022\021\n"
    "\tdimension\030\001 \001(\003\"w\n\tFieldType\022*\n\tdata_ty"
    "pe\030\001 \001(\0162\025.suvlim.grpc.DataTypeH\000\0225\n\014vec"
    "tor_param\030\002 \001(\0132\035.suvlim.grpc.VectorFiel"
    "dParamH\000B\007\n\005value\"\255\001\n\nFieldParam\022\n\n\002id\030\001"
    " \001(\004\022\014\n\004name\030\002 \001(\t\022#\n\004type\030\003 \001(\0162\025.suvli"
    "m.grpc.DataType\022/\n\014index_params\030\004 \003(\0132\031."
    "suvlim.grpc.KeyValuePair\022/\n\014extra_params"
    "\030\005 \003(\0132\031.suvlim.grpc.KeyValuePair\"@\n\021Vec"
    "torFieldRecord\022+\n\005value\030\001 \003(\0132\034.suvlim.g"
    "rpc.VectorRowRecord\"\233\001\n\tTermQuery\022\022\n\nfie"
    "ld_name\030\001 \001(\t\022\021\n\tint_value\030\002 \003(\003\022\024\n\014doub"
    "le_value\030\003 \003(\001\022\021\n\tvalue_num\030\004 \001(\003\022\r\n\005boo"
    "st\030\005 \001(\002\022/\n\014extra_params\030\006 \003(\0132\031.suvlim."
    "grpc.KeyValuePair\"N\n\013CompareExpr\022.\n\010oper"
    "ator\030\001 \001(\0162\034.suvlim.grpc.CompareOperator"
    "\022\017\n\007operand\030\002 \001(\t\"\213\001\n\nRangeQuery\022\022\n\nfiel"
    "d_name\030\001 \001(\t\022)\n\007operand\030\002 \003(\0132\030.suvlim.g"
    "rpc.CompareExpr\022\r\n\005boost\030\003 \001(\002\022/\n\014extra_"
    "params\030\004 \003(\0132\031.suvlim.grpc.KeyValuePair\""
    "\244\001\n\013VectorQuery\022\022\n\nfield_name\030\001 \001(\t\022\023\n\013q"
    "uery_boost\030\002 \001(\002\022-\n\007records\030\003 \003(\0132\034.suvl"
    "im.grpc.VectorRowRecord\022\014\n\004topk\030\004 \001(\003\022/\n"
    "\014extra_params\030\005 \003(\0132\031.suvlim.grpc.KeyVal"
    "uePair\"c\n\014BooleanQuery\022!\n\005occur\030\001 \001(\0162\022."
    "suvlim.grpc.Occur\0220\n\rgeneral_query\030\002 \003(\013"
    "2\031.suvlim.grpc.GeneralQuery\"\333\001\n\014GeneralQ"
    "uery\0222\n\rboolean_query\030\001 \001(\0132\031.suvlim.grp"
    "c.BooleanQueryH\000\022,\n\nterm_query\030\002 \001(\0132\026.s"
    "uvlim.grpc.TermQueryH\000\022.\n\013range_query\030\003 "
    "\001(\0132\027.suvlim.grpc.RangeQueryH\000\0220\n\014vector"
    "_query\030\004 \001(\0132\030.suvlim.grpc.VectorQueryH\000"
    "B\007\n\005query\"\250\001\n\rSearchParamPB\022\027\n\017collectio"
    "n_name\030\001 \001(\t\022\033\n\023partition_tag_array\030\002 \003("
    "\t\0220\n\rgeneral_query\030\003 \001(\0132\031.suvlim.grpc.G"
    "eneralQuery\022/\n\014extra_params\030\004 \003(\0132\031.suvl"
    "im.grpc.KeyValuePair\"\231\002\n\021InsertOrDeleteM"
    "sg\022\027\n\017collection_name\030\001 \001(\t\022\'\n\trows_data"
    "\030\002 \001(\0132\024.suvlim.grpc.RowData\022\013\n\003uid\030\003 \001("
    "\003\022\025\n\rpartition_tag\030\004 \001(\t\022\021\n\ttimestamp\030\005 "
    "\001(\003\022\022\n\nsegment_id\030\006 \001(\003\022\022\n\nchannel_id\030\007 "
    "\001(\003\022\037\n\002op\030\010 \001(\0162\023.suvlim.grpc.OpType\022\021\n\t"
    "client_id\030\t \001(\003\022/\n\014extra_params\030\n \003(\0132\031."
    "suvlim.grpc.KeyValuePair\"\316\001\n\tSearchMsg\022\027"
    "\n\017collection_name\030\001 \001(\t\022-\n\007records\030\002 \001(\013"
    "2\034.suvlim.grpc.VectorRowRecord\022\025\n\rpartit"
    "ion_tag\030\003 \001(\t\022\013\n\003uid\030\004 \001(\003\022\021\n\ttimestamp\030"
    "\005 \001(\003\022\021\n\tclient_id\030\006 \001(\003\022/\n\014extra_params"
    "\030\007 \003(\0132\031.suvlim.grpc.KeyValuePair\"X\n\013Tim"
    "eSyncMsg\022\020\n\010ClientId\030\001 \001(\003\022\021\n\tTimestamp\030"
    "\002 \001(\003\022$\n\007MsgType\030\003 \001(\0162\023.suvlim.grpc.OpT"
    "ype\"0\n\rSegmentRecord\022\013\n\003uid\030\001 \001(\003\022\022\n\nseg"
    "ment_id\030\002 \003(\003\"s\n\nKey2SegMsg\022\021\n\tclient_id"
    "\030\001 \001(\003\022+\n\007records\030\002 \001(\0132\032.suvlim.grpc.Se"
    "gmentRecord\022%\n\010msg_type\030\003 \001(\0162\023.suvlim.g"
    "rpc.OpType*\242\004\n\tErrorCode\022\013\n\007SUCCESS\020\000\022\024\n"
    "\020UNEXPECTED_ERROR\020\001\022\022\n\016CONNECT_FAILED\020\002\022"
    "\025\n\021PERMISSION_DENIED\020\003\022\031\n\025COLLECTION_NOT"
    "_EXISTS\020\004\022\024\n\020ILLEGAL_ARGUMENT\020\005\022\025\n\021ILLEG"
    "AL_DIMENSION\020\007\022\026\n\022ILLEGAL_INDEX_TYPE\020\010\022\033"
    "\n\027ILLEGAL_COLLECTION_NAME\020\t\022\020\n\014ILLEGAL_T"
    "OPK\020\n\022\025\n\021ILLEGAL_ROWRECORD\020\013\022\025\n\021ILLEGAL_"
    "VECTOR_ID\020\014\022\031\n\025ILLEGAL_SEARCH_RESULT\020\r\022\022"
    "\n\016FILE_NOT_FOUND\020\016\022\017\n\013META_FAILED\020\017\022\020\n\014C"
    "ACHE_FAILED\020\020\022\030\n\024CANNOT_CREATE_FOLDER\020\021\022"
    "\026\n\022CANNOT_CREATE_FILE\020\022\022\030\n\024CANNOT_DELETE"
    "_FOLDER\020\023\022\026\n\022CANNOT_DELETE_FILE\020\024\022\025\n\021BUI"
    "LD_INDEX_ERROR\020\025\022\021\n\rILLEGAL_NLIST\020\026\022\027\n\023I"
    "LLEGAL_METRIC_TYPE\020\027\022\021\n\rOUT_OF_MEMORY\020\030*"
    "\221\001\n\010DataType\022\010\n\004NONE\020\000\022\010\n\004BOOL\020\001\022\010\n\004INT8"
    "\020\002\022\t\n\005INT16\020\003\022\t\n\005INT32\020\004\022\t\n\005INT64\020\005\022\t\n\005F"
    "LOAT\020\n\022\n\n\006DOUBLE\020\013\022\n\n\006STRING\020\024\022\021\n\rVECTOR"
    "_BINARY\020d\022\020\n\014VECTOR_FLOAT\020e*C\n\017CompareOp"
    "erator\022\006\n\002LT\020\000\022\007\n\003LTE\020\001\022\006\n\002EQ\020\002\022\006\n\002GT\020\003\022"
    "\007\n\003GTE\020\004\022\006\n\002NE\020\005*8\n\005Occur\022\013\n\007INVALID\020\000\022\010"
    "\n\004MUST\020\001\022\n\n\006SHOULD\020\002\022\014\n\010MUST_NOT\020\003*\?\n\006Op"
    "Type\022\n\n\006INSERT\020\000\022\n\n\006DELETE\020\001\022\n\n\006SEARCH\020\002"
    "\022\021\n\rSEARCH_RESULT\020\0032\333\r\n\rMilvusService\022\?\n"
    "\020CreateCollection\022\024.suvlim.grpc.Mapping\032"
    "\023.suvlim.grpc.Status\"\000\022F\n\rHasCollection\022"
    "\033.suvlim.grpc.CollectionName\032\026.suvlim.gr"
    "pc.BoolReply\"\000\022I\n\022DescribeCollection\022\033.s"
    "uvlim.grpc.CollectionName\032\024.suvlim.grpc."
    "Mapping\"\000\022Q\n\017CountCollection\022\033.suvlim.gr"
    "pc.CollectionName\032\037.suvlim.grpc.Collecti"
    "onRowCount\"\000\022J\n\017ShowCollections\022\024.suvlim"
    ".grpc.Command\032\037.suvlim.grpc.CollectionNa"
    "meList\"\000\022P\n\022ShowCollectionInfo\022\033.suvlim."
    "grpc.CollectionName\032\033.suvlim.grpc.Collec"
    "tionInfo\"\000\022D\n\016DropCollection\022\033.suvlim.gr"
    "pc.CollectionName\032\023.suvlim.grpc.Status\"\000"
    "\022=\n\013CreateIndex\022\027.suvlim.grpc.IndexParam"
    "\032\023.suvlim.grpc.Status\"\000\022C\n\rDescribeIndex"
    "\022\027.suvlim.grpc.IndexParam\032\027.suvlim.grpc."
    "IndexParam\"\000\022;\n\tDropIndex\022\027.suvlim.grpc."
    "IndexParam\032\023.suvlim.grpc.Status\"\000\022E\n\017Cre"
    "atePartition\022\033.suvlim.grpc.PartitionPara"
    "m\032\023.suvlim.grpc.Status\"\000\022E\n\014HasPartition"
    "\022\033.suvlim.grpc.PartitionParam\032\026.suvlim.g"
    "rpc.BoolReply\"\000\022K\n\016ShowPartitions\022\033.suvl"
    "im.grpc.CollectionName\032\032.suvlim.grpc.Par"
    "titionList\"\000\022C\n\rDropPartition\022\033.suvlim.g"
    "rpc.PartitionParam\032\023.suvlim.grpc.Status\""
    "\000\022<\n\006Insert\022\030.suvlim.grpc.InsertParam\032\026."
    "suvlim.grpc.EntityIds\"\000\022E\n\rGetEntityByID"
    "\022\033.suvlim.grpc.EntityIdentity\032\025.suvlim.g"
    "rpc.Entities\"\000\022H\n\014GetEntityIDs\022\036.suvlim."
    "grpc.GetEntityIDsParam\032\026.suvlim.grpc.Ent"
    "ityIds\"\000\022>\n\006Search\022\030.suvlim.grpc.SearchP"
    "aram\032\030.suvlim.grpc.QueryResult\"\000\022P\n\017Sear"
    "chInSegment\022!.suvlim.grpc.SearchInSegmen"
    "tParam\032\030.suvlim.grpc.QueryResult\"\000\0227\n\003Cm"
    "d\022\024.suvlim.grpc.Command\032\030.suvlim.grpc.St"
    "ringReply\"\000\022A\n\nDeleteByID\022\034.suvlim.grpc."
    "DeleteByIDParam\032\023.suvlim.grpc.Status\"\000\022G"
    "\n\021PreloadCollection\022\033.suvlim.grpc.Collec"
    "tionName\032\023.suvlim.grpc.Status\"\000\0227\n\005Flush"
    "\022\027.suvlim.grpc.FlushParam\032\023.suvlim.grpc."
    "Status\"\000\022;\n\007Compact\022\031.suvlim.grpc.Compac"
    "tParam\032\023.suvlim.grpc.Status\"\000\022B\n\010SearchP"
    "B\022\032.suvlim.grpc.SearchParamPB\032\030.suvlim.g"
    "rpc.QueryResult\"\000b\006proto3", 7625);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "suvlim.proto", &protobuf_RegisterTypes);
  Status::default_instance_ = new Status();
  KeyValuePair::default_instance_ = new KeyValuePair();
  CollectionName::default_instance_ = new CollectionName();
  CollectionNameList::default_instance_ = new CollectionNameList();
  FieldName::default_instance_ = new FieldName();
  Mapping::default_instance_ = new Mapping();
  MappingList::default_instance_ = new MappingList();
  PartitionParam::default_instance_ = new PartitionParam();
  PartitionList::default_instance_ = new PartitionList();
  VectorRowRecord::default_instance_ = new VectorRowRecord();
  EntityIds::default_instance_ = new EntityIds();
  VectorRecord::default_instance_ = new VectorRecord();
  VectorParam::default_instance_ = new VectorParam();
  FieldMeta::default_instance_ = new FieldMeta();
  Schema::default_instance_ = new Schema();
  RowData::default_instance_ = new RowData();
  InsertParam::default_instance_ = new InsertParam();
  SearchParam::default_instance_ = new SearchParam();
  SearchInSegmentParam::default_instance_ = new SearchInSegmentParam();
  Entities::default_instance_ = new Entities();
  QueryResult::default_instance_ = new QueryResult();
  StringReply::default_instance_ = new StringReply();
  BoolReply::default_instance_ = new BoolReply();
  CollectionRowCount::default_instance_ = new CollectionRowCount();
  Command::default_instance_ = new Command();
  IndexParam::default_instance_ = new IndexParam();
  FlushParam::default_instance_ = new FlushParam();
  CompactParam::default_instance_ = new CompactParam();
  DeleteByIDParam::default_instance_ = new DeleteByIDParam();
  CollectionInfo::default_instance_ = new CollectionInfo();
  GetEntityIDsParam::default_instance_ = new GetEntityIDsParam();
  EntityIdentity::default_instance_ = new EntityIdentity();
  VectorFieldParam::default_instance_ = new VectorFieldParam();
  FieldType::default_instance_ = new FieldType();
  FieldType_default_oneof_instance_ = new FieldTypeOneofInstance();
  FieldParam::default_instance_ = new FieldParam();
  VectorFieldRecord::default_instance_ = new VectorFieldRecord();
  TermQuery::default_instance_ = new TermQuery();
  CompareExpr::default_instance_ = new CompareExpr();
  RangeQuery::default_instance_ = new RangeQuery();
  VectorQuery::default_instance_ = new VectorQuery();
  BooleanQuery::default_instance_ = new BooleanQuery();
  GeneralQuery::default_instance_ = new GeneralQuery();
  GeneralQuery_default_oneof_instance_ = new GeneralQueryOneofInstance();
  SearchParamPB::default_instance_ = new SearchParamPB();
  InsertOrDeleteMsg::default_instance_ = new InsertOrDeleteMsg();
  SearchMsg::default_instance_ = new SearchMsg();
  TimeSyncMsg::default_instance_ = new TimeSyncMsg();
  SegmentRecord::default_instance_ = new SegmentRecord();
  Key2SegMsg::default_instance_ = new Key2SegMsg();
  Status::default_instance_->InitAsDefaultInstance();
  KeyValuePair::default_instance_->InitAsDefaultInstance();
  CollectionName::default_instance_->InitAsDefaultInstance();
  CollectionNameList::default_instance_->InitAsDefaultInstance();
  FieldName::default_instance_->InitAsDefaultInstance();
  Mapping::default_instance_->InitAsDefaultInstance();
  MappingList::default_instance_->InitAsDefaultInstance();
  PartitionParam::default_instance_->InitAsDefaultInstance();
  PartitionList::default_instance_->InitAsDefaultInstance();
  VectorRowRecord::default_instance_->InitAsDefaultInstance();
  EntityIds::default_instance_->InitAsDefaultInstance();
  VectorRecord::default_instance_->InitAsDefaultInstance();
  VectorParam::default_instance_->InitAsDefaultInstance();
  FieldMeta::default_instance_->InitAsDefaultInstance();
  Schema::default_instance_->InitAsDefaultInstance();
  RowData::default_instance_->InitAsDefaultInstance();
  InsertParam::default_instance_->InitAsDefaultInstance();
  SearchParam::default_instance_->InitAsDefaultInstance();
  SearchInSegmentParam::default_instance_->InitAsDefaultInstance();
  Entities::default_instance_->InitAsDefaultInstance();
  QueryResult::default_instance_->InitAsDefaultInstance();
  StringReply::default_instance_->InitAsDefaultInstance();
  BoolReply::default_instance_->InitAsDefaultInstance();
  CollectionRowCount::default_instance_->InitAsDefaultInstance();
  Command::default_instance_->InitAsDefaultInstance();
  IndexParam::default_instance_->InitAsDefaultInstance();
  FlushParam::default_instance_->InitAsDefaultInstance();
  CompactParam::default_instance_->InitAsDefaultInstance();
  DeleteByIDParam::default_instance_->InitAsDefaultInstance();
  CollectionInfo::default_instance_->InitAsDefaultInstance();
  GetEntityIDsParam::default_instance_->InitAsDefaultInstance();
  EntityIdentity::default_instance_->InitAsDefaultInstance();
  VectorFieldParam::default_instance_->InitAsDefaultInstance();
  FieldType::default_instance_->InitAsDefaultInstance();
  FieldParam::default_instance_->InitAsDefaultInstance();
  VectorFieldRecord::default_instance_->InitAsDefaultInstance();
  TermQuery::default_instance_->InitAsDefaultInstance();
  CompareExpr::default_instance_->InitAsDefaultInstance();
  RangeQuery::default_instance_->InitAsDefaultInstance();
  VectorQuery::default_instance_->InitAsDefaultInstance();
  BooleanQuery::default_instance_->InitAsDefaultInstance();
  GeneralQuery::default_instance_->InitAsDefaultInstance();
  SearchParamPB::default_instance_->InitAsDefaultInstance();
  InsertOrDeleteMsg::default_instance_->InitAsDefaultInstance();
  SearchMsg::default_instance_->InitAsDefaultInstance();
  TimeSyncMsg::default_instance_->InitAsDefaultInstance();
  SegmentRecord::default_instance_->InitAsDefaultInstance();
  Key2SegMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_suvlim_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_suvlim_2eproto {
  StaticDescriptorInitializer_suvlim_2eproto() {
    protobuf_AddDesc_suvlim_2eproto();
  }
} static_descriptor_initializer_suvlim_2eproto_;
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorCode_descriptor_;
}
bool ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataType_descriptor_;
}
bool DataType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 10:
    case 11:
    case 20:
    case 100:
    case 101:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CompareOperator_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompareOperator_descriptor_;
}
bool CompareOperator_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Occur_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Occur_descriptor_;
}
bool Occur_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OpType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpType_descriptor_;
}
bool OpType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Status::kErrorCodeFieldNumber;
const int Status::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Status::Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.Status)
}

void Status::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Status::Status(const Status& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.Status)
}

void Status::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  error_code_ = 0;
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.Status)
  SharedDtor();
}

void Status::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Status_descriptor_;
}

const Status& Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

Status* Status::default_instance_ = NULL;

Status* Status::New(::google::protobuf::Arena* arena) const {
  Status* n = new Status;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.Status)
  error_code_ = 0;
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.Status)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.ErrorCode error_code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::suvlim::grpc::ErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reason;
        break;
      }

      // optional string reason = 2;
      case 2: {
        if (tag == 18) {
         parse_reason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), this->reason().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.Status.reason"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.Status)
  return false;
#undef DO_
}

void Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.Status)
  // optional .suvlim.grpc.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // optional string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.Status.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.Status)
}

::google::protobuf::uint8* Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.Status)
  // optional .suvlim.grpc.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // optional string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.Status.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.Status)
  return target;
}

int Status::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.Status)
  int total_size = 0;

  // optional .suvlim.grpc.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  // optional string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.Status)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Status* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.Status)
    MergeFrom(*source);
  }
}

void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.Status)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
}

void Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {

  return true;
}

void Status::Swap(Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Status::InternalSwap(Status* other) {
  std::swap(error_code_, other->error_code_);
  reason_.Swap(&other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Status_descriptor_;
  metadata.reflection = Status_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Status

// optional .suvlim.grpc.ErrorCode error_code = 1;
void Status::clear_error_code() {
  error_code_ = 0;
}
 ::suvlim::grpc::ErrorCode Status::error_code() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Status.error_code)
  return static_cast< ::suvlim::grpc::ErrorCode >(error_code_);
}
 void Status::set_error_code(::suvlim::grpc::ErrorCode value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.Status.error_code)
}

// optional string reason = 2;
void Status::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Status::reason() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Status.reason)
  return reason_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Status::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.Status.reason)
}
 void Status::set_reason(const char* value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.Status.reason)
}
 void Status::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.Status.reason)
}
 ::std::string* Status::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.Status.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Status::release_reason() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.Status.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Status::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.Status.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValuePair::kKeyFieldNumber;
const int KeyValuePair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValuePair::KeyValuePair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.KeyValuePair)
}

void KeyValuePair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

KeyValuePair::KeyValuePair(const KeyValuePair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.KeyValuePair)
}

void KeyValuePair::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyValuePair::~KeyValuePair() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.KeyValuePair)
  SharedDtor();
}

void KeyValuePair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void KeyValuePair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValuePair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeyValuePair_descriptor_;
}

const KeyValuePair& KeyValuePair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

KeyValuePair* KeyValuePair::default_instance_ = NULL;

KeyValuePair* KeyValuePair::New(::google::protobuf::Arena* arena) const {
  KeyValuePair* n = new KeyValuePair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValuePair::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.KeyValuePair)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool KeyValuePair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.KeyValuePair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.KeyValuePair.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.KeyValuePair.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.KeyValuePair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.KeyValuePair)
  return false;
#undef DO_
}

void KeyValuePair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.KeyValuePair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.KeyValuePair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.KeyValuePair.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.KeyValuePair)
}

::google::protobuf::uint8* KeyValuePair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.KeyValuePair)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.KeyValuePair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.KeyValuePair.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.KeyValuePair)
  return target;
}

int KeyValuePair::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.KeyValuePair)
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValuePair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.KeyValuePair)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const KeyValuePair* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValuePair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.KeyValuePair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.KeyValuePair)
    MergeFrom(*source);
  }
}

void KeyValuePair::MergeFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.KeyValuePair)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void KeyValuePair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValuePair::CopyFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValuePair::IsInitialized() const {

  return true;
}

void KeyValuePair::Swap(KeyValuePair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValuePair::InternalSwap(KeyValuePair* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValuePair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeyValuePair_descriptor_;
  metadata.reflection = KeyValuePair_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyValuePair

// optional string key = 1;
void KeyValuePair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& KeyValuePair::key() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.KeyValuePair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeyValuePair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.KeyValuePair.key)
}
 void KeyValuePair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.KeyValuePair.key)
}
 void KeyValuePair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.KeyValuePair.key)
}
 ::std::string* KeyValuePair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.KeyValuePair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* KeyValuePair::release_key() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.KeyValuePair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeyValuePair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.KeyValuePair.key)
}

// optional string value = 2;
void KeyValuePair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& KeyValuePair::value() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.KeyValuePair.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeyValuePair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.KeyValuePair.value)
}
 void KeyValuePair::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.KeyValuePair.value)
}
 void KeyValuePair::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.KeyValuePair.value)
}
 ::std::string* KeyValuePair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.KeyValuePair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* KeyValuePair::release_value() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.KeyValuePair.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeyValuePair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.KeyValuePair.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectionName::kCollectionNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectionName::CollectionName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.CollectionName)
}

void CollectionName::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CollectionName::CollectionName(const CollectionName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.CollectionName)
}

void CollectionName::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CollectionName::~CollectionName() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.CollectionName)
  SharedDtor();
}

void CollectionName::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CollectionName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectionName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectionName_descriptor_;
}

const CollectionName& CollectionName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

CollectionName* CollectionName::default_instance_ = NULL;

CollectionName* CollectionName::New(::google::protobuf::Arena* arena) const {
  CollectionName* n = new CollectionName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectionName::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.CollectionName)
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CollectionName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.CollectionName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.CollectionName.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.CollectionName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.CollectionName)
  return false;
#undef DO_
}

void CollectionName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.CollectionName)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.CollectionName.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.CollectionName)
}

::google::protobuf::uint8* CollectionName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.CollectionName)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.CollectionName.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.CollectionName)
  return target;
}

int CollectionName::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.CollectionName)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectionName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.CollectionName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CollectionName* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectionName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.CollectionName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.CollectionName)
    MergeFrom(*source);
  }
}

void CollectionName::MergeFrom(const CollectionName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.CollectionName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
}

void CollectionName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.CollectionName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionName::CopyFrom(const CollectionName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.CollectionName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionName::IsInitialized() const {

  return true;
}

void CollectionName::Swap(CollectionName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectionName::InternalSwap(CollectionName* other) {
  collection_name_.Swap(&other->collection_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectionName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectionName_descriptor_;
  metadata.reflection = CollectionName_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CollectionName

// optional string collection_name = 1;
void CollectionName::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CollectionName::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.CollectionName.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CollectionName::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.CollectionName.collection_name)
}
 void CollectionName::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.CollectionName.collection_name)
}
 void CollectionName::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.CollectionName.collection_name)
}
 ::std::string* CollectionName::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.CollectionName.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CollectionName::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.CollectionName.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CollectionName::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.CollectionName.collection_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectionNameList::kStatusFieldNumber;
const int CollectionNameList::kCollectionNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectionNameList::CollectionNameList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.CollectionNameList)
}

void CollectionNameList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
}

CollectionNameList::CollectionNameList(const CollectionNameList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.CollectionNameList)
}

void CollectionNameList::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = NULL;
}

CollectionNameList::~CollectionNameList() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.CollectionNameList)
  SharedDtor();
}

void CollectionNameList::SharedDtor() {
  if (this != default_instance_) {
    delete status_;
  }
}

void CollectionNameList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectionNameList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectionNameList_descriptor_;
}

const CollectionNameList& CollectionNameList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

CollectionNameList* CollectionNameList::default_instance_ = NULL;

CollectionNameList* CollectionNameList::New(::google::protobuf::Arena* arena) const {
  CollectionNameList* n = new CollectionNameList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectionNameList::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.CollectionNameList)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  collection_names_.Clear();
}

bool CollectionNameList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.CollectionNameList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_collection_names;
        break;
      }

      // repeated string collection_names = 2;
      case 2: {
        if (tag == 18) {
         parse_collection_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_collection_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_names(this->collection_names_size() - 1).data(),
            this->collection_names(this->collection_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.CollectionNameList.collection_names"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_collection_names;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.CollectionNameList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.CollectionNameList)
  return false;
#undef DO_
}

void CollectionNameList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.CollectionNameList)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // repeated string collection_names = 2;
  for (int i = 0; i < this->collection_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_names(i).data(), this->collection_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.CollectionNameList.collection_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->collection_names(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.CollectionNameList)
}

::google::protobuf::uint8* CollectionNameList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.CollectionNameList)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // repeated string collection_names = 2;
  for (int i = 0; i < this->collection_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_names(i).data(), this->collection_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.CollectionNameList.collection_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->collection_names(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.CollectionNameList)
  return target;
}

int CollectionNameList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.CollectionNameList)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // repeated string collection_names = 2;
  total_size += 1 * this->collection_names_size();
  for (int i = 0; i < this->collection_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->collection_names(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectionNameList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.CollectionNameList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CollectionNameList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectionNameList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.CollectionNameList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.CollectionNameList)
    MergeFrom(*source);
  }
}

void CollectionNameList::MergeFrom(const CollectionNameList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.CollectionNameList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  collection_names_.MergeFrom(from.collection_names_);
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
}

void CollectionNameList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.CollectionNameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionNameList::CopyFrom(const CollectionNameList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.CollectionNameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionNameList::IsInitialized() const {

  return true;
}

void CollectionNameList::Swap(CollectionNameList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectionNameList::InternalSwap(CollectionNameList* other) {
  std::swap(status_, other->status_);
  collection_names_.UnsafeArenaSwap(&other->collection_names_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectionNameList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectionNameList_descriptor_;
  metadata.reflection = CollectionNameList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CollectionNameList

// optional .suvlim.grpc.Status status = 1;
bool CollectionNameList::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void CollectionNameList::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& CollectionNameList::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.CollectionNameList.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* CollectionNameList::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.CollectionNameList.status)
  return status_;
}
::suvlim::grpc::Status* CollectionNameList::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.CollectionNameList.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void CollectionNameList::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.CollectionNameList.status)
}

// repeated string collection_names = 2;
int CollectionNameList::collection_names_size() const {
  return collection_names_.size();
}
void CollectionNameList::clear_collection_names() {
  collection_names_.Clear();
}
 const ::std::string& CollectionNameList::collection_names(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.CollectionNameList.collection_names)
  return collection_names_.Get(index);
}
 ::std::string* CollectionNameList::mutable_collection_names(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.CollectionNameList.collection_names)
  return collection_names_.Mutable(index);
}
 void CollectionNameList::set_collection_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:suvlim.grpc.CollectionNameList.collection_names)
  collection_names_.Mutable(index)->assign(value);
}
 void CollectionNameList::set_collection_names(int index, const char* value) {
  collection_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.CollectionNameList.collection_names)
}
 void CollectionNameList::set_collection_names(int index, const char* value, size_t size) {
  collection_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.CollectionNameList.collection_names)
}
 ::std::string* CollectionNameList::add_collection_names() {
  // @@protoc_insertion_point(field_add_mutable:suvlim.grpc.CollectionNameList.collection_names)
  return collection_names_.Add();
}
 void CollectionNameList::add_collection_names(const ::std::string& value) {
  collection_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.CollectionNameList.collection_names)
}
 void CollectionNameList::add_collection_names(const char* value) {
  collection_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:suvlim.grpc.CollectionNameList.collection_names)
}
 void CollectionNameList::add_collection_names(const char* value, size_t size) {
  collection_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:suvlim.grpc.CollectionNameList.collection_names)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CollectionNameList::collection_names() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.CollectionNameList.collection_names)
  return collection_names_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CollectionNameList::mutable_collection_names() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.CollectionNameList.collection_names)
  return &collection_names_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldName::kCollectionNameFieldNumber;
const int FieldName::kFieldNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldName::FieldName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.FieldName)
}

void FieldName::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FieldName::FieldName(const FieldName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.FieldName)
}

void FieldName::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FieldName::~FieldName() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.FieldName)
  SharedDtor();
}

void FieldName::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FieldName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FieldName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FieldName_descriptor_;
}

const FieldName& FieldName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

FieldName* FieldName::default_instance_ = NULL;

FieldName* FieldName::New(::google::protobuf::Arena* arena) const {
  FieldName* n = new FieldName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FieldName::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.FieldName)
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FieldName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.FieldName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.FieldName.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_field_name;
        break;
      }

      // optional string field_name = 2;
      case 2: {
        if (tag == 18) {
         parse_field_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_name().data(), this->field_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.FieldName.field_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.FieldName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.FieldName)
  return false;
#undef DO_
}

void FieldName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.FieldName)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.FieldName.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // optional string field_name = 2;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.FieldName.field_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->field_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.FieldName)
}

::google::protobuf::uint8* FieldName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.FieldName)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.FieldName.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // optional string field_name = 2;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.FieldName.field_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->field_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.FieldName)
  return target;
}

int FieldName::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.FieldName)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional string field_name = 2;
  if (this->field_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FieldName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.FieldName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FieldName* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.FieldName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.FieldName)
    MergeFrom(*source);
  }
}

void FieldName::MergeFrom(const FieldName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.FieldName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.field_name().size() > 0) {

    field_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_name_);
  }
}

void FieldName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.FieldName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldName::CopyFrom(const FieldName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.FieldName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldName::IsInitialized() const {

  return true;
}

void FieldName::Swap(FieldName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FieldName::InternalSwap(FieldName* other) {
  collection_name_.Swap(&other->collection_name_);
  field_name_.Swap(&other->field_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FieldName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FieldName_descriptor_;
  metadata.reflection = FieldName_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FieldName

// optional string collection_name = 1;
void FieldName::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FieldName::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldName.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FieldName::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.FieldName.collection_name)
}
 void FieldName::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.FieldName.collection_name)
}
 void FieldName::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.FieldName.collection_name)
}
 ::std::string* FieldName::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.FieldName.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FieldName::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.FieldName.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FieldName::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.FieldName.collection_name)
}

// optional string field_name = 2;
void FieldName::clear_field_name() {
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FieldName::field_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldName.field_name)
  return field_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FieldName::set_field_name(const ::std::string& value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.FieldName.field_name)
}
 void FieldName::set_field_name(const char* value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.FieldName.field_name)
}
 void FieldName::set_field_name(const char* value, size_t size) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.FieldName.field_name)
}
 ::std::string* FieldName::mutable_field_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.FieldName.field_name)
  return field_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FieldName::release_field_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.FieldName.field_name)
  
  return field_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FieldName::set_allocated_field_name(::std::string* field_name) {
  if (field_name != NULL) {
    
  } else {
    
  }
  field_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.FieldName.field_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mapping::kStatusFieldNumber;
const int Mapping::kCollectionNameFieldNumber;
const int Mapping::kFieldsFieldNumber;
const int Mapping::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mapping::Mapping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.Mapping)
}

void Mapping::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
}

Mapping::Mapping(const Mapping& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.Mapping)
}

void Mapping::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = NULL;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Mapping::~Mapping() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.Mapping)
  SharedDtor();
}

void Mapping::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete status_;
  }
}

void Mapping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mapping::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mapping_descriptor_;
}

const Mapping& Mapping::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

Mapping* Mapping::default_instance_ = NULL;

Mapping* Mapping::New(::google::protobuf::Arena* arena) const {
  Mapping* n = new Mapping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mapping::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.Mapping)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fields_.Clear();
  extra_params_.Clear();
}

bool Mapping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.Mapping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_collection_name;
        break;
      }

      // optional string collection_name = 2;
      case 2: {
        if (tag == 18) {
         parse_collection_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.Mapping.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fields;
        break;
      }

      // repeated .suvlim.grpc.FieldParam fields = 3;
      case 3: {
        if (tag == 26) {
         parse_fields:
          DO_(input->IncrementRecursionDepth());
         parse_loop_fields:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_fields;
        if (input->ExpectTag(34)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.Mapping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.Mapping)
  return false;
#undef DO_
}

void Mapping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.Mapping)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.Mapping.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collection_name(), output);
  }

  // repeated .suvlim.grpc.FieldParam fields = 3;
  for (unsigned int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->fields(i), output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.Mapping)
}

::google::protobuf::uint8* Mapping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.Mapping)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.Mapping.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collection_name(), target);
  }

  // repeated .suvlim.grpc.FieldParam fields = 3;
  for (unsigned int i = 0, n = this->fields_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->fields(i), false, target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.Mapping)
  return target;
}

int Mapping::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.Mapping)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // repeated .suvlim.grpc.FieldParam fields = 3;
  total_size += 1 * this->fields_size();
  for (int i = 0; i < this->fields_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fields(i));
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mapping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.Mapping)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Mapping* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Mapping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.Mapping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.Mapping)
    MergeFrom(*source);
  }
}

void Mapping::MergeFrom(const Mapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.Mapping)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  fields_.MergeFrom(from.fields_);
  extra_params_.MergeFrom(from.extra_params_);
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
}

void Mapping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.Mapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mapping::CopyFrom(const Mapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.Mapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mapping::IsInitialized() const {

  return true;
}

void Mapping::Swap(Mapping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mapping::InternalSwap(Mapping* other) {
  std::swap(status_, other->status_);
  collection_name_.Swap(&other->collection_name_);
  fields_.UnsafeArenaSwap(&other->fields_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mapping::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Mapping_descriptor_;
  metadata.reflection = Mapping_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Mapping

// optional .suvlim.grpc.Status status = 1;
bool Mapping::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void Mapping::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& Mapping::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Mapping.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* Mapping::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.Mapping.status)
  return status_;
}
::suvlim::grpc::Status* Mapping::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.Mapping.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void Mapping::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.Mapping.status)
}

// optional string collection_name = 2;
void Mapping::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Mapping::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Mapping.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mapping::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.Mapping.collection_name)
}
 void Mapping::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.Mapping.collection_name)
}
 void Mapping::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.Mapping.collection_name)
}
 ::std::string* Mapping::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.Mapping.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Mapping::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.Mapping.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mapping::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.Mapping.collection_name)
}

// repeated .suvlim.grpc.FieldParam fields = 3;
int Mapping::fields_size() const {
  return fields_.size();
}
void Mapping::clear_fields() {
  fields_.Clear();
}
const ::suvlim::grpc::FieldParam& Mapping::fields(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Mapping.fields)
  return fields_.Get(index);
}
::suvlim::grpc::FieldParam* Mapping::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.Mapping.fields)
  return fields_.Mutable(index);
}
::suvlim::grpc::FieldParam* Mapping::add_fields() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.Mapping.fields)
  return fields_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::FieldParam >*
Mapping::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.Mapping.fields)
  return &fields_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::FieldParam >&
Mapping::fields() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.Mapping.fields)
  return fields_;
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 4;
int Mapping::extra_params_size() const {
  return extra_params_.size();
}
void Mapping::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& Mapping::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Mapping.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* Mapping::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.Mapping.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* Mapping::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.Mapping.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
Mapping::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.Mapping.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
Mapping::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.Mapping.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MappingList::kStatusFieldNumber;
const int MappingList::kMappingListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MappingList::MappingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.MappingList)
}

void MappingList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
}

MappingList::MappingList(const MappingList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.MappingList)
}

void MappingList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = NULL;
}

MappingList::~MappingList() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.MappingList)
  SharedDtor();
}

void MappingList::SharedDtor() {
  if (this != default_instance_) {
    delete status_;
  }
}

void MappingList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MappingList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MappingList_descriptor_;
}

const MappingList& MappingList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

MappingList* MappingList::default_instance_ = NULL;

MappingList* MappingList::New(::google::protobuf::Arena* arena) const {
  MappingList* n = new MappingList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MappingList::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.MappingList)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  mapping_list_.Clear();
}

bool MappingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.MappingList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mapping_list;
        break;
      }

      // repeated .suvlim.grpc.Mapping mapping_list = 2;
      case 2: {
        if (tag == 18) {
         parse_mapping_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_mapping_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_mapping_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_mapping_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.MappingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.MappingList)
  return false;
#undef DO_
}

void MappingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.MappingList)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // repeated .suvlim.grpc.Mapping mapping_list = 2;
  for (unsigned int i = 0, n = this->mapping_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mapping_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.MappingList)
}

::google::protobuf::uint8* MappingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.MappingList)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // repeated .suvlim.grpc.Mapping mapping_list = 2;
  for (unsigned int i = 0, n = this->mapping_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->mapping_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.MappingList)
  return target;
}

int MappingList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.MappingList)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // repeated .suvlim.grpc.Mapping mapping_list = 2;
  total_size += 1 * this->mapping_list_size();
  for (int i = 0; i < this->mapping_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mapping_list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MappingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.MappingList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MappingList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MappingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.MappingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.MappingList)
    MergeFrom(*source);
  }
}

void MappingList::MergeFrom(const MappingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.MappingList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  mapping_list_.MergeFrom(from.mapping_list_);
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
}

void MappingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.MappingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MappingList::CopyFrom(const MappingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.MappingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MappingList::IsInitialized() const {

  return true;
}

void MappingList::Swap(MappingList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MappingList::InternalSwap(MappingList* other) {
  std::swap(status_, other->status_);
  mapping_list_.UnsafeArenaSwap(&other->mapping_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MappingList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MappingList_descriptor_;
  metadata.reflection = MappingList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MappingList

// optional .suvlim.grpc.Status status = 1;
bool MappingList::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void MappingList::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& MappingList::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.MappingList.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* MappingList::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.MappingList.status)
  return status_;
}
::suvlim::grpc::Status* MappingList::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.MappingList.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void MappingList::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.MappingList.status)
}

// repeated .suvlim.grpc.Mapping mapping_list = 2;
int MappingList::mapping_list_size() const {
  return mapping_list_.size();
}
void MappingList::clear_mapping_list() {
  mapping_list_.Clear();
}
const ::suvlim::grpc::Mapping& MappingList::mapping_list(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.MappingList.mapping_list)
  return mapping_list_.Get(index);
}
::suvlim::grpc::Mapping* MappingList::mutable_mapping_list(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.MappingList.mapping_list)
  return mapping_list_.Mutable(index);
}
::suvlim::grpc::Mapping* MappingList::add_mapping_list() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.MappingList.mapping_list)
  return mapping_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::Mapping >*
MappingList::mutable_mapping_list() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.MappingList.mapping_list)
  return &mapping_list_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::Mapping >&
MappingList::mapping_list() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.MappingList.mapping_list)
  return mapping_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartitionParam::kCollectionNameFieldNumber;
const int PartitionParam::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartitionParam::PartitionParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.PartitionParam)
}

void PartitionParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PartitionParam::PartitionParam(const PartitionParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.PartitionParam)
}

void PartitionParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PartitionParam::~PartitionParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.PartitionParam)
  SharedDtor();
}

void PartitionParam::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PartitionParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PartitionParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PartitionParam_descriptor_;
}

const PartitionParam& PartitionParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

PartitionParam* PartitionParam::default_instance_ = NULL;

PartitionParam* PartitionParam::New(::google::protobuf::Arena* arena) const {
  PartitionParam* n = new PartitionParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PartitionParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.PartitionParam)
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PartitionParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.PartitionParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.PartitionParam.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tag;
        break;
      }

      // optional string tag = 2;
      case 2: {
        if (tag == 18) {
         parse_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), this->tag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.PartitionParam.tag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.PartitionParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.PartitionParam)
  return false;
#undef DO_
}

void PartitionParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.PartitionParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.PartitionParam.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // optional string tag = 2;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.PartitionParam.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tag(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.PartitionParam)
}

::google::protobuf::uint8* PartitionParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.PartitionParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.PartitionParam.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // optional string tag = 2;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.PartitionParam.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tag(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.PartitionParam)
  return target;
}

int PartitionParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.PartitionParam)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional string tag = 2;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PartitionParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.PartitionParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PartitionParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PartitionParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.PartitionParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.PartitionParam)
    MergeFrom(*source);
  }
}

void PartitionParam::MergeFrom(const PartitionParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.PartitionParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.tag().size() > 0) {

    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
}

void PartitionParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.PartitionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartitionParam::CopyFrom(const PartitionParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.PartitionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartitionParam::IsInitialized() const {

  return true;
}

void PartitionParam::Swap(PartitionParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartitionParam::InternalSwap(PartitionParam* other) {
  collection_name_.Swap(&other->collection_name_);
  tag_.Swap(&other->tag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PartitionParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PartitionParam_descriptor_;
  metadata.reflection = PartitionParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PartitionParam

// optional string collection_name = 1;
void PartitionParam::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PartitionParam::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.PartitionParam.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PartitionParam::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.PartitionParam.collection_name)
}
 void PartitionParam::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.PartitionParam.collection_name)
}
 void PartitionParam::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.PartitionParam.collection_name)
}
 ::std::string* PartitionParam::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.PartitionParam.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PartitionParam::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.PartitionParam.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PartitionParam::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.PartitionParam.collection_name)
}

// optional string tag = 2;
void PartitionParam::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PartitionParam::tag() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.PartitionParam.tag)
  return tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PartitionParam::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.PartitionParam.tag)
}
 void PartitionParam::set_tag(const char* value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.PartitionParam.tag)
}
 void PartitionParam::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.PartitionParam.tag)
}
 ::std::string* PartitionParam::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.PartitionParam.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PartitionParam::release_tag() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.PartitionParam.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PartitionParam::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.PartitionParam.tag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartitionList::kStatusFieldNumber;
const int PartitionList::kPartitionTagArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartitionList::PartitionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.PartitionList)
}

void PartitionList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
}

PartitionList::PartitionList(const PartitionList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.PartitionList)
}

void PartitionList::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = NULL;
}

PartitionList::~PartitionList() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.PartitionList)
  SharedDtor();
}

void PartitionList::SharedDtor() {
  if (this != default_instance_) {
    delete status_;
  }
}

void PartitionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PartitionList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PartitionList_descriptor_;
}

const PartitionList& PartitionList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

PartitionList* PartitionList::default_instance_ = NULL;

PartitionList* PartitionList::New(::google::protobuf::Arena* arena) const {
  PartitionList* n = new PartitionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PartitionList::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.PartitionList)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  partition_tag_array_.Clear();
}

bool PartitionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.PartitionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_partition_tag_array;
        break;
      }

      // repeated string partition_tag_array = 2;
      case 2: {
        if (tag == 18) {
         parse_partition_tag_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_partition_tag_array()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partition_tag_array(this->partition_tag_array_size() - 1).data(),
            this->partition_tag_array(this->partition_tag_array_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.PartitionList.partition_tag_array"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_partition_tag_array;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.PartitionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.PartitionList)
  return false;
#undef DO_
}

void PartitionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.PartitionList)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // repeated string partition_tag_array = 2;
  for (int i = 0; i < this->partition_tag_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag_array(i).data(), this->partition_tag_array(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.PartitionList.partition_tag_array");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->partition_tag_array(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.PartitionList)
}

::google::protobuf::uint8* PartitionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.PartitionList)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // repeated string partition_tag_array = 2;
  for (int i = 0; i < this->partition_tag_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag_array(i).data(), this->partition_tag_array(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.PartitionList.partition_tag_array");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->partition_tag_array(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.PartitionList)
  return target;
}

int PartitionList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.PartitionList)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // repeated string partition_tag_array = 2;
  total_size += 1 * this->partition_tag_array_size();
  for (int i = 0; i < this->partition_tag_array_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->partition_tag_array(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PartitionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.PartitionList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PartitionList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PartitionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.PartitionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.PartitionList)
    MergeFrom(*source);
  }
}

void PartitionList::MergeFrom(const PartitionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.PartitionList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  partition_tag_array_.MergeFrom(from.partition_tag_array_);
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
}

void PartitionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.PartitionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartitionList::CopyFrom(const PartitionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.PartitionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartitionList::IsInitialized() const {

  return true;
}

void PartitionList::Swap(PartitionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartitionList::InternalSwap(PartitionList* other) {
  std::swap(status_, other->status_);
  partition_tag_array_.UnsafeArenaSwap(&other->partition_tag_array_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PartitionList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PartitionList_descriptor_;
  metadata.reflection = PartitionList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PartitionList

// optional .suvlim.grpc.Status status = 1;
bool PartitionList::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void PartitionList::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& PartitionList::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.PartitionList.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* PartitionList::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.PartitionList.status)
  return status_;
}
::suvlim::grpc::Status* PartitionList::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.PartitionList.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void PartitionList::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.PartitionList.status)
}

// repeated string partition_tag_array = 2;
int PartitionList::partition_tag_array_size() const {
  return partition_tag_array_.size();
}
void PartitionList::clear_partition_tag_array() {
  partition_tag_array_.Clear();
}
 const ::std::string& PartitionList::partition_tag_array(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.PartitionList.partition_tag_array)
  return partition_tag_array_.Get(index);
}
 ::std::string* PartitionList::mutable_partition_tag_array(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.PartitionList.partition_tag_array)
  return partition_tag_array_.Mutable(index);
}
 void PartitionList::set_partition_tag_array(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:suvlim.grpc.PartitionList.partition_tag_array)
  partition_tag_array_.Mutable(index)->assign(value);
}
 void PartitionList::set_partition_tag_array(int index, const char* value) {
  partition_tag_array_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.PartitionList.partition_tag_array)
}
 void PartitionList::set_partition_tag_array(int index, const char* value, size_t size) {
  partition_tag_array_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.PartitionList.partition_tag_array)
}
 ::std::string* PartitionList::add_partition_tag_array() {
  // @@protoc_insertion_point(field_add_mutable:suvlim.grpc.PartitionList.partition_tag_array)
  return partition_tag_array_.Add();
}
 void PartitionList::add_partition_tag_array(const ::std::string& value) {
  partition_tag_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.PartitionList.partition_tag_array)
}
 void PartitionList::add_partition_tag_array(const char* value) {
  partition_tag_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:suvlim.grpc.PartitionList.partition_tag_array)
}
 void PartitionList::add_partition_tag_array(const char* value, size_t size) {
  partition_tag_array_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:suvlim.grpc.PartitionList.partition_tag_array)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
PartitionList::partition_tag_array() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.PartitionList.partition_tag_array)
  return partition_tag_array_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
PartitionList::mutable_partition_tag_array() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.PartitionList.partition_tag_array)
  return &partition_tag_array_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VectorRowRecord::kFloatDataFieldNumber;
const int VectorRowRecord::kBinaryDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VectorRowRecord::VectorRowRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.VectorRowRecord)
}

void VectorRowRecord::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

VectorRowRecord::VectorRowRecord(const VectorRowRecord& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.VectorRowRecord)
}

void VectorRowRecord::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  binary_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VectorRowRecord::~VectorRowRecord() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.VectorRowRecord)
  SharedDtor();
}

void VectorRowRecord::SharedDtor() {
  binary_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void VectorRowRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VectorRowRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VectorRowRecord_descriptor_;
}

const VectorRowRecord& VectorRowRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

VectorRowRecord* VectorRowRecord::default_instance_ = NULL;

VectorRowRecord* VectorRowRecord::New(::google::protobuf::Arena* arena) const {
  VectorRowRecord* n = new VectorRowRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VectorRowRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.VectorRowRecord)
  binary_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  float_data_.Clear();
}

bool VectorRowRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.VectorRowRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float float_data = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_float_data())));
        } else if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10, input, this->mutable_float_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_binary_data;
        break;
      }

      // optional bytes binary_data = 2;
      case 2: {
        if (tag == 18) {
         parse_binary_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_binary_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.VectorRowRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.VectorRowRecord)
  return false;
#undef DO_
}

void VectorRowRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.VectorRowRecord)
  // repeated float float_data = 1;
  if (this->float_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_float_data_cached_byte_size_);
  }
  for (int i = 0; i < this->float_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->float_data(i), output);
  }

  // optional bytes binary_data = 2;
  if (this->binary_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->binary_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.VectorRowRecord)
}

::google::protobuf::uint8* VectorRowRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.VectorRowRecord)
  // repeated float float_data = 1;
  if (this->float_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _float_data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->float_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->float_data(i), target);
  }

  // optional bytes binary_data = 2;
  if (this->binary_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->binary_data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.VectorRowRecord)
  return target;
}

int VectorRowRecord::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.VectorRowRecord)
  int total_size = 0;

  // optional bytes binary_data = 2;
  if (this->binary_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->binary_data());
  }

  // repeated float float_data = 1;
  {
    int data_size = 0;
    data_size = 4 * this->float_data_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _float_data_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VectorRowRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.VectorRowRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VectorRowRecord* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VectorRowRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.VectorRowRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.VectorRowRecord)
    MergeFrom(*source);
  }
}

void VectorRowRecord::MergeFrom(const VectorRowRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.VectorRowRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  float_data_.MergeFrom(from.float_data_);
  if (from.binary_data().size() > 0) {

    binary_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_data_);
  }
}

void VectorRowRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.VectorRowRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorRowRecord::CopyFrom(const VectorRowRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.VectorRowRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorRowRecord::IsInitialized() const {

  return true;
}

void VectorRowRecord::Swap(VectorRowRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VectorRowRecord::InternalSwap(VectorRowRecord* other) {
  float_data_.UnsafeArenaSwap(&other->float_data_);
  binary_data_.Swap(&other->binary_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VectorRowRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VectorRowRecord_descriptor_;
  metadata.reflection = VectorRowRecord_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VectorRowRecord

// repeated float float_data = 1;
int VectorRowRecord::float_data_size() const {
  return float_data_.size();
}
void VectorRowRecord::clear_float_data() {
  float_data_.Clear();
}
 float VectorRowRecord::float_data(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorRowRecord.float_data)
  return float_data_.Get(index);
}
 void VectorRowRecord::set_float_data(int index, float value) {
  float_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.VectorRowRecord.float_data)
}
 void VectorRowRecord::add_float_data(float value) {
  float_data_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.VectorRowRecord.float_data)
}
 const ::google::protobuf::RepeatedField< float >&
VectorRowRecord::float_data() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.VectorRowRecord.float_data)
  return float_data_;
}
 ::google::protobuf::RepeatedField< float >*
VectorRowRecord::mutable_float_data() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.VectorRowRecord.float_data)
  return &float_data_;
}

// optional bytes binary_data = 2;
void VectorRowRecord::clear_binary_data() {
  binary_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& VectorRowRecord::binary_data() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorRowRecord.binary_data)
  return binary_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VectorRowRecord::set_binary_data(const ::std::string& value) {
  
  binary_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.VectorRowRecord.binary_data)
}
 void VectorRowRecord::set_binary_data(const char* value) {
  
  binary_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.VectorRowRecord.binary_data)
}
 void VectorRowRecord::set_binary_data(const void* value, size_t size) {
  
  binary_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.VectorRowRecord.binary_data)
}
 ::std::string* VectorRowRecord::mutable_binary_data() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.VectorRowRecord.binary_data)
  return binary_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* VectorRowRecord::release_binary_data() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.VectorRowRecord.binary_data)
  
  return binary_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VectorRowRecord::set_allocated_binary_data(::std::string* binary_data) {
  if (binary_data != NULL) {
    
  } else {
    
  }
  binary_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), binary_data);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.VectorRowRecord.binary_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityIds::kStatusFieldNumber;
const int EntityIds::kEntityIdArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityIds::EntityIds()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.EntityIds)
}

void EntityIds::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
}

EntityIds::EntityIds(const EntityIds& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.EntityIds)
}

void EntityIds::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = NULL;
}

EntityIds::~EntityIds() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.EntityIds)
  SharedDtor();
}

void EntityIds::SharedDtor() {
  if (this != default_instance_) {
    delete status_;
  }
}

void EntityIds::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityIds::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityIds_descriptor_;
}

const EntityIds& EntityIds::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

EntityIds* EntityIds::default_instance_ = NULL;

EntityIds* EntityIds::New(::google::protobuf::Arena* arena) const {
  EntityIds* n = new EntityIds;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityIds::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.EntityIds)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  entity_id_array_.Clear();
}

bool EntityIds::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.EntityIds)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_entity_id_array;
        break;
      }

      // repeated int64 entity_id_array = 2;
      case 2: {
        if (tag == 18) {
         parse_entity_id_array:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_entity_id_array())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18, input, this->mutable_entity_id_array())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.EntityIds)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.EntityIds)
  return false;
#undef DO_
}

void EntityIds::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.EntityIds)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // repeated int64 entity_id_array = 2;
  if (this->entity_id_array_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_entity_id_array_cached_byte_size_);
  }
  for (int i = 0; i < this->entity_id_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->entity_id_array(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.EntityIds)
}

::google::protobuf::uint8* EntityIds::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.EntityIds)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // repeated int64 entity_id_array = 2;
  if (this->entity_id_array_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _entity_id_array_cached_byte_size_, target);
  }
  for (int i = 0; i < this->entity_id_array_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->entity_id_array(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.EntityIds)
  return target;
}

int EntityIds::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.EntityIds)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // repeated int64 entity_id_array = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->entity_id_array_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->entity_id_array(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _entity_id_array_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityIds::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.EntityIds)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EntityIds* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityIds>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.EntityIds)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.EntityIds)
    MergeFrom(*source);
  }
}

void EntityIds::MergeFrom(const EntityIds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.EntityIds)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  entity_id_array_.MergeFrom(from.entity_id_array_);
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
}

void EntityIds::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.EntityIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityIds::CopyFrom(const EntityIds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.EntityIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityIds::IsInitialized() const {

  return true;
}

void EntityIds::Swap(EntityIds* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityIds::InternalSwap(EntityIds* other) {
  std::swap(status_, other->status_);
  entity_id_array_.UnsafeArenaSwap(&other->entity_id_array_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityIds::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityIds_descriptor_;
  metadata.reflection = EntityIds_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityIds

// optional .suvlim.grpc.Status status = 1;
bool EntityIds::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void EntityIds::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& EntityIds::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.EntityIds.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* EntityIds::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.EntityIds.status)
  return status_;
}
::suvlim::grpc::Status* EntityIds::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.EntityIds.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void EntityIds::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.EntityIds.status)
}

// repeated int64 entity_id_array = 2;
int EntityIds::entity_id_array_size() const {
  return entity_id_array_.size();
}
void EntityIds::clear_entity_id_array() {
  entity_id_array_.Clear();
}
 ::google::protobuf::int64 EntityIds::entity_id_array(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.EntityIds.entity_id_array)
  return entity_id_array_.Get(index);
}
 void EntityIds::set_entity_id_array(int index, ::google::protobuf::int64 value) {
  entity_id_array_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.EntityIds.entity_id_array)
}
 void EntityIds::add_entity_id_array(::google::protobuf::int64 value) {
  entity_id_array_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.EntityIds.entity_id_array)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
EntityIds::entity_id_array() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.EntityIds.entity_id_array)
  return entity_id_array_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
EntityIds::mutable_entity_id_array() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.EntityIds.entity_id_array)
  return &entity_id_array_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VectorRecord::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VectorRecord::VectorRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.VectorRecord)
}

void VectorRecord::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

VectorRecord::VectorRecord(const VectorRecord& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.VectorRecord)
}

void VectorRecord::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

VectorRecord::~VectorRecord() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.VectorRecord)
  SharedDtor();
}

void VectorRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VectorRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VectorRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VectorRecord_descriptor_;
}

const VectorRecord& VectorRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

VectorRecord* VectorRecord::default_instance_ = NULL;

VectorRecord* VectorRecord::New(::google::protobuf::Arena* arena) const {
  VectorRecord* n = new VectorRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VectorRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.VectorRecord)
  records_.Clear();
}

bool VectorRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.VectorRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .suvlim.grpc.VectorRowRecord records = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_records;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.VectorRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.VectorRecord)
  return false;
#undef DO_
}

void VectorRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.VectorRecord)
  // repeated .suvlim.grpc.VectorRowRecord records = 1;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->records(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.VectorRecord)
}

::google::protobuf::uint8* VectorRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.VectorRecord)
  // repeated .suvlim.grpc.VectorRowRecord records = 1;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->records(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.VectorRecord)
  return target;
}

int VectorRecord::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.VectorRecord)
  int total_size = 0;

  // repeated .suvlim.grpc.VectorRowRecord records = 1;
  total_size += 1 * this->records_size();
  for (int i = 0; i < this->records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->records(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VectorRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.VectorRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VectorRecord* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VectorRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.VectorRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.VectorRecord)
    MergeFrom(*source);
  }
}

void VectorRecord::MergeFrom(const VectorRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.VectorRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  records_.MergeFrom(from.records_);
}

void VectorRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.VectorRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorRecord::CopyFrom(const VectorRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.VectorRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorRecord::IsInitialized() const {

  return true;
}

void VectorRecord::Swap(VectorRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VectorRecord::InternalSwap(VectorRecord* other) {
  records_.UnsafeArenaSwap(&other->records_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VectorRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VectorRecord_descriptor_;
  metadata.reflection = VectorRecord_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VectorRecord

// repeated .suvlim.grpc.VectorRowRecord records = 1;
int VectorRecord::records_size() const {
  return records_.size();
}
void VectorRecord::clear_records() {
  records_.Clear();
}
const ::suvlim::grpc::VectorRowRecord& VectorRecord::records(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorRecord.records)
  return records_.Get(index);
}
::suvlim::grpc::VectorRowRecord* VectorRecord::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.VectorRecord.records)
  return records_.Mutable(index);
}
::suvlim::grpc::VectorRowRecord* VectorRecord::add_records() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.VectorRecord.records)
  return records_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::VectorRowRecord >*
VectorRecord::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.VectorRecord.records)
  return &records_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::VectorRowRecord >&
VectorRecord::records() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.VectorRecord.records)
  return records_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VectorParam::kJsonFieldNumber;
const int VectorParam::kRowRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VectorParam::VectorParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.VectorParam)
}

void VectorParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  row_record_ = const_cast< ::suvlim::grpc::VectorRecord*>(&::suvlim::grpc::VectorRecord::default_instance());
}

VectorParam::VectorParam(const VectorParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.VectorParam)
}

void VectorParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_record_ = NULL;
}

VectorParam::~VectorParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.VectorParam)
  SharedDtor();
}

void VectorParam::SharedDtor() {
  json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete row_record_;
  }
}

void VectorParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VectorParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VectorParam_descriptor_;
}

const VectorParam& VectorParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

VectorParam* VectorParam::default_instance_ = NULL;

VectorParam* VectorParam::New(::google::protobuf::Arena* arena) const {
  VectorParam* n = new VectorParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VectorParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.VectorParam)
  json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && row_record_ != NULL) delete row_record_;
  row_record_ = NULL;
}

bool VectorParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.VectorParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string json = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->json().data(), this->json().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.VectorParam.json"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_row_record;
        break;
      }

      // optional .suvlim.grpc.VectorRecord row_record = 2;
      case 2: {
        if (tag == 18) {
         parse_row_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_row_record()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.VectorParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.VectorParam)
  return false;
#undef DO_
}

void VectorParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.VectorParam)
  // optional string json = 1;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), this->json().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.VectorParam.json");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->json(), output);
  }

  // optional .suvlim.grpc.VectorRecord row_record = 2;
  if (this->has_row_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->row_record_, output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.VectorParam)
}

::google::protobuf::uint8* VectorParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.VectorParam)
  // optional string json = 1;
  if (this->json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), this->json().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.VectorParam.json");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->json(), target);
  }

  // optional .suvlim.grpc.VectorRecord row_record = 2;
  if (this->has_row_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->row_record_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.VectorParam)
  return target;
}

int VectorParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.VectorParam)
  int total_size = 0;

  // optional string json = 1;
  if (this->json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->json());
  }

  // optional .suvlim.grpc.VectorRecord row_record = 2;
  if (this->has_row_record()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->row_record_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VectorParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.VectorParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VectorParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VectorParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.VectorParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.VectorParam)
    MergeFrom(*source);
  }
}

void VectorParam::MergeFrom(const VectorParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.VectorParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.json().size() > 0) {

    json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  if (from.has_row_record()) {
    mutable_row_record()->::suvlim::grpc::VectorRecord::MergeFrom(from.row_record());
  }
}

void VectorParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.VectorParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorParam::CopyFrom(const VectorParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.VectorParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorParam::IsInitialized() const {

  return true;
}

void VectorParam::Swap(VectorParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VectorParam::InternalSwap(VectorParam* other) {
  json_.Swap(&other->json_);
  std::swap(row_record_, other->row_record_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VectorParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VectorParam_descriptor_;
  metadata.reflection = VectorParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VectorParam

// optional string json = 1;
void VectorParam::clear_json() {
  json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& VectorParam::json() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorParam.json)
  return json_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VectorParam::set_json(const ::std::string& value) {
  
  json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.VectorParam.json)
}
 void VectorParam::set_json(const char* value) {
  
  json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.VectorParam.json)
}
 void VectorParam::set_json(const char* value, size_t size) {
  
  json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.VectorParam.json)
}
 ::std::string* VectorParam::mutable_json() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.VectorParam.json)
  return json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* VectorParam::release_json() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.VectorParam.json)
  
  return json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VectorParam::set_allocated_json(::std::string* json) {
  if (json != NULL) {
    
  } else {
    
  }
  json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.VectorParam.json)
}

// optional .suvlim.grpc.VectorRecord row_record = 2;
bool VectorParam::has_row_record() const {
  return !_is_default_instance_ && row_record_ != NULL;
}
void VectorParam::clear_row_record() {
  if (GetArenaNoVirtual() == NULL && row_record_ != NULL) delete row_record_;
  row_record_ = NULL;
}
const ::suvlim::grpc::VectorRecord& VectorParam::row_record() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorParam.row_record)
  return row_record_ != NULL ? *row_record_ : *default_instance_->row_record_;
}
::suvlim::grpc::VectorRecord* VectorParam::mutable_row_record() {
  
  if (row_record_ == NULL) {
    row_record_ = new ::suvlim::grpc::VectorRecord;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.VectorParam.row_record)
  return row_record_;
}
::suvlim::grpc::VectorRecord* VectorParam::release_row_record() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.VectorParam.row_record)
  
  ::suvlim::grpc::VectorRecord* temp = row_record_;
  row_record_ = NULL;
  return temp;
}
void VectorParam::set_allocated_row_record(::suvlim::grpc::VectorRecord* row_record) {
  delete row_record_;
  row_record_ = row_record;
  if (row_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.VectorParam.row_record)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldMeta::kFieldNameFieldNumber;
const int FieldMeta::kTypeFieldNumber;
const int FieldMeta::kDimFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldMeta::FieldMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.FieldMeta)
}

void FieldMeta::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FieldMeta::FieldMeta(const FieldMeta& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.FieldMeta)
}

void FieldMeta::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  dim_ = GOOGLE_LONGLONG(0);
}

FieldMeta::~FieldMeta() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.FieldMeta)
  SharedDtor();
}

void FieldMeta::SharedDtor() {
  field_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FieldMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FieldMeta::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FieldMeta_descriptor_;
}

const FieldMeta& FieldMeta::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

FieldMeta* FieldMeta::default_instance_ = NULL;

FieldMeta* FieldMeta::New(::google::protobuf::Arena* arena) const {
  FieldMeta* n = new FieldMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FieldMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.FieldMeta)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FieldMeta, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FieldMeta*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dim_, type_);
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool FieldMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.FieldMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string field_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_name().data(), this->field_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.FieldMeta.field_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional .suvlim.grpc.DataType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::suvlim::grpc::DataType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dim;
        break;
      }

      // optional int64 dim = 3;
      case 3: {
        if (tag == 24) {
         parse_dim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dim_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.FieldMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.FieldMeta)
  return false;
#undef DO_
}

void FieldMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.FieldMeta)
  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.FieldMeta.field_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field_name(), output);
  }

  // optional .suvlim.grpc.DataType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional int64 dim = 3;
  if (this->dim() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->dim(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.FieldMeta)
}

::google::protobuf::uint8* FieldMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.FieldMeta)
  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.FieldMeta.field_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field_name(), target);
  }

  // optional .suvlim.grpc.DataType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional int64 dim = 3;
  if (this->dim() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->dim(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.FieldMeta)
  return target;
}

int FieldMeta::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.FieldMeta)
  int total_size = 0;

  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_name());
  }

  // optional .suvlim.grpc.DataType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional int64 dim = 3;
  if (this->dim() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dim());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FieldMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.FieldMeta)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FieldMeta* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.FieldMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.FieldMeta)
    MergeFrom(*source);
  }
}

void FieldMeta::MergeFrom(const FieldMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.FieldMeta)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.field_name().size() > 0) {

    field_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.dim() != 0) {
    set_dim(from.dim());
  }
}

void FieldMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.FieldMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldMeta::CopyFrom(const FieldMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.FieldMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldMeta::IsInitialized() const {

  return true;
}

void FieldMeta::Swap(FieldMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FieldMeta::InternalSwap(FieldMeta* other) {
  field_name_.Swap(&other->field_name_);
  std::swap(type_, other->type_);
  std::swap(dim_, other->dim_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FieldMeta::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FieldMeta_descriptor_;
  metadata.reflection = FieldMeta_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FieldMeta

// optional string field_name = 1;
void FieldMeta::clear_field_name() {
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FieldMeta::field_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldMeta.field_name)
  return field_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FieldMeta::set_field_name(const ::std::string& value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.FieldMeta.field_name)
}
 void FieldMeta::set_field_name(const char* value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.FieldMeta.field_name)
}
 void FieldMeta::set_field_name(const char* value, size_t size) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.FieldMeta.field_name)
}
 ::std::string* FieldMeta::mutable_field_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.FieldMeta.field_name)
  return field_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FieldMeta::release_field_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.FieldMeta.field_name)
  
  return field_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FieldMeta::set_allocated_field_name(::std::string* field_name) {
  if (field_name != NULL) {
    
  } else {
    
  }
  field_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.FieldMeta.field_name)
}

// optional .suvlim.grpc.DataType type = 2;
void FieldMeta::clear_type() {
  type_ = 0;
}
 ::suvlim::grpc::DataType FieldMeta::type() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldMeta.type)
  return static_cast< ::suvlim::grpc::DataType >(type_);
}
 void FieldMeta::set_type(::suvlim::grpc::DataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.FieldMeta.type)
}

// optional int64 dim = 3;
void FieldMeta::clear_dim() {
  dim_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 FieldMeta::dim() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldMeta.dim)
  return dim_;
}
 void FieldMeta::set_dim(::google::protobuf::int64 value) {
  
  dim_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.FieldMeta.dim)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Schema::kFieldMetasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Schema::Schema()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.Schema)
}

void Schema::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Schema::Schema(const Schema& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.Schema)
}

void Schema::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Schema::~Schema() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.Schema)
  SharedDtor();
}

void Schema::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Schema::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Schema::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Schema_descriptor_;
}

const Schema& Schema::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

Schema* Schema::default_instance_ = NULL;

Schema* Schema::New(::google::protobuf::Arena* arena) const {
  Schema* n = new Schema;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Schema::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.Schema)
  field_metas_.Clear();
}

bool Schema::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.Schema)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .suvlim.grpc.FieldMeta field_metas = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_field_metas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field_metas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_field_metas;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.Schema)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.Schema)
  return false;
#undef DO_
}

void Schema::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.Schema)
  // repeated .suvlim.grpc.FieldMeta field_metas = 1;
  for (unsigned int i = 0, n = this->field_metas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->field_metas(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.Schema)
}

::google::protobuf::uint8* Schema::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.Schema)
  // repeated .suvlim.grpc.FieldMeta field_metas = 1;
  for (unsigned int i = 0, n = this->field_metas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->field_metas(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.Schema)
  return target;
}

int Schema::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.Schema)
  int total_size = 0;

  // repeated .suvlim.grpc.FieldMeta field_metas = 1;
  total_size += 1 * this->field_metas_size();
  for (int i = 0; i < this->field_metas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->field_metas(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Schema::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.Schema)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Schema* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Schema>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.Schema)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.Schema)
    MergeFrom(*source);
  }
}

void Schema::MergeFrom(const Schema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.Schema)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  field_metas_.MergeFrom(from.field_metas_);
}

void Schema::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.Schema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Schema::CopyFrom(const Schema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.Schema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Schema::IsInitialized() const {

  return true;
}

void Schema::Swap(Schema* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Schema::InternalSwap(Schema* other) {
  field_metas_.UnsafeArenaSwap(&other->field_metas_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Schema::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Schema_descriptor_;
  metadata.reflection = Schema_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Schema

// repeated .suvlim.grpc.FieldMeta field_metas = 1;
int Schema::field_metas_size() const {
  return field_metas_.size();
}
void Schema::clear_field_metas() {
  field_metas_.Clear();
}
const ::suvlim::grpc::FieldMeta& Schema::field_metas(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Schema.field_metas)
  return field_metas_.Get(index);
}
::suvlim::grpc::FieldMeta* Schema::mutable_field_metas(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.Schema.field_metas)
  return field_metas_.Mutable(index);
}
::suvlim::grpc::FieldMeta* Schema::add_field_metas() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.Schema.field_metas)
  return field_metas_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::FieldMeta >*
Schema::mutable_field_metas() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.Schema.field_metas)
  return &field_metas_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::FieldMeta >&
Schema::field_metas() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.Schema.field_metas)
  return field_metas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RowData::kBlobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RowData::RowData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.RowData)
}

void RowData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RowData::RowData(const RowData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.RowData)
}

void RowData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RowData::~RowData() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.RowData)
  SharedDtor();
}

void RowData::SharedDtor() {
  blob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RowData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RowData_descriptor_;
}

const RowData& RowData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

RowData* RowData::default_instance_ = NULL;

RowData* RowData::New(::google::protobuf::Arena* arena) const {
  RowData* n = new RowData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RowData::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.RowData)
  blob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RowData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.RowData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes blob = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_blob()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.RowData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.RowData)
  return false;
#undef DO_
}

void RowData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.RowData)
  // optional bytes blob = 1;
  if (this->blob().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->blob(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.RowData)
}

::google::protobuf::uint8* RowData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.RowData)
  // optional bytes blob = 1;
  if (this->blob().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->blob(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.RowData)
  return target;
}

int RowData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.RowData)
  int total_size = 0;

  // optional bytes blob = 1;
  if (this->blob().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->blob());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.RowData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RowData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RowData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.RowData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.RowData)
    MergeFrom(*source);
  }
}

void RowData::MergeFrom(const RowData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.RowData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.blob().size() > 0) {

    blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blob_);
  }
}

void RowData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.RowData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowData::CopyFrom(const RowData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.RowData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowData::IsInitialized() const {

  return true;
}

void RowData::Swap(RowData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RowData::InternalSwap(RowData* other) {
  blob_.Swap(&other->blob_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RowData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RowData_descriptor_;
  metadata.reflection = RowData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RowData

// optional bytes blob = 1;
void RowData::clear_blob() {
  blob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RowData::blob() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.RowData.blob)
  return blob_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RowData::set_blob(const ::std::string& value) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.RowData.blob)
}
 void RowData::set_blob(const char* value) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.RowData.blob)
}
 void RowData::set_blob(const void* value, size_t size) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.RowData.blob)
}
 ::std::string* RowData::mutable_blob() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.RowData.blob)
  return blob_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RowData::release_blob() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.RowData.blob)
  
  return blob_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RowData::set_allocated_blob(::std::string* blob) {
  if (blob != NULL) {
    
  } else {
    
  }
  blob_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blob);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.RowData.blob)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertParam::kCollectionNameFieldNumber;
const int InsertParam::kSchemaFieldNumber;
const int InsertParam::kRowsDataFieldNumber;
const int InsertParam::kEntityIdArrayFieldNumber;
const int InsertParam::kPartitionTagFieldNumber;
const int InsertParam::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertParam::InsertParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.InsertParam)
}

void InsertParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  schema_ = const_cast< ::suvlim::grpc::Schema*>(&::suvlim::grpc::Schema::default_instance());
}

InsertParam::InsertParam(const InsertParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.InsertParam)
}

void InsertParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  schema_ = NULL;
  partition_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InsertParam::~InsertParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.InsertParam)
  SharedDtor();
}

void InsertParam::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partition_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete schema_;
  }
}

void InsertParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InsertParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InsertParam_descriptor_;
}

const InsertParam& InsertParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

InsertParam* InsertParam::default_instance_ = NULL;

InsertParam* InsertParam::New(::google::protobuf::Arena* arena) const {
  InsertParam* n = new InsertParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InsertParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.InsertParam)
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && schema_ != NULL) delete schema_;
  schema_ = NULL;
  partition_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rows_data_.Clear();
  entity_id_array_.Clear();
  extra_params_.Clear();
}

bool InsertParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.InsertParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.InsertParam.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_schema;
        break;
      }

      // optional .suvlim.grpc.Schema schema = 2;
      case 2: {
        if (tag == 18) {
         parse_schema:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_schema()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rows_data;
        break;
      }

      // repeated .suvlim.grpc.RowData rows_data = 3;
      case 3: {
        if (tag == 26) {
         parse_rows_data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_rows_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rows_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_rows_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_entity_id_array;
        break;
      }

      // repeated int64 entity_id_array = 4;
      case 4: {
        if (tag == 34) {
         parse_entity_id_array:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_entity_id_array())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34, input, this->mutable_entity_id_array())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_partition_tag;
        break;
      }

      // optional string partition_tag = 5;
      case 5: {
        if (tag == 42) {
         parse_partition_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partition_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partition_tag().data(), this->partition_tag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.InsertParam.partition_tag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_extra_params;
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
      case 6: {
        if (tag == 50) {
         parse_extra_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.InsertParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.InsertParam)
  return false;
#undef DO_
}

void InsertParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.InsertParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.InsertParam.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // optional .suvlim.grpc.Schema schema = 2;
  if (this->has_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->schema_, output);
  }

  // repeated .suvlim.grpc.RowData rows_data = 3;
  for (unsigned int i = 0, n = this->rows_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rows_data(i), output);
  }

  // repeated int64 entity_id_array = 4;
  if (this->entity_id_array_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_entity_id_array_cached_byte_size_);
  }
  for (int i = 0; i < this->entity_id_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->entity_id_array(i), output);
  }

  // optional string partition_tag = 5;
  if (this->partition_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag().data(), this->partition_tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.InsertParam.partition_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->partition_tag(), output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.InsertParam)
}

::google::protobuf::uint8* InsertParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.InsertParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.InsertParam.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // optional .suvlim.grpc.Schema schema = 2;
  if (this->has_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->schema_, false, target);
  }

  // repeated .suvlim.grpc.RowData rows_data = 3;
  for (unsigned int i = 0, n = this->rows_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rows_data(i), false, target);
  }

  // repeated int64 entity_id_array = 4;
  if (this->entity_id_array_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _entity_id_array_cached_byte_size_, target);
  }
  for (int i = 0; i < this->entity_id_array_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->entity_id_array(i), target);
  }

  // optional string partition_tag = 5;
  if (this->partition_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag().data(), this->partition_tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.InsertParam.partition_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->partition_tag(), target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.InsertParam)
  return target;
}

int InsertParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.InsertParam)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional .suvlim.grpc.Schema schema = 2;
  if (this->has_schema()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->schema_);
  }

  // optional string partition_tag = 5;
  if (this->partition_tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->partition_tag());
  }

  // repeated .suvlim.grpc.RowData rows_data = 3;
  total_size += 1 * this->rows_data_size();
  for (int i = 0; i < this->rows_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows_data(i));
  }

  // repeated int64 entity_id_array = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->entity_id_array_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->entity_id_array(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _entity_id_array_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InsertParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.InsertParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InsertParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.InsertParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.InsertParam)
    MergeFrom(*source);
  }
}

void InsertParam::MergeFrom(const InsertParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.InsertParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rows_data_.MergeFrom(from.rows_data_);
  entity_id_array_.MergeFrom(from.entity_id_array_);
  extra_params_.MergeFrom(from.extra_params_);
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.has_schema()) {
    mutable_schema()->::suvlim::grpc::Schema::MergeFrom(from.schema());
  }
  if (from.partition_tag().size() > 0) {

    partition_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partition_tag_);
  }
}

void InsertParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.InsertParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertParam::CopyFrom(const InsertParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.InsertParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertParam::IsInitialized() const {

  return true;
}

void InsertParam::Swap(InsertParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertParam::InternalSwap(InsertParam* other) {
  collection_name_.Swap(&other->collection_name_);
  std::swap(schema_, other->schema_);
  rows_data_.UnsafeArenaSwap(&other->rows_data_);
  entity_id_array_.UnsafeArenaSwap(&other->entity_id_array_);
  partition_tag_.Swap(&other->partition_tag_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InsertParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InsertParam_descriptor_;
  metadata.reflection = InsertParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InsertParam

// optional string collection_name = 1;
void InsertParam::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InsertParam::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertParam.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertParam::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.InsertParam.collection_name)
}
 void InsertParam::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.InsertParam.collection_name)
}
 void InsertParam::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.InsertParam.collection_name)
}
 ::std::string* InsertParam::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.InsertParam.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InsertParam::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.InsertParam.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertParam::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.InsertParam.collection_name)
}

// optional .suvlim.grpc.Schema schema = 2;
bool InsertParam::has_schema() const {
  return !_is_default_instance_ && schema_ != NULL;
}
void InsertParam::clear_schema() {
  if (GetArenaNoVirtual() == NULL && schema_ != NULL) delete schema_;
  schema_ = NULL;
}
const ::suvlim::grpc::Schema& InsertParam::schema() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertParam.schema)
  return schema_ != NULL ? *schema_ : *default_instance_->schema_;
}
::suvlim::grpc::Schema* InsertParam::mutable_schema() {
  
  if (schema_ == NULL) {
    schema_ = new ::suvlim::grpc::Schema;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.InsertParam.schema)
  return schema_;
}
::suvlim::grpc::Schema* InsertParam::release_schema() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.InsertParam.schema)
  
  ::suvlim::grpc::Schema* temp = schema_;
  schema_ = NULL;
  return temp;
}
void InsertParam::set_allocated_schema(::suvlim::grpc::Schema* schema) {
  delete schema_;
  schema_ = schema;
  if (schema) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.InsertParam.schema)
}

// repeated .suvlim.grpc.RowData rows_data = 3;
int InsertParam::rows_data_size() const {
  return rows_data_.size();
}
void InsertParam::clear_rows_data() {
  rows_data_.Clear();
}
const ::suvlim::grpc::RowData& InsertParam::rows_data(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertParam.rows_data)
  return rows_data_.Get(index);
}
::suvlim::grpc::RowData* InsertParam::mutable_rows_data(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.InsertParam.rows_data)
  return rows_data_.Mutable(index);
}
::suvlim::grpc::RowData* InsertParam::add_rows_data() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.InsertParam.rows_data)
  return rows_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::RowData >*
InsertParam::mutable_rows_data() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.InsertParam.rows_data)
  return &rows_data_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::RowData >&
InsertParam::rows_data() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.InsertParam.rows_data)
  return rows_data_;
}

// repeated int64 entity_id_array = 4;
int InsertParam::entity_id_array_size() const {
  return entity_id_array_.size();
}
void InsertParam::clear_entity_id_array() {
  entity_id_array_.Clear();
}
 ::google::protobuf::int64 InsertParam::entity_id_array(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertParam.entity_id_array)
  return entity_id_array_.Get(index);
}
 void InsertParam::set_entity_id_array(int index, ::google::protobuf::int64 value) {
  entity_id_array_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.InsertParam.entity_id_array)
}
 void InsertParam::add_entity_id_array(::google::protobuf::int64 value) {
  entity_id_array_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.InsertParam.entity_id_array)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
InsertParam::entity_id_array() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.InsertParam.entity_id_array)
  return entity_id_array_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
InsertParam::mutable_entity_id_array() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.InsertParam.entity_id_array)
  return &entity_id_array_;
}

// optional string partition_tag = 5;
void InsertParam::clear_partition_tag() {
  partition_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InsertParam::partition_tag() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertParam.partition_tag)
  return partition_tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertParam::set_partition_tag(const ::std::string& value) {
  
  partition_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.InsertParam.partition_tag)
}
 void InsertParam::set_partition_tag(const char* value) {
  
  partition_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.InsertParam.partition_tag)
}
 void InsertParam::set_partition_tag(const char* value, size_t size) {
  
  partition_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.InsertParam.partition_tag)
}
 ::std::string* InsertParam::mutable_partition_tag() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.InsertParam.partition_tag)
  return partition_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InsertParam::release_partition_tag() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.InsertParam.partition_tag)
  
  return partition_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertParam::set_allocated_partition_tag(::std::string* partition_tag) {
  if (partition_tag != NULL) {
    
  } else {
    
  }
  partition_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), partition_tag);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.InsertParam.partition_tag)
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 6;
int InsertParam::extra_params_size() const {
  return extra_params_.size();
}
void InsertParam::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& InsertParam::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertParam.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* InsertParam::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.InsertParam.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* InsertParam::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.InsertParam.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
InsertParam::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.InsertParam.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
InsertParam::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.InsertParam.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchParam::kCollectionNameFieldNumber;
const int SearchParam::kVectorParamFieldNumber;
const int SearchParam::kDslFieldNumber;
const int SearchParam::kPartitionTagFieldNumber;
const int SearchParam::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchParam::SearchParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.SearchParam)
}

void SearchParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SearchParam::SearchParam(const SearchParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.SearchParam)
}

void SearchParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dsl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SearchParam::~SearchParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.SearchParam)
  SharedDtor();
}

void SearchParam::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dsl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SearchParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SearchParam_descriptor_;
}

const SearchParam& SearchParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

SearchParam* SearchParam::default_instance_ = NULL;

SearchParam* SearchParam::New(::google::protobuf::Arena* arena) const {
  SearchParam* n = new SearchParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.SearchParam)
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dsl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vector_param_.Clear();
  partition_tag_.Clear();
  extra_params_.Clear();
}

bool SearchParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.SearchParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.SearchParam.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_vector_param;
        break;
      }

      // repeated .suvlim.grpc.VectorParam vector_param = 2;
      case 2: {
        if (tag == 18) {
         parse_vector_param:
          DO_(input->IncrementRecursionDepth());
         parse_loop_vector_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vector_param()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_vector_param;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_dsl;
        break;
      }

      // optional string dsl = 3;
      case 3: {
        if (tag == 26) {
         parse_dsl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dsl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dsl().data(), this->dsl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.SearchParam.dsl"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_partition_tag;
        break;
      }

      // repeated string partition_tag = 4;
      case 4: {
        if (tag == 34) {
         parse_partition_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_partition_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partition_tag(this->partition_tag_size() - 1).data(),
            this->partition_tag(this->partition_tag_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.SearchParam.partition_tag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_partition_tag;
        if (input->ExpectTag(42)) goto parse_extra_params;
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
      case 5: {
        if (tag == 42) {
         parse_extra_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.SearchParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.SearchParam)
  return false;
#undef DO_
}

void SearchParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.SearchParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchParam.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // repeated .suvlim.grpc.VectorParam vector_param = 2;
  for (unsigned int i = 0, n = this->vector_param_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vector_param(i), output);
  }

  // optional string dsl = 3;
  if (this->dsl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dsl().data(), this->dsl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchParam.dsl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dsl(), output);
  }

  // repeated string partition_tag = 4;
  for (int i = 0; i < this->partition_tag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag(i).data(), this->partition_tag(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchParam.partition_tag");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->partition_tag(i), output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.SearchParam)
}

::google::protobuf::uint8* SearchParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.SearchParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchParam.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // repeated .suvlim.grpc.VectorParam vector_param = 2;
  for (unsigned int i = 0, n = this->vector_param_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->vector_param(i), false, target);
  }

  // optional string dsl = 3;
  if (this->dsl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dsl().data(), this->dsl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchParam.dsl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dsl(), target);
  }

  // repeated string partition_tag = 4;
  for (int i = 0; i < this->partition_tag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag(i).data(), this->partition_tag(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchParam.partition_tag");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->partition_tag(i), target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.SearchParam)
  return target;
}

int SearchParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.SearchParam)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional string dsl = 3;
  if (this->dsl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dsl());
  }

  // repeated .suvlim.grpc.VectorParam vector_param = 2;
  total_size += 1 * this->vector_param_size();
  for (int i = 0; i < this->vector_param_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vector_param(i));
  }

  // repeated string partition_tag = 4;
  total_size += 1 * this->partition_tag_size();
  for (int i = 0; i < this->partition_tag_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->partition_tag(i));
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.SearchParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SearchParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.SearchParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.SearchParam)
    MergeFrom(*source);
  }
}

void SearchParam::MergeFrom(const SearchParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.SearchParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  vector_param_.MergeFrom(from.vector_param_);
  partition_tag_.MergeFrom(from.partition_tag_);
  extra_params_.MergeFrom(from.extra_params_);
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.dsl().size() > 0) {

    dsl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dsl_);
  }
}

void SearchParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.SearchParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchParam::CopyFrom(const SearchParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.SearchParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchParam::IsInitialized() const {

  return true;
}

void SearchParam::Swap(SearchParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchParam::InternalSwap(SearchParam* other) {
  collection_name_.Swap(&other->collection_name_);
  vector_param_.UnsafeArenaSwap(&other->vector_param_);
  dsl_.Swap(&other->dsl_);
  partition_tag_.UnsafeArenaSwap(&other->partition_tag_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SearchParam_descriptor_;
  metadata.reflection = SearchParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchParam

// optional string collection_name = 1;
void SearchParam::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SearchParam::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchParam.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SearchParam::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.SearchParam.collection_name)
}
 void SearchParam::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.SearchParam.collection_name)
}
 void SearchParam::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.SearchParam.collection_name)
}
 ::std::string* SearchParam::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchParam.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SearchParam::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.SearchParam.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SearchParam::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.SearchParam.collection_name)
}

// repeated .suvlim.grpc.VectorParam vector_param = 2;
int SearchParam::vector_param_size() const {
  return vector_param_.size();
}
void SearchParam::clear_vector_param() {
  vector_param_.Clear();
}
const ::suvlim::grpc::VectorParam& SearchParam::vector_param(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchParam.vector_param)
  return vector_param_.Get(index);
}
::suvlim::grpc::VectorParam* SearchParam::mutable_vector_param(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchParam.vector_param)
  return vector_param_.Mutable(index);
}
::suvlim::grpc::VectorParam* SearchParam::add_vector_param() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.SearchParam.vector_param)
  return vector_param_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::VectorParam >*
SearchParam::mutable_vector_param() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.SearchParam.vector_param)
  return &vector_param_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::VectorParam >&
SearchParam::vector_param() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.SearchParam.vector_param)
  return vector_param_;
}

// optional string dsl = 3;
void SearchParam::clear_dsl() {
  dsl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SearchParam::dsl() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchParam.dsl)
  return dsl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SearchParam::set_dsl(const ::std::string& value) {
  
  dsl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.SearchParam.dsl)
}
 void SearchParam::set_dsl(const char* value) {
  
  dsl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.SearchParam.dsl)
}
 void SearchParam::set_dsl(const char* value, size_t size) {
  
  dsl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.SearchParam.dsl)
}
 ::std::string* SearchParam::mutable_dsl() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchParam.dsl)
  return dsl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SearchParam::release_dsl() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.SearchParam.dsl)
  
  return dsl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SearchParam::set_allocated_dsl(::std::string* dsl) {
  if (dsl != NULL) {
    
  } else {
    
  }
  dsl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dsl);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.SearchParam.dsl)
}

// repeated string partition_tag = 4;
int SearchParam::partition_tag_size() const {
  return partition_tag_.size();
}
void SearchParam::clear_partition_tag() {
  partition_tag_.Clear();
}
 const ::std::string& SearchParam::partition_tag(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchParam.partition_tag)
  return partition_tag_.Get(index);
}
 ::std::string* SearchParam::mutable_partition_tag(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchParam.partition_tag)
  return partition_tag_.Mutable(index);
}
 void SearchParam::set_partition_tag(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:suvlim.grpc.SearchParam.partition_tag)
  partition_tag_.Mutable(index)->assign(value);
}
 void SearchParam::set_partition_tag(int index, const char* value) {
  partition_tag_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.SearchParam.partition_tag)
}
 void SearchParam::set_partition_tag(int index, const char* value, size_t size) {
  partition_tag_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.SearchParam.partition_tag)
}
 ::std::string* SearchParam::add_partition_tag() {
  // @@protoc_insertion_point(field_add_mutable:suvlim.grpc.SearchParam.partition_tag)
  return partition_tag_.Add();
}
 void SearchParam::add_partition_tag(const ::std::string& value) {
  partition_tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.SearchParam.partition_tag)
}
 void SearchParam::add_partition_tag(const char* value) {
  partition_tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:suvlim.grpc.SearchParam.partition_tag)
}
 void SearchParam::add_partition_tag(const char* value, size_t size) {
  partition_tag_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:suvlim.grpc.SearchParam.partition_tag)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchParam::partition_tag() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.SearchParam.partition_tag)
  return partition_tag_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchParam::mutable_partition_tag() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.SearchParam.partition_tag)
  return &partition_tag_;
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 5;
int SearchParam::extra_params_size() const {
  return extra_params_.size();
}
void SearchParam::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& SearchParam::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchParam.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* SearchParam::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchParam.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* SearchParam::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.SearchParam.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
SearchParam::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.SearchParam.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
SearchParam::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.SearchParam.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchInSegmentParam::kFileIdArrayFieldNumber;
const int SearchInSegmentParam::kSearchParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchInSegmentParam::SearchInSegmentParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.SearchInSegmentParam)
}

void SearchInSegmentParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  search_param_ = const_cast< ::suvlim::grpc::SearchParam*>(&::suvlim::grpc::SearchParam::default_instance());
}

SearchInSegmentParam::SearchInSegmentParam(const SearchInSegmentParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.SearchInSegmentParam)
}

void SearchInSegmentParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_param_ = NULL;
}

SearchInSegmentParam::~SearchInSegmentParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.SearchInSegmentParam)
  SharedDtor();
}

void SearchInSegmentParam::SharedDtor() {
  if (this != default_instance_) {
    delete search_param_;
  }
}

void SearchInSegmentParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchInSegmentParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SearchInSegmentParam_descriptor_;
}

const SearchInSegmentParam& SearchInSegmentParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

SearchInSegmentParam* SearchInSegmentParam::default_instance_ = NULL;

SearchInSegmentParam* SearchInSegmentParam::New(::google::protobuf::Arena* arena) const {
  SearchInSegmentParam* n = new SearchInSegmentParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchInSegmentParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.SearchInSegmentParam)
  if (GetArenaNoVirtual() == NULL && search_param_ != NULL) delete search_param_;
  search_param_ = NULL;
  file_id_array_.Clear();
}

bool SearchInSegmentParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.SearchInSegmentParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string file_id_array = 1;
      case 1: {
        if (tag == 10) {
         parse_file_id_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_file_id_array()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_id_array(this->file_id_array_size() - 1).data(),
            this->file_id_array(this->file_id_array_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.SearchInSegmentParam.file_id_array"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_file_id_array;
        if (input->ExpectTag(18)) goto parse_search_param;
        break;
      }

      // optional .suvlim.grpc.SearchParam search_param = 2;
      case 2: {
        if (tag == 18) {
         parse_search_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_search_param()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.SearchInSegmentParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.SearchInSegmentParam)
  return false;
#undef DO_
}

void SearchInSegmentParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.SearchInSegmentParam)
  // repeated string file_id_array = 1;
  for (int i = 0; i < this->file_id_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_id_array(i).data(), this->file_id_array(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchInSegmentParam.file_id_array");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->file_id_array(i), output);
  }

  // optional .suvlim.grpc.SearchParam search_param = 2;
  if (this->has_search_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->search_param_, output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.SearchInSegmentParam)
}

::google::protobuf::uint8* SearchInSegmentParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.SearchInSegmentParam)
  // repeated string file_id_array = 1;
  for (int i = 0; i < this->file_id_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_id_array(i).data(), this->file_id_array(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchInSegmentParam.file_id_array");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->file_id_array(i), target);
  }

  // optional .suvlim.grpc.SearchParam search_param = 2;
  if (this->has_search_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->search_param_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.SearchInSegmentParam)
  return target;
}

int SearchInSegmentParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.SearchInSegmentParam)
  int total_size = 0;

  // optional .suvlim.grpc.SearchParam search_param = 2;
  if (this->has_search_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->search_param_);
  }

  // repeated string file_id_array = 1;
  total_size += 1 * this->file_id_array_size();
  for (int i = 0; i < this->file_id_array_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->file_id_array(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchInSegmentParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.SearchInSegmentParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SearchInSegmentParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchInSegmentParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.SearchInSegmentParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.SearchInSegmentParam)
    MergeFrom(*source);
  }
}

void SearchInSegmentParam::MergeFrom(const SearchInSegmentParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.SearchInSegmentParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  file_id_array_.MergeFrom(from.file_id_array_);
  if (from.has_search_param()) {
    mutable_search_param()->::suvlim::grpc::SearchParam::MergeFrom(from.search_param());
  }
}

void SearchInSegmentParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.SearchInSegmentParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchInSegmentParam::CopyFrom(const SearchInSegmentParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.SearchInSegmentParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchInSegmentParam::IsInitialized() const {

  return true;
}

void SearchInSegmentParam::Swap(SearchInSegmentParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchInSegmentParam::InternalSwap(SearchInSegmentParam* other) {
  file_id_array_.UnsafeArenaSwap(&other->file_id_array_);
  std::swap(search_param_, other->search_param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchInSegmentParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SearchInSegmentParam_descriptor_;
  metadata.reflection = SearchInSegmentParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchInSegmentParam

// repeated string file_id_array = 1;
int SearchInSegmentParam::file_id_array_size() const {
  return file_id_array_.size();
}
void SearchInSegmentParam::clear_file_id_array() {
  file_id_array_.Clear();
}
 const ::std::string& SearchInSegmentParam::file_id_array(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchInSegmentParam.file_id_array)
  return file_id_array_.Get(index);
}
 ::std::string* SearchInSegmentParam::mutable_file_id_array(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchInSegmentParam.file_id_array)
  return file_id_array_.Mutable(index);
}
 void SearchInSegmentParam::set_file_id_array(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:suvlim.grpc.SearchInSegmentParam.file_id_array)
  file_id_array_.Mutable(index)->assign(value);
}
 void SearchInSegmentParam::set_file_id_array(int index, const char* value) {
  file_id_array_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.SearchInSegmentParam.file_id_array)
}
 void SearchInSegmentParam::set_file_id_array(int index, const char* value, size_t size) {
  file_id_array_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.SearchInSegmentParam.file_id_array)
}
 ::std::string* SearchInSegmentParam::add_file_id_array() {
  // @@protoc_insertion_point(field_add_mutable:suvlim.grpc.SearchInSegmentParam.file_id_array)
  return file_id_array_.Add();
}
 void SearchInSegmentParam::add_file_id_array(const ::std::string& value) {
  file_id_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.SearchInSegmentParam.file_id_array)
}
 void SearchInSegmentParam::add_file_id_array(const char* value) {
  file_id_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:suvlim.grpc.SearchInSegmentParam.file_id_array)
}
 void SearchInSegmentParam::add_file_id_array(const char* value, size_t size) {
  file_id_array_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:suvlim.grpc.SearchInSegmentParam.file_id_array)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchInSegmentParam::file_id_array() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.SearchInSegmentParam.file_id_array)
  return file_id_array_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchInSegmentParam::mutable_file_id_array() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.SearchInSegmentParam.file_id_array)
  return &file_id_array_;
}

// optional .suvlim.grpc.SearchParam search_param = 2;
bool SearchInSegmentParam::has_search_param() const {
  return !_is_default_instance_ && search_param_ != NULL;
}
void SearchInSegmentParam::clear_search_param() {
  if (GetArenaNoVirtual() == NULL && search_param_ != NULL) delete search_param_;
  search_param_ = NULL;
}
const ::suvlim::grpc::SearchParam& SearchInSegmentParam::search_param() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchInSegmentParam.search_param)
  return search_param_ != NULL ? *search_param_ : *default_instance_->search_param_;
}
::suvlim::grpc::SearchParam* SearchInSegmentParam::mutable_search_param() {
  
  if (search_param_ == NULL) {
    search_param_ = new ::suvlim::grpc::SearchParam;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchInSegmentParam.search_param)
  return search_param_;
}
::suvlim::grpc::SearchParam* SearchInSegmentParam::release_search_param() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.SearchInSegmentParam.search_param)
  
  ::suvlim::grpc::SearchParam* temp = search_param_;
  search_param_ = NULL;
  return temp;
}
void SearchInSegmentParam::set_allocated_search_param(::suvlim::grpc::SearchParam* search_param) {
  delete search_param_;
  search_param_ = search_param;
  if (search_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.SearchInSegmentParam.search_param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entities::kStatusFieldNumber;
const int Entities::kIdsFieldNumber;
const int Entities::kValidRowFieldNumber;
const int Entities::kRowsDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entities::Entities()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.Entities)
}

void Entities::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
}

Entities::Entities(const Entities& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.Entities)
}

void Entities::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = NULL;
}

Entities::~Entities() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.Entities)
  SharedDtor();
}

void Entities::SharedDtor() {
  if (this != default_instance_) {
    delete status_;
  }
}

void Entities::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Entities::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Entities_descriptor_;
}

const Entities& Entities::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

Entities* Entities::default_instance_ = NULL;

Entities* Entities::New(::google::protobuf::Arena* arena) const {
  Entities* n = new Entities;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Entities::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.Entities)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  ids_.Clear();
  valid_row_.Clear();
  rows_data_.Clear();
}

bool Entities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.Entities)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ids;
        break;
      }

      // repeated int64 ids = 2;
      case 2: {
        if (tag == 18) {
         parse_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ids())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18, input, this->mutable_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_valid_row;
        break;
      }

      // repeated bool valid_row = 3;
      case 3: {
        if (tag == 26) {
         parse_valid_row:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_valid_row())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 26, input, this->mutable_valid_row())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_rows_data;
        break;
      }

      // repeated .suvlim.grpc.RowData rows_data = 4;
      case 4: {
        if (tag == 34) {
         parse_rows_data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_rows_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rows_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_rows_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.Entities)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.Entities)
  return false;
#undef DO_
}

void Entities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.Entities)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // repeated int64 ids = 2;
  if (this->ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_ids_cached_byte_size_);
  }
  for (int i = 0; i < this->ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->ids(i), output);
  }

  // repeated bool valid_row = 3;
  if (this->valid_row_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_valid_row_cached_byte_size_);
  }
  for (int i = 0; i < this->valid_row_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->valid_row(i), output);
  }

  // repeated .suvlim.grpc.RowData rows_data = 4;
  for (unsigned int i = 0, n = this->rows_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->rows_data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.Entities)
}

::google::protobuf::uint8* Entities::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.Entities)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // repeated int64 ids = 2;
  if (this->ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _ids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->ids(i), target);
  }

  // repeated bool valid_row = 3;
  if (this->valid_row_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _valid_row_cached_byte_size_, target);
  }
  for (int i = 0; i < this->valid_row_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->valid_row(i), target);
  }

  // repeated .suvlim.grpc.RowData rows_data = 4;
  for (unsigned int i = 0, n = this->rows_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->rows_data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.Entities)
  return target;
}

int Entities::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.Entities)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // repeated int64 ids = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->ids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool valid_row = 3;
  {
    int data_size = 0;
    data_size = 1 * this->valid_row_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _valid_row_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .suvlim.grpc.RowData rows_data = 4;
  total_size += 1 * this->rows_data_size();
  for (int i = 0; i < this->rows_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows_data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Entities::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.Entities)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Entities* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Entities>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.Entities)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.Entities)
    MergeFrom(*source);
  }
}

void Entities::MergeFrom(const Entities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.Entities)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ids_.MergeFrom(from.ids_);
  valid_row_.MergeFrom(from.valid_row_);
  rows_data_.MergeFrom(from.rows_data_);
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
}

void Entities::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.Entities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entities::CopyFrom(const Entities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.Entities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entities::IsInitialized() const {

  return true;
}

void Entities::Swap(Entities* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Entities::InternalSwap(Entities* other) {
  std::swap(status_, other->status_);
  ids_.UnsafeArenaSwap(&other->ids_);
  valid_row_.UnsafeArenaSwap(&other->valid_row_);
  rows_data_.UnsafeArenaSwap(&other->rows_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Entities::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Entities_descriptor_;
  metadata.reflection = Entities_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Entities

// optional .suvlim.grpc.Status status = 1;
bool Entities::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void Entities::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& Entities::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Entities.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* Entities::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.Entities.status)
  return status_;
}
::suvlim::grpc::Status* Entities::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.Entities.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void Entities::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.Entities.status)
}

// repeated int64 ids = 2;
int Entities::ids_size() const {
  return ids_.size();
}
void Entities::clear_ids() {
  ids_.Clear();
}
 ::google::protobuf::int64 Entities::ids(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Entities.ids)
  return ids_.Get(index);
}
 void Entities::set_ids(int index, ::google::protobuf::int64 value) {
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.Entities.ids)
}
 void Entities::add_ids(::google::protobuf::int64 value) {
  ids_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.Entities.ids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Entities::ids() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.Entities.ids)
  return ids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Entities::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.Entities.ids)
  return &ids_;
}

// repeated bool valid_row = 3;
int Entities::valid_row_size() const {
  return valid_row_.size();
}
void Entities::clear_valid_row() {
  valid_row_.Clear();
}
 bool Entities::valid_row(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Entities.valid_row)
  return valid_row_.Get(index);
}
 void Entities::set_valid_row(int index, bool value) {
  valid_row_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.Entities.valid_row)
}
 void Entities::add_valid_row(bool value) {
  valid_row_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.Entities.valid_row)
}
 const ::google::protobuf::RepeatedField< bool >&
Entities::valid_row() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.Entities.valid_row)
  return valid_row_;
}
 ::google::protobuf::RepeatedField< bool >*
Entities::mutable_valid_row() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.Entities.valid_row)
  return &valid_row_;
}

// repeated .suvlim.grpc.RowData rows_data = 4;
int Entities::rows_data_size() const {
  return rows_data_.size();
}
void Entities::clear_rows_data() {
  rows_data_.Clear();
}
const ::suvlim::grpc::RowData& Entities::rows_data(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Entities.rows_data)
  return rows_data_.Get(index);
}
::suvlim::grpc::RowData* Entities::mutable_rows_data(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.Entities.rows_data)
  return rows_data_.Mutable(index);
}
::suvlim::grpc::RowData* Entities::add_rows_data() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.Entities.rows_data)
  return rows_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::RowData >*
Entities::mutable_rows_data() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.Entities.rows_data)
  return &rows_data_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::RowData >&
Entities::rows_data() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.Entities.rows_data)
  return rows_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResult::kStatusFieldNumber;
const int QueryResult::kEntitiesFieldNumber;
const int QueryResult::kRowNumFieldNumber;
const int QueryResult::kScoresFieldNumber;
const int QueryResult::kDistancesFieldNumber;
const int QueryResult::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResult::QueryResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.QueryResult)
}

void QueryResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
  entities_ = const_cast< ::suvlim::grpc::Entities*>(&::suvlim::grpc::Entities::default_instance());
}

QueryResult::QueryResult(const QueryResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.QueryResult)
}

void QueryResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = NULL;
  entities_ = NULL;
  row_num_ = GOOGLE_LONGLONG(0);
}

QueryResult::~QueryResult() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.QueryResult)
  SharedDtor();
}

void QueryResult::SharedDtor() {
  if (this != default_instance_) {
    delete status_;
    delete entities_;
  }
}

void QueryResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryResult_descriptor_;
}

const QueryResult& QueryResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

QueryResult* QueryResult::default_instance_ = NULL;

QueryResult* QueryResult::New(::google::protobuf::Arena* arena) const {
  QueryResult* n = new QueryResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryResult::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.QueryResult)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && entities_ != NULL) delete entities_;
  entities_ = NULL;
  row_num_ = GOOGLE_LONGLONG(0);
  scores_.Clear();
  distances_.Clear();
  extra_params_.Clear();
}

bool QueryResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.QueryResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_entities;
        break;
      }

      // optional .suvlim.grpc.Entities entities = 2;
      case 2: {
        if (tag == 18) {
         parse_entities:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entities()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_row_num;
        break;
      }

      // optional int64 row_num = 3;
      case 3: {
        if (tag == 24) {
         parse_row_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &row_num_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_scores;
        break;
      }

      // repeated float scores = 4;
      case 4: {
        if (tag == 34) {
         parse_scores:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_scores())));
        } else if (tag == 37) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34, input, this->mutable_scores())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_distances;
        break;
      }

      // repeated float distances = 5;
      case 5: {
        if (tag == 42) {
         parse_distances:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_distances())));
        } else if (tag == 45) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42, input, this->mutable_distances())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_extra_params;
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
      case 6: {
        if (tag == 50) {
         parse_extra_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.QueryResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.QueryResult)
  return false;
#undef DO_
}

void QueryResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.QueryResult)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // optional .suvlim.grpc.Entities entities = 2;
  if (this->has_entities()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->entities_, output);
  }

  // optional int64 row_num = 3;
  if (this->row_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->row_num(), output);
  }

  // repeated float scores = 4;
  if (this->scores_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_scores_cached_byte_size_);
  }
  for (int i = 0; i < this->scores_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->scores(i), output);
  }

  // repeated float distances = 5;
  if (this->distances_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_distances_cached_byte_size_);
  }
  for (int i = 0; i < this->distances_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->distances(i), output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.QueryResult)
}

::google::protobuf::uint8* QueryResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.QueryResult)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // optional .suvlim.grpc.Entities entities = 2;
  if (this->has_entities()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->entities_, false, target);
  }

  // optional int64 row_num = 3;
  if (this->row_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->row_num(), target);
  }

  // repeated float scores = 4;
  if (this->scores_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _scores_cached_byte_size_, target);
  }
  for (int i = 0; i < this->scores_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->scores(i), target);
  }

  // repeated float distances = 5;
  if (this->distances_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _distances_cached_byte_size_, target);
  }
  for (int i = 0; i < this->distances_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->distances(i), target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.QueryResult)
  return target;
}

int QueryResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.QueryResult)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // optional .suvlim.grpc.Entities entities = 2;
  if (this->has_entities()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entities_);
  }

  // optional int64 row_num = 3;
  if (this->row_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->row_num());
  }

  // repeated float scores = 4;
  {
    int data_size = 0;
    data_size = 4 * this->scores_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _scores_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float distances = 5;
  {
    int data_size = 0;
    data_size = 4 * this->distances_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _distances_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.QueryResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.QueryResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.QueryResult)
    MergeFrom(*source);
  }
}

void QueryResult::MergeFrom(const QueryResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.QueryResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  scores_.MergeFrom(from.scores_);
  distances_.MergeFrom(from.distances_);
  extra_params_.MergeFrom(from.extra_params_);
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
  if (from.has_entities()) {
    mutable_entities()->::suvlim::grpc::Entities::MergeFrom(from.entities());
  }
  if (from.row_num() != 0) {
    set_row_num(from.row_num());
  }
}

void QueryResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.QueryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResult::CopyFrom(const QueryResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.QueryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResult::IsInitialized() const {

  return true;
}

void QueryResult::Swap(QueryResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResult::InternalSwap(QueryResult* other) {
  std::swap(status_, other->status_);
  std::swap(entities_, other->entities_);
  std::swap(row_num_, other->row_num_);
  scores_.UnsafeArenaSwap(&other->scores_);
  distances_.UnsafeArenaSwap(&other->distances_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryResult_descriptor_;
  metadata.reflection = QueryResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryResult

// optional .suvlim.grpc.Status status = 1;
bool QueryResult::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void QueryResult::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& QueryResult::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.QueryResult.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* QueryResult::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.QueryResult.status)
  return status_;
}
::suvlim::grpc::Status* QueryResult::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.QueryResult.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void QueryResult::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.QueryResult.status)
}

// optional .suvlim.grpc.Entities entities = 2;
bool QueryResult::has_entities() const {
  return !_is_default_instance_ && entities_ != NULL;
}
void QueryResult::clear_entities() {
  if (GetArenaNoVirtual() == NULL && entities_ != NULL) delete entities_;
  entities_ = NULL;
}
const ::suvlim::grpc::Entities& QueryResult::entities() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.QueryResult.entities)
  return entities_ != NULL ? *entities_ : *default_instance_->entities_;
}
::suvlim::grpc::Entities* QueryResult::mutable_entities() {
  
  if (entities_ == NULL) {
    entities_ = new ::suvlim::grpc::Entities;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.QueryResult.entities)
  return entities_;
}
::suvlim::grpc::Entities* QueryResult::release_entities() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.QueryResult.entities)
  
  ::suvlim::grpc::Entities* temp = entities_;
  entities_ = NULL;
  return temp;
}
void QueryResult::set_allocated_entities(::suvlim::grpc::Entities* entities) {
  delete entities_;
  entities_ = entities;
  if (entities) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.QueryResult.entities)
}

// optional int64 row_num = 3;
void QueryResult::clear_row_num() {
  row_num_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 QueryResult::row_num() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.QueryResult.row_num)
  return row_num_;
}
 void QueryResult::set_row_num(::google::protobuf::int64 value) {
  
  row_num_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.QueryResult.row_num)
}

// repeated float scores = 4;
int QueryResult::scores_size() const {
  return scores_.size();
}
void QueryResult::clear_scores() {
  scores_.Clear();
}
 float QueryResult::scores(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.QueryResult.scores)
  return scores_.Get(index);
}
 void QueryResult::set_scores(int index, float value) {
  scores_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.QueryResult.scores)
}
 void QueryResult::add_scores(float value) {
  scores_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.QueryResult.scores)
}
 const ::google::protobuf::RepeatedField< float >&
QueryResult::scores() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.QueryResult.scores)
  return scores_;
}
 ::google::protobuf::RepeatedField< float >*
QueryResult::mutable_scores() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.QueryResult.scores)
  return &scores_;
}

// repeated float distances = 5;
int QueryResult::distances_size() const {
  return distances_.size();
}
void QueryResult::clear_distances() {
  distances_.Clear();
}
 float QueryResult::distances(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.QueryResult.distances)
  return distances_.Get(index);
}
 void QueryResult::set_distances(int index, float value) {
  distances_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.QueryResult.distances)
}
 void QueryResult::add_distances(float value) {
  distances_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.QueryResult.distances)
}
 const ::google::protobuf::RepeatedField< float >&
QueryResult::distances() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.QueryResult.distances)
  return distances_;
}
 ::google::protobuf::RepeatedField< float >*
QueryResult::mutable_distances() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.QueryResult.distances)
  return &distances_;
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 6;
int QueryResult::extra_params_size() const {
  return extra_params_.size();
}
void QueryResult::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& QueryResult::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.QueryResult.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* QueryResult::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.QueryResult.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* QueryResult::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.QueryResult.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
QueryResult::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.QueryResult.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
QueryResult::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.QueryResult.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringReply::kStatusFieldNumber;
const int StringReply::kStringReplyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringReply::StringReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.StringReply)
}

void StringReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
}

StringReply::StringReply(const StringReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.StringReply)
}

void StringReply::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = NULL;
  string_reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StringReply::~StringReply() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.StringReply)
  SharedDtor();
}

void StringReply::SharedDtor() {
  string_reply_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete status_;
  }
}

void StringReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StringReply_descriptor_;
}

const StringReply& StringReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

StringReply* StringReply::default_instance_ = NULL;

StringReply* StringReply::New(::google::protobuf::Arena* arena) const {
  StringReply* n = new StringReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringReply::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.StringReply)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  string_reply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StringReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.StringReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_string_reply;
        break;
      }

      // optional string string_reply = 2;
      case 2: {
        if (tag == 18) {
         parse_string_reply:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_reply()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_reply().data(), this->string_reply().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.StringReply.string_reply"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.StringReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.StringReply)
  return false;
#undef DO_
}

void StringReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.StringReply)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // optional string string_reply = 2;
  if (this->string_reply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_reply().data(), this->string_reply().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.StringReply.string_reply");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->string_reply(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.StringReply)
}

::google::protobuf::uint8* StringReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.StringReply)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // optional string string_reply = 2;
  if (this->string_reply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_reply().data(), this->string_reply().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.StringReply.string_reply");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->string_reply(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.StringReply)
  return target;
}

int StringReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.StringReply)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // optional string string_reply = 2;
  if (this->string_reply().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string_reply());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.StringReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StringReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StringReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.StringReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.StringReply)
    MergeFrom(*source);
  }
}

void StringReply::MergeFrom(const StringReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.StringReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
  if (from.string_reply().size() > 0) {

    string_reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_reply_);
  }
}

void StringReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.StringReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringReply::CopyFrom(const StringReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.StringReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringReply::IsInitialized() const {

  return true;
}

void StringReply::Swap(StringReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringReply::InternalSwap(StringReply* other) {
  std::swap(status_, other->status_);
  string_reply_.Swap(&other->string_reply_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StringReply_descriptor_;
  metadata.reflection = StringReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringReply

// optional .suvlim.grpc.Status status = 1;
bool StringReply::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void StringReply::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& StringReply::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.StringReply.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* StringReply::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.StringReply.status)
  return status_;
}
::suvlim::grpc::Status* StringReply::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.StringReply.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void StringReply::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.StringReply.status)
}

// optional string string_reply = 2;
void StringReply::clear_string_reply() {
  string_reply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StringReply::string_reply() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.StringReply.string_reply)
  return string_reply_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StringReply::set_string_reply(const ::std::string& value) {
  
  string_reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.StringReply.string_reply)
}
 void StringReply::set_string_reply(const char* value) {
  
  string_reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.StringReply.string_reply)
}
 void StringReply::set_string_reply(const char* value, size_t size) {
  
  string_reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.StringReply.string_reply)
}
 ::std::string* StringReply::mutable_string_reply() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.StringReply.string_reply)
  return string_reply_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StringReply::release_string_reply() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.StringReply.string_reply)
  
  return string_reply_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StringReply::set_allocated_string_reply(::std::string* string_reply) {
  if (string_reply != NULL) {
    
  } else {
    
  }
  string_reply_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_reply);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.StringReply.string_reply)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoolReply::kStatusFieldNumber;
const int BoolReply::kBoolReplyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoolReply::BoolReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.BoolReply)
}

void BoolReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
}

BoolReply::BoolReply(const BoolReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.BoolReply)
}

void BoolReply::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = NULL;
  bool_reply_ = false;
}

BoolReply::~BoolReply() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.BoolReply)
  SharedDtor();
}

void BoolReply::SharedDtor() {
  if (this != default_instance_) {
    delete status_;
  }
}

void BoolReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoolReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BoolReply_descriptor_;
}

const BoolReply& BoolReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

BoolReply* BoolReply::default_instance_ = NULL;

BoolReply* BoolReply::New(::google::protobuf::Arena* arena) const {
  BoolReply* n = new BoolReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BoolReply::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.BoolReply)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  bool_reply_ = false;
}

bool BoolReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.BoolReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bool_reply;
        break;
      }

      // optional bool bool_reply = 2;
      case 2: {
        if (tag == 16) {
         parse_bool_reply:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_reply_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.BoolReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.BoolReply)
  return false;
#undef DO_
}

void BoolReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.BoolReply)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // optional bool bool_reply = 2;
  if (this->bool_reply() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bool_reply(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.BoolReply)
}

::google::protobuf::uint8* BoolReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.BoolReply)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // optional bool bool_reply = 2;
  if (this->bool_reply() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bool_reply(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.BoolReply)
  return target;
}

int BoolReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.BoolReply)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // optional bool bool_reply = 2;
  if (this->bool_reply() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoolReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.BoolReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BoolReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BoolReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.BoolReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.BoolReply)
    MergeFrom(*source);
  }
}

void BoolReply::MergeFrom(const BoolReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.BoolReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
  if (from.bool_reply() != 0) {
    set_bool_reply(from.bool_reply());
  }
}

void BoolReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.BoolReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoolReply::CopyFrom(const BoolReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.BoolReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoolReply::IsInitialized() const {

  return true;
}

void BoolReply::Swap(BoolReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoolReply::InternalSwap(BoolReply* other) {
  std::swap(status_, other->status_);
  std::swap(bool_reply_, other->bool_reply_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BoolReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BoolReply_descriptor_;
  metadata.reflection = BoolReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BoolReply

// optional .suvlim.grpc.Status status = 1;
bool BoolReply::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void BoolReply::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& BoolReply::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.BoolReply.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* BoolReply::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.BoolReply.status)
  return status_;
}
::suvlim::grpc::Status* BoolReply::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.BoolReply.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void BoolReply::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.BoolReply.status)
}

// optional bool bool_reply = 2;
void BoolReply::clear_bool_reply() {
  bool_reply_ = false;
}
 bool BoolReply::bool_reply() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.BoolReply.bool_reply)
  return bool_reply_;
}
 void BoolReply::set_bool_reply(bool value) {
  
  bool_reply_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.BoolReply.bool_reply)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectionRowCount::kStatusFieldNumber;
const int CollectionRowCount::kCollectionRowCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectionRowCount::CollectionRowCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.CollectionRowCount)
}

void CollectionRowCount::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
}

CollectionRowCount::CollectionRowCount(const CollectionRowCount& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.CollectionRowCount)
}

void CollectionRowCount::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = NULL;
  collection_row_count_ = GOOGLE_LONGLONG(0);
}

CollectionRowCount::~CollectionRowCount() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.CollectionRowCount)
  SharedDtor();
}

void CollectionRowCount::SharedDtor() {
  if (this != default_instance_) {
    delete status_;
  }
}

void CollectionRowCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectionRowCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectionRowCount_descriptor_;
}

const CollectionRowCount& CollectionRowCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

CollectionRowCount* CollectionRowCount::default_instance_ = NULL;

CollectionRowCount* CollectionRowCount::New(::google::protobuf::Arena* arena) const {
  CollectionRowCount* n = new CollectionRowCount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectionRowCount::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.CollectionRowCount)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  collection_row_count_ = GOOGLE_LONGLONG(0);
}

bool CollectionRowCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.CollectionRowCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_collection_row_count;
        break;
      }

      // optional int64 collection_row_count = 2;
      case 2: {
        if (tag == 16) {
         parse_collection_row_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &collection_row_count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.CollectionRowCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.CollectionRowCount)
  return false;
#undef DO_
}

void CollectionRowCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.CollectionRowCount)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // optional int64 collection_row_count = 2;
  if (this->collection_row_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->collection_row_count(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.CollectionRowCount)
}

::google::protobuf::uint8* CollectionRowCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.CollectionRowCount)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // optional int64 collection_row_count = 2;
  if (this->collection_row_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->collection_row_count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.CollectionRowCount)
  return target;
}

int CollectionRowCount::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.CollectionRowCount)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // optional int64 collection_row_count = 2;
  if (this->collection_row_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->collection_row_count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectionRowCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.CollectionRowCount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CollectionRowCount* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectionRowCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.CollectionRowCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.CollectionRowCount)
    MergeFrom(*source);
  }
}

void CollectionRowCount::MergeFrom(const CollectionRowCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.CollectionRowCount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
  if (from.collection_row_count() != 0) {
    set_collection_row_count(from.collection_row_count());
  }
}

void CollectionRowCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.CollectionRowCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionRowCount::CopyFrom(const CollectionRowCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.CollectionRowCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionRowCount::IsInitialized() const {

  return true;
}

void CollectionRowCount::Swap(CollectionRowCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectionRowCount::InternalSwap(CollectionRowCount* other) {
  std::swap(status_, other->status_);
  std::swap(collection_row_count_, other->collection_row_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectionRowCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectionRowCount_descriptor_;
  metadata.reflection = CollectionRowCount_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CollectionRowCount

// optional .suvlim.grpc.Status status = 1;
bool CollectionRowCount::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void CollectionRowCount::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& CollectionRowCount::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.CollectionRowCount.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* CollectionRowCount::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.CollectionRowCount.status)
  return status_;
}
::suvlim::grpc::Status* CollectionRowCount::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.CollectionRowCount.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void CollectionRowCount::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.CollectionRowCount.status)
}

// optional int64 collection_row_count = 2;
void CollectionRowCount::clear_collection_row_count() {
  collection_row_count_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 CollectionRowCount::collection_row_count() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.CollectionRowCount.collection_row_count)
  return collection_row_count_;
}
 void CollectionRowCount::set_collection_row_count(::google::protobuf::int64 value) {
  
  collection_row_count_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.CollectionRowCount.collection_row_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command::kCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.Command)
}

void Command::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Command::Command(const Command& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.Command)
}

void Command::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.Command)
  SharedDtor();
}

void Command::SharedDtor() {
  cmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Command::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Command::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Command_descriptor_;
}

const Command& Command::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

Command* Command::default_instance_ = NULL;

Command* Command::New(::google::protobuf::Arena* arena) const {
  Command* n = new Command;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.Command)
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.Command)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string cmd = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd().data(), this->cmd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.Command.cmd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.Command)
  return false;
#undef DO_
}

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.Command)
  // optional string cmd = 1;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), this->cmd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.Command.cmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cmd(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.Command)
}

::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.Command)
  // optional string cmd = 1;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), this->cmd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.Command.cmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cmd(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.Command)
  return target;
}

int Command::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.Command)
  int total_size = 0;

  // optional string cmd = 1;
  if (this->cmd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.Command)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Command* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.Command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.Command)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.cmd().size() > 0) {

    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
}

void Command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {

  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  cmd_.Swap(&other->cmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Command::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Command_descriptor_;
  metadata.reflection = Command_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Command

// optional string cmd = 1;
void Command::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Command::cmd() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Command.cmd)
  return cmd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Command::set_cmd(const ::std::string& value) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.Command.cmd)
}
 void Command::set_cmd(const char* value) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.Command.cmd)
}
 void Command::set_cmd(const char* value, size_t size) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.Command.cmd)
}
 ::std::string* Command::mutable_cmd() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.Command.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Command::release_cmd() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.Command.cmd)
  
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Command::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    
  } else {
    
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.Command.cmd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexParam::kStatusFieldNumber;
const int IndexParam::kCollectionNameFieldNumber;
const int IndexParam::kFieldNameFieldNumber;
const int IndexParam::kIndexNameFieldNumber;
const int IndexParam::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexParam::IndexParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.IndexParam)
}

void IndexParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
}

IndexParam::IndexParam(const IndexParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.IndexParam)
}

void IndexParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = NULL;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IndexParam::~IndexParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.IndexParam)
  SharedDtor();
}

void IndexParam::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete status_;
  }
}

void IndexParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IndexParam_descriptor_;
}

const IndexParam& IndexParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

IndexParam* IndexParam::default_instance_ = NULL;

IndexParam* IndexParam::New(::google::protobuf::Arena* arena) const {
  IndexParam* n = new IndexParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.IndexParam)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_params_.Clear();
}

bool IndexParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.IndexParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_collection_name;
        break;
      }

      // optional string collection_name = 2;
      case 2: {
        if (tag == 18) {
         parse_collection_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.IndexParam.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_field_name;
        break;
      }

      // optional string field_name = 3;
      case 3: {
        if (tag == 26) {
         parse_field_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_name().data(), this->field_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.IndexParam.field_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_index_name;
        break;
      }

      // optional string index_name = 4;
      case 4: {
        if (tag == 34) {
         parse_index_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->index_name().data(), this->index_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.IndexParam.index_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_extra_params;
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
      case 5: {
        if (tag == 42) {
         parse_extra_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.IndexParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.IndexParam)
  return false;
#undef DO_
}

void IndexParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.IndexParam)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.IndexParam.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collection_name(), output);
  }

  // optional string field_name = 3;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.IndexParam.field_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->field_name(), output);
  }

  // optional string index_name = 4;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), this->index_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.IndexParam.index_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->index_name(), output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.IndexParam)
}

::google::protobuf::uint8* IndexParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.IndexParam)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.IndexParam.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collection_name(), target);
  }

  // optional string field_name = 3;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.IndexParam.field_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->field_name(), target);
  }

  // optional string index_name = 4;
  if (this->index_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->index_name().data(), this->index_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.IndexParam.index_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->index_name(), target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.IndexParam)
  return target;
}

int IndexParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.IndexParam)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional string field_name = 3;
  if (this->field_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_name());
  }

  // optional string index_name = 4;
  if (this->index_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->index_name());
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.IndexParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const IndexParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.IndexParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.IndexParam)
    MergeFrom(*source);
  }
}

void IndexParam::MergeFrom(const IndexParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.IndexParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  extra_params_.MergeFrom(from.extra_params_);
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.field_name().size() > 0) {

    field_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_name_);
  }
  if (from.index_name().size() > 0) {

    index_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_name_);
  }
}

void IndexParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.IndexParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexParam::CopyFrom(const IndexParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.IndexParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexParam::IsInitialized() const {

  return true;
}

void IndexParam::Swap(IndexParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexParam::InternalSwap(IndexParam* other) {
  std::swap(status_, other->status_);
  collection_name_.Swap(&other->collection_name_);
  field_name_.Swap(&other->field_name_);
  index_name_.Swap(&other->index_name_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IndexParam_descriptor_;
  metadata.reflection = IndexParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexParam

// optional .suvlim.grpc.Status status = 1;
bool IndexParam::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void IndexParam::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& IndexParam::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.IndexParam.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* IndexParam::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.IndexParam.status)
  return status_;
}
::suvlim::grpc::Status* IndexParam::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.IndexParam.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void IndexParam::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.IndexParam.status)
}

// optional string collection_name = 2;
void IndexParam::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& IndexParam::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.IndexParam.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IndexParam::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.IndexParam.collection_name)
}
 void IndexParam::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.IndexParam.collection_name)
}
 void IndexParam::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.IndexParam.collection_name)
}
 ::std::string* IndexParam::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.IndexParam.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IndexParam::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.IndexParam.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IndexParam::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.IndexParam.collection_name)
}

// optional string field_name = 3;
void IndexParam::clear_field_name() {
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& IndexParam::field_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.IndexParam.field_name)
  return field_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IndexParam::set_field_name(const ::std::string& value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.IndexParam.field_name)
}
 void IndexParam::set_field_name(const char* value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.IndexParam.field_name)
}
 void IndexParam::set_field_name(const char* value, size_t size) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.IndexParam.field_name)
}
 ::std::string* IndexParam::mutable_field_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.IndexParam.field_name)
  return field_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IndexParam::release_field_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.IndexParam.field_name)
  
  return field_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IndexParam::set_allocated_field_name(::std::string* field_name) {
  if (field_name != NULL) {
    
  } else {
    
  }
  field_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.IndexParam.field_name)
}

// optional string index_name = 4;
void IndexParam::clear_index_name() {
  index_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& IndexParam::index_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.IndexParam.index_name)
  return index_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IndexParam::set_index_name(const ::std::string& value) {
  
  index_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.IndexParam.index_name)
}
 void IndexParam::set_index_name(const char* value) {
  
  index_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.IndexParam.index_name)
}
 void IndexParam::set_index_name(const char* value, size_t size) {
  
  index_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.IndexParam.index_name)
}
 ::std::string* IndexParam::mutable_index_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.IndexParam.index_name)
  return index_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IndexParam::release_index_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.IndexParam.index_name)
  
  return index_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IndexParam::set_allocated_index_name(::std::string* index_name) {
  if (index_name != NULL) {
    
  } else {
    
  }
  index_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.IndexParam.index_name)
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 5;
int IndexParam::extra_params_size() const {
  return extra_params_.size();
}
void IndexParam::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& IndexParam::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.IndexParam.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* IndexParam::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.IndexParam.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* IndexParam::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.IndexParam.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
IndexParam::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.IndexParam.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
IndexParam::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.IndexParam.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FlushParam::kCollectionNameArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlushParam::FlushParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.FlushParam)
}

void FlushParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FlushParam::FlushParam(const FlushParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.FlushParam)
}

void FlushParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

FlushParam::~FlushParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.FlushParam)
  SharedDtor();
}

void FlushParam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FlushParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FlushParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FlushParam_descriptor_;
}

const FlushParam& FlushParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

FlushParam* FlushParam::default_instance_ = NULL;

FlushParam* FlushParam::New(::google::protobuf::Arena* arena) const {
  FlushParam* n = new FlushParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FlushParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.FlushParam)
  collection_name_array_.Clear();
}

bool FlushParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.FlushParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string collection_name_array = 1;
      case 1: {
        if (tag == 10) {
         parse_collection_name_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_collection_name_array()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name_array(this->collection_name_array_size() - 1).data(),
            this->collection_name_array(this->collection_name_array_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.FlushParam.collection_name_array"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_collection_name_array;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.FlushParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.FlushParam)
  return false;
#undef DO_
}

void FlushParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.FlushParam)
  // repeated string collection_name_array = 1;
  for (int i = 0; i < this->collection_name_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name_array(i).data(), this->collection_name_array(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.FlushParam.collection_name_array");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->collection_name_array(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.FlushParam)
}

::google::protobuf::uint8* FlushParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.FlushParam)
  // repeated string collection_name_array = 1;
  for (int i = 0; i < this->collection_name_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name_array(i).data(), this->collection_name_array(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.FlushParam.collection_name_array");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->collection_name_array(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.FlushParam)
  return target;
}

int FlushParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.FlushParam)
  int total_size = 0;

  // repeated string collection_name_array = 1;
  total_size += 1 * this->collection_name_array_size();
  for (int i = 0; i < this->collection_name_array_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->collection_name_array(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FlushParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.FlushParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FlushParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FlushParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.FlushParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.FlushParam)
    MergeFrom(*source);
  }
}

void FlushParam::MergeFrom(const FlushParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.FlushParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  collection_name_array_.MergeFrom(from.collection_name_array_);
}

void FlushParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.FlushParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlushParam::CopyFrom(const FlushParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.FlushParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlushParam::IsInitialized() const {

  return true;
}

void FlushParam::Swap(FlushParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlushParam::InternalSwap(FlushParam* other) {
  collection_name_array_.UnsafeArenaSwap(&other->collection_name_array_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FlushParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FlushParam_descriptor_;
  metadata.reflection = FlushParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FlushParam

// repeated string collection_name_array = 1;
int FlushParam::collection_name_array_size() const {
  return collection_name_array_.size();
}
void FlushParam::clear_collection_name_array() {
  collection_name_array_.Clear();
}
 const ::std::string& FlushParam::collection_name_array(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FlushParam.collection_name_array)
  return collection_name_array_.Get(index);
}
 ::std::string* FlushParam::mutable_collection_name_array(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.FlushParam.collection_name_array)
  return collection_name_array_.Mutable(index);
}
 void FlushParam::set_collection_name_array(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:suvlim.grpc.FlushParam.collection_name_array)
  collection_name_array_.Mutable(index)->assign(value);
}
 void FlushParam::set_collection_name_array(int index, const char* value) {
  collection_name_array_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.FlushParam.collection_name_array)
}
 void FlushParam::set_collection_name_array(int index, const char* value, size_t size) {
  collection_name_array_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.FlushParam.collection_name_array)
}
 ::std::string* FlushParam::add_collection_name_array() {
  // @@protoc_insertion_point(field_add_mutable:suvlim.grpc.FlushParam.collection_name_array)
  return collection_name_array_.Add();
}
 void FlushParam::add_collection_name_array(const ::std::string& value) {
  collection_name_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.FlushParam.collection_name_array)
}
 void FlushParam::add_collection_name_array(const char* value) {
  collection_name_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:suvlim.grpc.FlushParam.collection_name_array)
}
 void FlushParam::add_collection_name_array(const char* value, size_t size) {
  collection_name_array_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:suvlim.grpc.FlushParam.collection_name_array)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
FlushParam::collection_name_array() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.FlushParam.collection_name_array)
  return collection_name_array_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
FlushParam::mutable_collection_name_array() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.FlushParam.collection_name_array)
  return &collection_name_array_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompactParam::kCollectionNameFieldNumber;
const int CompactParam::kThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactParam::CompactParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.CompactParam)
}

void CompactParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CompactParam::CompactParam(const CompactParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.CompactParam)
}

void CompactParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  threshold_ = 0;
}

CompactParam::~CompactParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.CompactParam)
  SharedDtor();
}

void CompactParam::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CompactParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompactParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompactParam_descriptor_;
}

const CompactParam& CompactParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

CompactParam* CompactParam::default_instance_ = NULL;

CompactParam* CompactParam::New(::google::protobuf::Arena* arena) const {
  CompactParam* n = new CompactParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompactParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.CompactParam)
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  threshold_ = 0;
}

bool CompactParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.CompactParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.CompactParam.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_threshold;
        break;
      }

      // optional double threshold = 2;
      case 2: {
        if (tag == 17) {
         parse_threshold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.CompactParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.CompactParam)
  return false;
#undef DO_
}

void CompactParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.CompactParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.CompactParam.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // optional double threshold = 2;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->threshold(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.CompactParam)
}

::google::protobuf::uint8* CompactParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.CompactParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.CompactParam.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // optional double threshold = 2;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->threshold(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.CompactParam)
  return target;
}

int CompactParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.CompactParam)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional double threshold = 2;
  if (this->threshold() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompactParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.CompactParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CompactParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.CompactParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.CompactParam)
    MergeFrom(*source);
  }
}

void CompactParam::MergeFrom(const CompactParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.CompactParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
}

void CompactParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.CompactParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactParam::CopyFrom(const CompactParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.CompactParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompactParam::IsInitialized() const {

  return true;
}

void CompactParam::Swap(CompactParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactParam::InternalSwap(CompactParam* other) {
  collection_name_.Swap(&other->collection_name_);
  std::swap(threshold_, other->threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompactParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompactParam_descriptor_;
  metadata.reflection = CompactParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompactParam

// optional string collection_name = 1;
void CompactParam::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CompactParam::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.CompactParam.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompactParam::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.CompactParam.collection_name)
}
 void CompactParam::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.CompactParam.collection_name)
}
 void CompactParam::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.CompactParam.collection_name)
}
 ::std::string* CompactParam::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.CompactParam.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CompactParam::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.CompactParam.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompactParam::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.CompactParam.collection_name)
}

// optional double threshold = 2;
void CompactParam::clear_threshold() {
  threshold_ = 0;
}
 double CompactParam::threshold() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.CompactParam.threshold)
  return threshold_;
}
 void CompactParam::set_threshold(double value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.CompactParam.threshold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteByIDParam::kCollectionNameFieldNumber;
const int DeleteByIDParam::kIdArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteByIDParam::DeleteByIDParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.DeleteByIDParam)
}

void DeleteByIDParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DeleteByIDParam::DeleteByIDParam(const DeleteByIDParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.DeleteByIDParam)
}

void DeleteByIDParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteByIDParam::~DeleteByIDParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.DeleteByIDParam)
  SharedDtor();
}

void DeleteByIDParam::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DeleteByIDParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteByIDParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteByIDParam_descriptor_;
}

const DeleteByIDParam& DeleteByIDParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

DeleteByIDParam* DeleteByIDParam::default_instance_ = NULL;

DeleteByIDParam* DeleteByIDParam::New(::google::protobuf::Arena* arena) const {
  DeleteByIDParam* n = new DeleteByIDParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteByIDParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.DeleteByIDParam)
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_array_.Clear();
}

bool DeleteByIDParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.DeleteByIDParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.DeleteByIDParam.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_id_array;
        break;
      }

      // repeated int64 id_array = 2;
      case 2: {
        if (tag == 18) {
         parse_id_array:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_id_array())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18, input, this->mutable_id_array())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.DeleteByIDParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.DeleteByIDParam)
  return false;
#undef DO_
}

void DeleteByIDParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.DeleteByIDParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.DeleteByIDParam.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // repeated int64 id_array = 2;
  if (this->id_array_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_id_array_cached_byte_size_);
  }
  for (int i = 0; i < this->id_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->id_array(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.DeleteByIDParam)
}

::google::protobuf::uint8* DeleteByIDParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.DeleteByIDParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.DeleteByIDParam.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // repeated int64 id_array = 2;
  if (this->id_array_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _id_array_cached_byte_size_, target);
  }
  for (int i = 0; i < this->id_array_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->id_array(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.DeleteByIDParam)
  return target;
}

int DeleteByIDParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.DeleteByIDParam)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // repeated int64 id_array = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_array_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->id_array(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_array_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteByIDParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.DeleteByIDParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DeleteByIDParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteByIDParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.DeleteByIDParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.DeleteByIDParam)
    MergeFrom(*source);
  }
}

void DeleteByIDParam::MergeFrom(const DeleteByIDParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.DeleteByIDParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  id_array_.MergeFrom(from.id_array_);
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
}

void DeleteByIDParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.DeleteByIDParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteByIDParam::CopyFrom(const DeleteByIDParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.DeleteByIDParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteByIDParam::IsInitialized() const {

  return true;
}

void DeleteByIDParam::Swap(DeleteByIDParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteByIDParam::InternalSwap(DeleteByIDParam* other) {
  collection_name_.Swap(&other->collection_name_);
  id_array_.UnsafeArenaSwap(&other->id_array_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteByIDParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteByIDParam_descriptor_;
  metadata.reflection = DeleteByIDParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteByIDParam

// optional string collection_name = 1;
void DeleteByIDParam::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DeleteByIDParam::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.DeleteByIDParam.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteByIDParam::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.DeleteByIDParam.collection_name)
}
 void DeleteByIDParam::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.DeleteByIDParam.collection_name)
}
 void DeleteByIDParam::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.DeleteByIDParam.collection_name)
}
 ::std::string* DeleteByIDParam::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.DeleteByIDParam.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DeleteByIDParam::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.DeleteByIDParam.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteByIDParam::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.DeleteByIDParam.collection_name)
}

// repeated int64 id_array = 2;
int DeleteByIDParam::id_array_size() const {
  return id_array_.size();
}
void DeleteByIDParam::clear_id_array() {
  id_array_.Clear();
}
 ::google::protobuf::int64 DeleteByIDParam::id_array(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.DeleteByIDParam.id_array)
  return id_array_.Get(index);
}
 void DeleteByIDParam::set_id_array(int index, ::google::protobuf::int64 value) {
  id_array_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.DeleteByIDParam.id_array)
}
 void DeleteByIDParam::add_id_array(::google::protobuf::int64 value) {
  id_array_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.DeleteByIDParam.id_array)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DeleteByIDParam::id_array() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.DeleteByIDParam.id_array)
  return id_array_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DeleteByIDParam::mutable_id_array() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.DeleteByIDParam.id_array)
  return &id_array_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectionInfo::kStatusFieldNumber;
const int CollectionInfo::kJsonInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectionInfo::CollectionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.CollectionInfo)
}

void CollectionInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  status_ = const_cast< ::suvlim::grpc::Status*>(&::suvlim::grpc::Status::default_instance());
}

CollectionInfo::CollectionInfo(const CollectionInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.CollectionInfo)
}

void CollectionInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = NULL;
  json_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CollectionInfo::~CollectionInfo() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.CollectionInfo)
  SharedDtor();
}

void CollectionInfo::SharedDtor() {
  json_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete status_;
  }
}

void CollectionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectionInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectionInfo_descriptor_;
}

const CollectionInfo& CollectionInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

CollectionInfo* CollectionInfo::default_instance_ = NULL;

CollectionInfo* CollectionInfo::New(::google::protobuf::Arena* arena) const {
  CollectionInfo* n = new CollectionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.CollectionInfo)
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  json_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CollectionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.CollectionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Status status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_json_info;
        break;
      }

      // optional string json_info = 2;
      case 2: {
        if (tag == 18) {
         parse_json_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->json_info().data(), this->json_info().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.CollectionInfo.json_info"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.CollectionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.CollectionInfo)
  return false;
#undef DO_
}

void CollectionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.CollectionInfo)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // optional string json_info = 2;
  if (this->json_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json_info().data(), this->json_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.CollectionInfo.json_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->json_info(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.CollectionInfo)
}

::google::protobuf::uint8* CollectionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.CollectionInfo)
  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->status_, false, target);
  }

  // optional string json_info = 2;
  if (this->json_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json_info().data(), this->json_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.CollectionInfo.json_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->json_info(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.CollectionInfo)
  return target;
}

int CollectionInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.CollectionInfo)
  int total_size = 0;

  // optional .suvlim.grpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // optional string json_info = 2;
  if (this->json_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->json_info());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.CollectionInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CollectionInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.CollectionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.CollectionInfo)
    MergeFrom(*source);
  }
}

void CollectionInfo::MergeFrom(const CollectionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.CollectionInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_status()) {
    mutable_status()->::suvlim::grpc::Status::MergeFrom(from.status());
  }
  if (from.json_info().size() > 0) {

    json_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_info_);
  }
}

void CollectionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.CollectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectionInfo::CopyFrom(const CollectionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.CollectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionInfo::IsInitialized() const {

  return true;
}

void CollectionInfo::Swap(CollectionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectionInfo::InternalSwap(CollectionInfo* other) {
  std::swap(status_, other->status_);
  json_info_.Swap(&other->json_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectionInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectionInfo_descriptor_;
  metadata.reflection = CollectionInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CollectionInfo

// optional .suvlim.grpc.Status status = 1;
bool CollectionInfo::has_status() const {
  return !_is_default_instance_ && status_ != NULL;
}
void CollectionInfo::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::suvlim::grpc::Status& CollectionInfo::status() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.CollectionInfo.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::suvlim::grpc::Status* CollectionInfo::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::suvlim::grpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.CollectionInfo.status)
  return status_;
}
::suvlim::grpc::Status* CollectionInfo::release_status() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.CollectionInfo.status)
  
  ::suvlim::grpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void CollectionInfo::set_allocated_status(::suvlim::grpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.CollectionInfo.status)
}

// optional string json_info = 2;
void CollectionInfo::clear_json_info() {
  json_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CollectionInfo::json_info() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.CollectionInfo.json_info)
  return json_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CollectionInfo::set_json_info(const ::std::string& value) {
  
  json_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.CollectionInfo.json_info)
}
 void CollectionInfo::set_json_info(const char* value) {
  
  json_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.CollectionInfo.json_info)
}
 void CollectionInfo::set_json_info(const char* value, size_t size) {
  
  json_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.CollectionInfo.json_info)
}
 ::std::string* CollectionInfo::mutable_json_info() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.CollectionInfo.json_info)
  return json_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CollectionInfo::release_json_info() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.CollectionInfo.json_info)
  
  return json_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CollectionInfo::set_allocated_json_info(::std::string* json_info) {
  if (json_info != NULL) {
    
  } else {
    
  }
  json_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_info);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.CollectionInfo.json_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetEntityIDsParam::kCollectionNameFieldNumber;
const int GetEntityIDsParam::kSegmentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetEntityIDsParam::GetEntityIDsParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.GetEntityIDsParam)
}

void GetEntityIDsParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetEntityIDsParam::GetEntityIDsParam(const GetEntityIDsParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.GetEntityIDsParam)
}

void GetEntityIDsParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segment_id_ = GOOGLE_LONGLONG(0);
}

GetEntityIDsParam::~GetEntityIDsParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.GetEntityIDsParam)
  SharedDtor();
}

void GetEntityIDsParam::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetEntityIDsParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetEntityIDsParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetEntityIDsParam_descriptor_;
}

const GetEntityIDsParam& GetEntityIDsParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

GetEntityIDsParam* GetEntityIDsParam::default_instance_ = NULL;

GetEntityIDsParam* GetEntityIDsParam::New(::google::protobuf::Arena* arena) const {
  GetEntityIDsParam* n = new GetEntityIDsParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetEntityIDsParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.GetEntityIDsParam)
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segment_id_ = GOOGLE_LONGLONG(0);
}

bool GetEntityIDsParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.GetEntityIDsParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.GetEntityIDsParam.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_segment_id;
        break;
      }

      // optional int64 segment_id = 2;
      case 2: {
        if (tag == 16) {
         parse_segment_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &segment_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.GetEntityIDsParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.GetEntityIDsParam)
  return false;
#undef DO_
}

void GetEntityIDsParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.GetEntityIDsParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.GetEntityIDsParam.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // optional int64 segment_id = 2;
  if (this->segment_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->segment_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.GetEntityIDsParam)
}

::google::protobuf::uint8* GetEntityIDsParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.GetEntityIDsParam)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.GetEntityIDsParam.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // optional int64 segment_id = 2;
  if (this->segment_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->segment_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.GetEntityIDsParam)
  return target;
}

int GetEntityIDsParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.GetEntityIDsParam)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional int64 segment_id = 2;
  if (this->segment_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->segment_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetEntityIDsParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.GetEntityIDsParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetEntityIDsParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetEntityIDsParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.GetEntityIDsParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.GetEntityIDsParam)
    MergeFrom(*source);
  }
}

void GetEntityIDsParam::MergeFrom(const GetEntityIDsParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.GetEntityIDsParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.segment_id() != 0) {
    set_segment_id(from.segment_id());
  }
}

void GetEntityIDsParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.GetEntityIDsParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEntityIDsParam::CopyFrom(const GetEntityIDsParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.GetEntityIDsParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityIDsParam::IsInitialized() const {

  return true;
}

void GetEntityIDsParam::Swap(GetEntityIDsParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetEntityIDsParam::InternalSwap(GetEntityIDsParam* other) {
  collection_name_.Swap(&other->collection_name_);
  std::swap(segment_id_, other->segment_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetEntityIDsParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetEntityIDsParam_descriptor_;
  metadata.reflection = GetEntityIDsParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetEntityIDsParam

// optional string collection_name = 1;
void GetEntityIDsParam::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetEntityIDsParam::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.GetEntityIDsParam.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetEntityIDsParam::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.GetEntityIDsParam.collection_name)
}
 void GetEntityIDsParam::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.GetEntityIDsParam.collection_name)
}
 void GetEntityIDsParam::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.GetEntityIDsParam.collection_name)
}
 ::std::string* GetEntityIDsParam::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.GetEntityIDsParam.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetEntityIDsParam::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.GetEntityIDsParam.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetEntityIDsParam::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.GetEntityIDsParam.collection_name)
}

// optional int64 segment_id = 2;
void GetEntityIDsParam::clear_segment_id() {
  segment_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 GetEntityIDsParam::segment_id() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.GetEntityIDsParam.segment_id)
  return segment_id_;
}
 void GetEntityIDsParam::set_segment_id(::google::protobuf::int64 value) {
  
  segment_id_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.GetEntityIDsParam.segment_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityIdentity::kCollectionNameFieldNumber;
const int EntityIdentity::kIdArrayFieldNumber;
const int EntityIdentity::kFieldNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityIdentity::EntityIdentity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.EntityIdentity)
}

void EntityIdentity::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EntityIdentity::EntityIdentity(const EntityIdentity& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.EntityIdentity)
}

void EntityIdentity::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EntityIdentity::~EntityIdentity() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.EntityIdentity)
  SharedDtor();
}

void EntityIdentity::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EntityIdentity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityIdentity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityIdentity_descriptor_;
}

const EntityIdentity& EntityIdentity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

EntityIdentity* EntityIdentity::default_instance_ = NULL;

EntityIdentity* EntityIdentity::New(::google::protobuf::Arena* arena) const {
  EntityIdentity* n = new EntityIdentity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityIdentity::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.EntityIdentity)
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_array_.Clear();
  field_names_.Clear();
}

bool EntityIdentity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.EntityIdentity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.EntityIdentity.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_id_array;
        break;
      }

      // repeated int64 id_array = 2;
      case 2: {
        if (tag == 18) {
         parse_id_array:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_id_array())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18, input, this->mutable_id_array())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_field_names;
        break;
      }

      // repeated string field_names = 3;
      case 3: {
        if (tag == 26) {
         parse_field_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_field_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_names(this->field_names_size() - 1).data(),
            this->field_names(this->field_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.EntityIdentity.field_names"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_field_names;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.EntityIdentity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.EntityIdentity)
  return false;
#undef DO_
}

void EntityIdentity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.EntityIdentity)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.EntityIdentity.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // repeated int64 id_array = 2;
  if (this->id_array_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_id_array_cached_byte_size_);
  }
  for (int i = 0; i < this->id_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->id_array(i), output);
  }

  // repeated string field_names = 3;
  for (int i = 0; i < this->field_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_names(i).data(), this->field_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.EntityIdentity.field_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->field_names(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.EntityIdentity)
}

::google::protobuf::uint8* EntityIdentity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.EntityIdentity)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.EntityIdentity.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // repeated int64 id_array = 2;
  if (this->id_array_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _id_array_cached_byte_size_, target);
  }
  for (int i = 0; i < this->id_array_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->id_array(i), target);
  }

  // repeated string field_names = 3;
  for (int i = 0; i < this->field_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_names(i).data(), this->field_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.EntityIdentity.field_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->field_names(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.EntityIdentity)
  return target;
}

int EntityIdentity::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.EntityIdentity)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // repeated int64 id_array = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_array_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->id_array(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_array_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string field_names = 3;
  total_size += 1 * this->field_names_size();
  for (int i = 0; i < this->field_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->field_names(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityIdentity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.EntityIdentity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EntityIdentity* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityIdentity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.EntityIdentity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.EntityIdentity)
    MergeFrom(*source);
  }
}

void EntityIdentity::MergeFrom(const EntityIdentity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.EntityIdentity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  id_array_.MergeFrom(from.id_array_);
  field_names_.MergeFrom(from.field_names_);
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
}

void EntityIdentity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.EntityIdentity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityIdentity::CopyFrom(const EntityIdentity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.EntityIdentity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityIdentity::IsInitialized() const {

  return true;
}

void EntityIdentity::Swap(EntityIdentity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityIdentity::InternalSwap(EntityIdentity* other) {
  collection_name_.Swap(&other->collection_name_);
  id_array_.UnsafeArenaSwap(&other->id_array_);
  field_names_.UnsafeArenaSwap(&other->field_names_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityIdentity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityIdentity_descriptor_;
  metadata.reflection = EntityIdentity_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityIdentity

// optional string collection_name = 1;
void EntityIdentity::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EntityIdentity::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.EntityIdentity.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EntityIdentity::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.EntityIdentity.collection_name)
}
 void EntityIdentity::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.EntityIdentity.collection_name)
}
 void EntityIdentity::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.EntityIdentity.collection_name)
}
 ::std::string* EntityIdentity::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.EntityIdentity.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EntityIdentity::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.EntityIdentity.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EntityIdentity::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.EntityIdentity.collection_name)
}

// repeated int64 id_array = 2;
int EntityIdentity::id_array_size() const {
  return id_array_.size();
}
void EntityIdentity::clear_id_array() {
  id_array_.Clear();
}
 ::google::protobuf::int64 EntityIdentity::id_array(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.EntityIdentity.id_array)
  return id_array_.Get(index);
}
 void EntityIdentity::set_id_array(int index, ::google::protobuf::int64 value) {
  id_array_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.EntityIdentity.id_array)
}
 void EntityIdentity::add_id_array(::google::protobuf::int64 value) {
  id_array_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.EntityIdentity.id_array)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
EntityIdentity::id_array() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.EntityIdentity.id_array)
  return id_array_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
EntityIdentity::mutable_id_array() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.EntityIdentity.id_array)
  return &id_array_;
}

// repeated string field_names = 3;
int EntityIdentity::field_names_size() const {
  return field_names_.size();
}
void EntityIdentity::clear_field_names() {
  field_names_.Clear();
}
 const ::std::string& EntityIdentity::field_names(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.EntityIdentity.field_names)
  return field_names_.Get(index);
}
 ::std::string* EntityIdentity::mutable_field_names(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.EntityIdentity.field_names)
  return field_names_.Mutable(index);
}
 void EntityIdentity::set_field_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:suvlim.grpc.EntityIdentity.field_names)
  field_names_.Mutable(index)->assign(value);
}
 void EntityIdentity::set_field_names(int index, const char* value) {
  field_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.EntityIdentity.field_names)
}
 void EntityIdentity::set_field_names(int index, const char* value, size_t size) {
  field_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.EntityIdentity.field_names)
}
 ::std::string* EntityIdentity::add_field_names() {
  // @@protoc_insertion_point(field_add_mutable:suvlim.grpc.EntityIdentity.field_names)
  return field_names_.Add();
}
 void EntityIdentity::add_field_names(const ::std::string& value) {
  field_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.EntityIdentity.field_names)
}
 void EntityIdentity::add_field_names(const char* value) {
  field_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:suvlim.grpc.EntityIdentity.field_names)
}
 void EntityIdentity::add_field_names(const char* value, size_t size) {
  field_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:suvlim.grpc.EntityIdentity.field_names)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
EntityIdentity::field_names() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.EntityIdentity.field_names)
  return field_names_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
EntityIdentity::mutable_field_names() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.EntityIdentity.field_names)
  return &field_names_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VectorFieldParam::kDimensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VectorFieldParam::VectorFieldParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.VectorFieldParam)
}

void VectorFieldParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

VectorFieldParam::VectorFieldParam(const VectorFieldParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.VectorFieldParam)
}

void VectorFieldParam::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  dimension_ = GOOGLE_LONGLONG(0);
}

VectorFieldParam::~VectorFieldParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.VectorFieldParam)
  SharedDtor();
}

void VectorFieldParam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VectorFieldParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VectorFieldParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VectorFieldParam_descriptor_;
}

const VectorFieldParam& VectorFieldParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

VectorFieldParam* VectorFieldParam::default_instance_ = NULL;

VectorFieldParam* VectorFieldParam::New(::google::protobuf::Arena* arena) const {
  VectorFieldParam* n = new VectorFieldParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VectorFieldParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.VectorFieldParam)
  dimension_ = GOOGLE_LONGLONG(0);
}

bool VectorFieldParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.VectorFieldParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 dimension = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dimension_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.VectorFieldParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.VectorFieldParam)
  return false;
#undef DO_
}

void VectorFieldParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.VectorFieldParam)
  // optional int64 dimension = 1;
  if (this->dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->dimension(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.VectorFieldParam)
}

::google::protobuf::uint8* VectorFieldParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.VectorFieldParam)
  // optional int64 dimension = 1;
  if (this->dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->dimension(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.VectorFieldParam)
  return target;
}

int VectorFieldParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.VectorFieldParam)
  int total_size = 0;

  // optional int64 dimension = 1;
  if (this->dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dimension());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VectorFieldParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.VectorFieldParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VectorFieldParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VectorFieldParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.VectorFieldParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.VectorFieldParam)
    MergeFrom(*source);
  }
}

void VectorFieldParam::MergeFrom(const VectorFieldParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.VectorFieldParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.dimension() != 0) {
    set_dimension(from.dimension());
  }
}

void VectorFieldParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.VectorFieldParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorFieldParam::CopyFrom(const VectorFieldParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.VectorFieldParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorFieldParam::IsInitialized() const {

  return true;
}

void VectorFieldParam::Swap(VectorFieldParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VectorFieldParam::InternalSwap(VectorFieldParam* other) {
  std::swap(dimension_, other->dimension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VectorFieldParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VectorFieldParam_descriptor_;
  metadata.reflection = VectorFieldParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VectorFieldParam

// optional int64 dimension = 1;
void VectorFieldParam::clear_dimension() {
  dimension_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 VectorFieldParam::dimension() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorFieldParam.dimension)
  return dimension_;
}
 void VectorFieldParam::set_dimension(::google::protobuf::int64 value) {
  
  dimension_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.VectorFieldParam.dimension)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldType::kDataTypeFieldNumber;
const int FieldType::kVectorParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldType::FieldType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.FieldType)
}

void FieldType::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  FieldType_default_oneof_instance_->data_type_ = 0;
  FieldType_default_oneof_instance_->vector_param_ = const_cast< ::suvlim::grpc::VectorFieldParam*>(&::suvlim::grpc::VectorFieldParam::default_instance());
}

FieldType::FieldType(const FieldType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.FieldType)
}

void FieldType::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_value();
}

FieldType::~FieldType() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.FieldType)
  SharedDtor();
}

void FieldType::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
  if (this != default_instance_) {
  }
}

void FieldType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FieldType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FieldType_descriptor_;
}

const FieldType& FieldType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

FieldType* FieldType::default_instance_ = NULL;

FieldType* FieldType::New(::google::protobuf::Arena* arena) const {
  FieldType* n = new FieldType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FieldType::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:suvlim.grpc.FieldType)
  switch(value_case()) {
    case kDataType: {
      // No need to clear
      break;
    }
    case kVectorParam: {
      delete value_.vector_param_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void FieldType::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.FieldType)
  clear_value();
}

bool FieldType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.FieldType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.DataType data_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_data_type(static_cast< ::suvlim::grpc::DataType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_vector_param;
        break;
      }

      // optional .suvlim.grpc.VectorFieldParam vector_param = 2;
      case 2: {
        if (tag == 18) {
         parse_vector_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vector_param()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.FieldType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.FieldType)
  return false;
#undef DO_
}

void FieldType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.FieldType)
  // optional .suvlim.grpc.DataType data_type = 1;
  if (has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->data_type(), output);
  }

  // optional .suvlim.grpc.VectorFieldParam vector_param = 2;
  if (has_vector_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *value_.vector_param_, output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.FieldType)
}

::google::protobuf::uint8* FieldType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.FieldType)
  // optional .suvlim.grpc.DataType data_type = 1;
  if (has_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->data_type(), target);
  }

  // optional .suvlim.grpc.VectorFieldParam vector_param = 2;
  if (has_vector_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *value_.vector_param_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.FieldType)
  return target;
}

int FieldType::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.FieldType)
  int total_size = 0;

  switch (value_case()) {
    // optional .suvlim.grpc.DataType data_type = 1;
    case kDataType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
      break;
    }
    // optional .suvlim.grpc.VectorFieldParam vector_param = 2;
    case kVectorParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.vector_param_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FieldType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.FieldType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FieldType* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.FieldType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.FieldType)
    MergeFrom(*source);
  }
}

void FieldType::MergeFrom(const FieldType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.FieldType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.value_case()) {
    case kDataType: {
      set_data_type(from.data_type());
      break;
    }
    case kVectorParam: {
      mutable_vector_param()->::suvlim::grpc::VectorFieldParam::MergeFrom(from.vector_param());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void FieldType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.FieldType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldType::CopyFrom(const FieldType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.FieldType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldType::IsInitialized() const {

  return true;
}

void FieldType::Swap(FieldType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FieldType::InternalSwap(FieldType* other) {
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FieldType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FieldType_descriptor_;
  metadata.reflection = FieldType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FieldType

// optional .suvlim.grpc.DataType data_type = 1;
bool FieldType::has_data_type() const {
  return value_case() == kDataType;
}
void FieldType::set_has_data_type() {
  _oneof_case_[0] = kDataType;
}
void FieldType::clear_data_type() {
  if (has_data_type()) {
    value_.data_type_ = 0;
    clear_has_value();
  }
}
 ::suvlim::grpc::DataType FieldType::data_type() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldType.data_type)
  if (has_data_type()) {
    return static_cast< ::suvlim::grpc::DataType >(value_.data_type_);
  }
  return static_cast< ::suvlim::grpc::DataType >(0);
}
 void FieldType::set_data_type(::suvlim::grpc::DataType value) {
  if (!has_data_type()) {
    clear_value();
    set_has_data_type();
  }
  value_.data_type_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.FieldType.data_type)
}

// optional .suvlim.grpc.VectorFieldParam vector_param = 2;
bool FieldType::has_vector_param() const {
  return value_case() == kVectorParam;
}
void FieldType::set_has_vector_param() {
  _oneof_case_[0] = kVectorParam;
}
void FieldType::clear_vector_param() {
  if (has_vector_param()) {
    delete value_.vector_param_;
    clear_has_value();
  }
}
 const ::suvlim::grpc::VectorFieldParam& FieldType::vector_param() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldType.vector_param)
  return has_vector_param()
      ? *value_.vector_param_
      : ::suvlim::grpc::VectorFieldParam::default_instance();
}
::suvlim::grpc::VectorFieldParam* FieldType::mutable_vector_param() {
  if (!has_vector_param()) {
    clear_value();
    set_has_vector_param();
    value_.vector_param_ = new ::suvlim::grpc::VectorFieldParam;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.FieldType.vector_param)
  return value_.vector_param_;
}
::suvlim::grpc::VectorFieldParam* FieldType::release_vector_param() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.FieldType.vector_param)
  if (has_vector_param()) {
    clear_has_value();
    ::suvlim::grpc::VectorFieldParam* temp = value_.vector_param_;
    value_.vector_param_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void FieldType::set_allocated_vector_param(::suvlim::grpc::VectorFieldParam* vector_param) {
  clear_value();
  if (vector_param) {
    set_has_vector_param();
    value_.vector_param_ = vector_param;
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.FieldType.vector_param)
}

bool FieldType::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void FieldType::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
FieldType::ValueCase FieldType::value_case() const {
  return FieldType::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldParam::kIdFieldNumber;
const int FieldParam::kNameFieldNumber;
const int FieldParam::kTypeFieldNumber;
const int FieldParam::kIndexParamsFieldNumber;
const int FieldParam::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldParam::FieldParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.FieldParam)
}

void FieldParam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FieldParam::FieldParam(const FieldParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.FieldParam)
}

void FieldParam::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

FieldParam::~FieldParam() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.FieldParam)
  SharedDtor();
}

void FieldParam::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FieldParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FieldParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FieldParam_descriptor_;
}

const FieldParam& FieldParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

FieldParam* FieldParam::default_instance_ = NULL;

FieldParam* FieldParam::New(::google::protobuf::Arena* arena) const {
  FieldParam* n = new FieldParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FieldParam::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.FieldParam)
  id_ = GOOGLE_ULONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  index_params_.Clear();
  extra_params_.Clear();
}

bool FieldParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.FieldParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.FieldParam.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional .suvlim.grpc.DataType type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::suvlim::grpc::DataType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_index_params;
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair index_params = 4;
      case 4: {
        if (tag == 34) {
         parse_index_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_index_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_index_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_index_params;
        if (input->ExpectTag(42)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.FieldParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.FieldParam)
  return false;
#undef DO_
}

void FieldParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.FieldParam)
  // optional uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.FieldParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .suvlim.grpc.DataType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // repeated .suvlim.grpc.KeyValuePair index_params = 4;
  for (unsigned int i = 0, n = this->index_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->index_params(i), output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.FieldParam)
}

::google::protobuf::uint8* FieldParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.FieldParam)
  // optional uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.FieldParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .suvlim.grpc.DataType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // repeated .suvlim.grpc.KeyValuePair index_params = 4;
  for (unsigned int i = 0, n = this->index_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->index_params(i), false, target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.FieldParam)
  return target;
}

int FieldParam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.FieldParam)
  int total_size = 0;

  // optional uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .suvlim.grpc.DataType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // repeated .suvlim.grpc.KeyValuePair index_params = 4;
  total_size += 1 * this->index_params_size();
  for (int i = 0; i < this->index_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->index_params(i));
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FieldParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.FieldParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FieldParam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.FieldParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.FieldParam)
    MergeFrom(*source);
  }
}

void FieldParam::MergeFrom(const FieldParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.FieldParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  index_params_.MergeFrom(from.index_params_);
  extra_params_.MergeFrom(from.extra_params_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void FieldParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.FieldParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldParam::CopyFrom(const FieldParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.FieldParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldParam::IsInitialized() const {

  return true;
}

void FieldParam::Swap(FieldParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FieldParam::InternalSwap(FieldParam* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  index_params_.UnsafeArenaSwap(&other->index_params_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FieldParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FieldParam_descriptor_;
  metadata.reflection = FieldParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FieldParam

// optional uint64 id = 1;
void FieldParam::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 FieldParam::id() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldParam.id)
  return id_;
}
 void FieldParam::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.FieldParam.id)
}

// optional string name = 2;
void FieldParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FieldParam::name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldParam.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FieldParam::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.FieldParam.name)
}
 void FieldParam::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.FieldParam.name)
}
 void FieldParam::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.FieldParam.name)
}
 ::std::string* FieldParam::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.FieldParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FieldParam::release_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.FieldParam.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FieldParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.FieldParam.name)
}

// optional .suvlim.grpc.DataType type = 3;
void FieldParam::clear_type() {
  type_ = 0;
}
 ::suvlim::grpc::DataType FieldParam::type() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldParam.type)
  return static_cast< ::suvlim::grpc::DataType >(type_);
}
 void FieldParam::set_type(::suvlim::grpc::DataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.FieldParam.type)
}

// repeated .suvlim.grpc.KeyValuePair index_params = 4;
int FieldParam::index_params_size() const {
  return index_params_.size();
}
void FieldParam::clear_index_params() {
  index_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& FieldParam::index_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldParam.index_params)
  return index_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* FieldParam::mutable_index_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.FieldParam.index_params)
  return index_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* FieldParam::add_index_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.FieldParam.index_params)
  return index_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
FieldParam::mutable_index_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.FieldParam.index_params)
  return &index_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
FieldParam::index_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.FieldParam.index_params)
  return index_params_;
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 5;
int FieldParam::extra_params_size() const {
  return extra_params_.size();
}
void FieldParam::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& FieldParam::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.FieldParam.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* FieldParam::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.FieldParam.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* FieldParam::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.FieldParam.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
FieldParam::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.FieldParam.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
FieldParam::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.FieldParam.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VectorFieldRecord::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VectorFieldRecord::VectorFieldRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.VectorFieldRecord)
}

void VectorFieldRecord::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

VectorFieldRecord::VectorFieldRecord(const VectorFieldRecord& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.VectorFieldRecord)
}

void VectorFieldRecord::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

VectorFieldRecord::~VectorFieldRecord() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.VectorFieldRecord)
  SharedDtor();
}

void VectorFieldRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VectorFieldRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VectorFieldRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VectorFieldRecord_descriptor_;
}

const VectorFieldRecord& VectorFieldRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

VectorFieldRecord* VectorFieldRecord::default_instance_ = NULL;

VectorFieldRecord* VectorFieldRecord::New(::google::protobuf::Arena* arena) const {
  VectorFieldRecord* n = new VectorFieldRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VectorFieldRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.VectorFieldRecord)
  value_.Clear();
}

bool VectorFieldRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.VectorFieldRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .suvlim.grpc.VectorRowRecord value = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_value;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.VectorFieldRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.VectorFieldRecord)
  return false;
#undef DO_
}

void VectorFieldRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.VectorFieldRecord)
  // repeated .suvlim.grpc.VectorRowRecord value = 1;
  for (unsigned int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.VectorFieldRecord)
}

::google::protobuf::uint8* VectorFieldRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.VectorFieldRecord)
  // repeated .suvlim.grpc.VectorRowRecord value = 1;
  for (unsigned int i = 0, n = this->value_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->value(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.VectorFieldRecord)
  return target;
}

int VectorFieldRecord::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.VectorFieldRecord)
  int total_size = 0;

  // repeated .suvlim.grpc.VectorRowRecord value = 1;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->value(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VectorFieldRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.VectorFieldRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VectorFieldRecord* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VectorFieldRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.VectorFieldRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.VectorFieldRecord)
    MergeFrom(*source);
  }
}

void VectorFieldRecord::MergeFrom(const VectorFieldRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.VectorFieldRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  value_.MergeFrom(from.value_);
}

void VectorFieldRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.VectorFieldRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorFieldRecord::CopyFrom(const VectorFieldRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.VectorFieldRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorFieldRecord::IsInitialized() const {

  return true;
}

void VectorFieldRecord::Swap(VectorFieldRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VectorFieldRecord::InternalSwap(VectorFieldRecord* other) {
  value_.UnsafeArenaSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VectorFieldRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VectorFieldRecord_descriptor_;
  metadata.reflection = VectorFieldRecord_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VectorFieldRecord

// repeated .suvlim.grpc.VectorRowRecord value = 1;
int VectorFieldRecord::value_size() const {
  return value_.size();
}
void VectorFieldRecord::clear_value() {
  value_.Clear();
}
const ::suvlim::grpc::VectorRowRecord& VectorFieldRecord::value(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorFieldRecord.value)
  return value_.Get(index);
}
::suvlim::grpc::VectorRowRecord* VectorFieldRecord::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.VectorFieldRecord.value)
  return value_.Mutable(index);
}
::suvlim::grpc::VectorRowRecord* VectorFieldRecord::add_value() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.VectorFieldRecord.value)
  return value_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::VectorRowRecord >*
VectorFieldRecord::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.VectorFieldRecord.value)
  return &value_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::VectorRowRecord >&
VectorFieldRecord::value() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.VectorFieldRecord.value)
  return value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TermQuery::kFieldNameFieldNumber;
const int TermQuery::kIntValueFieldNumber;
const int TermQuery::kDoubleValueFieldNumber;
const int TermQuery::kValueNumFieldNumber;
const int TermQuery::kBoostFieldNumber;
const int TermQuery::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TermQuery::TermQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.TermQuery)
}

void TermQuery::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TermQuery::TermQuery(const TermQuery& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.TermQuery)
}

void TermQuery::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_num_ = GOOGLE_LONGLONG(0);
  boost_ = 0;
}

TermQuery::~TermQuery() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.TermQuery)
  SharedDtor();
}

void TermQuery::SharedDtor() {
  field_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TermQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TermQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TermQuery_descriptor_;
}

const TermQuery& TermQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

TermQuery* TermQuery::default_instance_ = NULL;

TermQuery* TermQuery::New(::google::protobuf::Arena* arena) const {
  TermQuery* n = new TermQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TermQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.TermQuery)
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_num_ = GOOGLE_LONGLONG(0);
  boost_ = 0;
  int_value_.Clear();
  double_value_.Clear();
  extra_params_.Clear();
}

bool TermQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.TermQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string field_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_name().data(), this->field_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.TermQuery.field_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_int_value;
        break;
      }

      // repeated int64 int_value = 2;
      case 2: {
        if (tag == 18) {
         parse_int_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_int_value())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18, input, this->mutable_int_value())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_double_value;
        break;
      }

      // repeated double double_value = 3;
      case 3: {
        if (tag == 26) {
         parse_double_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_double_value())));
        } else if (tag == 25) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 26, input, this->mutable_double_value())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_value_num;
        break;
      }

      // optional int64 value_num = 4;
      case 4: {
        if (tag == 32) {
         parse_value_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_num_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_boost;
        break;
      }

      // optional float boost = 5;
      case 5: {
        if (tag == 45) {
         parse_boost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &boost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_extra_params;
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
      case 6: {
        if (tag == 50) {
         parse_extra_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.TermQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.TermQuery)
  return false;
#undef DO_
}

void TermQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.TermQuery)
  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.TermQuery.field_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field_name(), output);
  }

  // repeated int64 int_value = 2;
  if (this->int_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_int_value_cached_byte_size_);
  }
  for (int i = 0; i < this->int_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->int_value(i), output);
  }

  // repeated double double_value = 3;
  if (this->double_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_double_value_cached_byte_size_);
  }
  for (int i = 0; i < this->double_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->double_value(i), output);
  }

  // optional int64 value_num = 4;
  if (this->value_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->value_num(), output);
  }

  // optional float boost = 5;
  if (this->boost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->boost(), output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.TermQuery)
}

::google::protobuf::uint8* TermQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.TermQuery)
  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.TermQuery.field_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field_name(), target);
  }

  // repeated int64 int_value = 2;
  if (this->int_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _int_value_cached_byte_size_, target);
  }
  for (int i = 0; i < this->int_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->int_value(i), target);
  }

  // repeated double double_value = 3;
  if (this->double_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _double_value_cached_byte_size_, target);
  }
  for (int i = 0; i < this->double_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->double_value(i), target);
  }

  // optional int64 value_num = 4;
  if (this->value_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->value_num(), target);
  }

  // optional float boost = 5;
  if (this->boost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->boost(), target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.TermQuery)
  return target;
}

int TermQuery::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.TermQuery)
  int total_size = 0;

  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_name());
  }

  // optional int64 value_num = 4;
  if (this->value_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value_num());
  }

  // optional float boost = 5;
  if (this->boost() != 0) {
    total_size += 1 + 4;
  }

  // repeated int64 int_value = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->int_value_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->int_value(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int_value_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double double_value = 3;
  {
    int data_size = 0;
    data_size = 8 * this->double_value_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _double_value_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 6;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TermQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.TermQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TermQuery* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TermQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.TermQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.TermQuery)
    MergeFrom(*source);
  }
}

void TermQuery::MergeFrom(const TermQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.TermQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  int_value_.MergeFrom(from.int_value_);
  double_value_.MergeFrom(from.double_value_);
  extra_params_.MergeFrom(from.extra_params_);
  if (from.field_name().size() > 0) {

    field_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_name_);
  }
  if (from.value_num() != 0) {
    set_value_num(from.value_num());
  }
  if (from.boost() != 0) {
    set_boost(from.boost());
  }
}

void TermQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.TermQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TermQuery::CopyFrom(const TermQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.TermQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TermQuery::IsInitialized() const {

  return true;
}

void TermQuery::Swap(TermQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TermQuery::InternalSwap(TermQuery* other) {
  field_name_.Swap(&other->field_name_);
  int_value_.UnsafeArenaSwap(&other->int_value_);
  double_value_.UnsafeArenaSwap(&other->double_value_);
  std::swap(value_num_, other->value_num_);
  std::swap(boost_, other->boost_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TermQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TermQuery_descriptor_;
  metadata.reflection = TermQuery_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TermQuery

// optional string field_name = 1;
void TermQuery::clear_field_name() {
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TermQuery::field_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.TermQuery.field_name)
  return field_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TermQuery::set_field_name(const ::std::string& value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.TermQuery.field_name)
}
 void TermQuery::set_field_name(const char* value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.TermQuery.field_name)
}
 void TermQuery::set_field_name(const char* value, size_t size) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.TermQuery.field_name)
}
 ::std::string* TermQuery::mutable_field_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.TermQuery.field_name)
  return field_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TermQuery::release_field_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.TermQuery.field_name)
  
  return field_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TermQuery::set_allocated_field_name(::std::string* field_name) {
  if (field_name != NULL) {
    
  } else {
    
  }
  field_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.TermQuery.field_name)
}

// repeated int64 int_value = 2;
int TermQuery::int_value_size() const {
  return int_value_.size();
}
void TermQuery::clear_int_value() {
  int_value_.Clear();
}
 ::google::protobuf::int64 TermQuery::int_value(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.TermQuery.int_value)
  return int_value_.Get(index);
}
 void TermQuery::set_int_value(int index, ::google::protobuf::int64 value) {
  int_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.TermQuery.int_value)
}
 void TermQuery::add_int_value(::google::protobuf::int64 value) {
  int_value_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.TermQuery.int_value)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TermQuery::int_value() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.TermQuery.int_value)
  return int_value_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TermQuery::mutable_int_value() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.TermQuery.int_value)
  return &int_value_;
}

// repeated double double_value = 3;
int TermQuery::double_value_size() const {
  return double_value_.size();
}
void TermQuery::clear_double_value() {
  double_value_.Clear();
}
 double TermQuery::double_value(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.TermQuery.double_value)
  return double_value_.Get(index);
}
 void TermQuery::set_double_value(int index, double value) {
  double_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.TermQuery.double_value)
}
 void TermQuery::add_double_value(double value) {
  double_value_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.TermQuery.double_value)
}
 const ::google::protobuf::RepeatedField< double >&
TermQuery::double_value() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.TermQuery.double_value)
  return double_value_;
}
 ::google::protobuf::RepeatedField< double >*
TermQuery::mutable_double_value() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.TermQuery.double_value)
  return &double_value_;
}

// optional int64 value_num = 4;
void TermQuery::clear_value_num() {
  value_num_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TermQuery::value_num() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.TermQuery.value_num)
  return value_num_;
}
 void TermQuery::set_value_num(::google::protobuf::int64 value) {
  
  value_num_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.TermQuery.value_num)
}

// optional float boost = 5;
void TermQuery::clear_boost() {
  boost_ = 0;
}
 float TermQuery::boost() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.TermQuery.boost)
  return boost_;
}
 void TermQuery::set_boost(float value) {
  
  boost_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.TermQuery.boost)
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 6;
int TermQuery::extra_params_size() const {
  return extra_params_.size();
}
void TermQuery::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& TermQuery::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.TermQuery.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* TermQuery::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.TermQuery.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* TermQuery::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.TermQuery.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
TermQuery::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.TermQuery.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
TermQuery::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.TermQuery.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompareExpr::kOperatorFieldNumber;
const int CompareExpr::kOperandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompareExpr::CompareExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.CompareExpr)
}

void CompareExpr::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CompareExpr::CompareExpr(const CompareExpr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.CompareExpr)
}

void CompareExpr::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  operator__ = 0;
  operand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CompareExpr::~CompareExpr() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.CompareExpr)
  SharedDtor();
}

void CompareExpr::SharedDtor() {
  operand_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CompareExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompareExpr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompareExpr_descriptor_;
}

const CompareExpr& CompareExpr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

CompareExpr* CompareExpr::default_instance_ = NULL;

CompareExpr* CompareExpr::New(::google::protobuf::Arena* arena) const {
  CompareExpr* n = new CompareExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompareExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.CompareExpr)
  operator__ = 0;
  operand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CompareExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.CompareExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.CompareOperator operator = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operator_(static_cast< ::suvlim::grpc::CompareOperator >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_operand;
        break;
      }

      // optional string operand = 2;
      case 2: {
        if (tag == 18) {
         parse_operand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operand()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operand().data(), this->operand().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.CompareExpr.operand"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.CompareExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.CompareExpr)
  return false;
#undef DO_
}

void CompareExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.CompareExpr)
  // optional .suvlim.grpc.CompareOperator operator = 1;
  if (this->operator_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->operator_(), output);
  }

  // optional string operand = 2;
  if (this->operand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operand().data(), this->operand().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.CompareExpr.operand");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->operand(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.CompareExpr)
}

::google::protobuf::uint8* CompareExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.CompareExpr)
  // optional .suvlim.grpc.CompareOperator operator = 1;
  if (this->operator_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->operator_(), target);
  }

  // optional string operand = 2;
  if (this->operand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operand().data(), this->operand().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.CompareExpr.operand");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->operand(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.CompareExpr)
  return target;
}

int CompareExpr::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.CompareExpr)
  int total_size = 0;

  // optional .suvlim.grpc.CompareOperator operator = 1;
  if (this->operator_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operator_());
  }

  // optional string operand = 2;
  if (this->operand().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operand());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompareExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.CompareExpr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CompareExpr* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CompareExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.CompareExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.CompareExpr)
    MergeFrom(*source);
  }
}

void CompareExpr::MergeFrom(const CompareExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.CompareExpr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.operator_() != 0) {
    set_operator_(from.operator_());
  }
  if (from.operand().size() > 0) {

    operand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operand_);
  }
}

void CompareExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.CompareExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompareExpr::CopyFrom(const CompareExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.CompareExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompareExpr::IsInitialized() const {

  return true;
}

void CompareExpr::Swap(CompareExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompareExpr::InternalSwap(CompareExpr* other) {
  std::swap(operator__, other->operator__);
  operand_.Swap(&other->operand_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompareExpr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompareExpr_descriptor_;
  metadata.reflection = CompareExpr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompareExpr

// optional .suvlim.grpc.CompareOperator operator = 1;
void CompareExpr::clear_operator_() {
  operator__ = 0;
}
 ::suvlim::grpc::CompareOperator CompareExpr::operator_() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.CompareExpr.operator)
  return static_cast< ::suvlim::grpc::CompareOperator >(operator__);
}
 void CompareExpr::set_operator_(::suvlim::grpc::CompareOperator value) {
  
  operator__ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.CompareExpr.operator)
}

// optional string operand = 2;
void CompareExpr::clear_operand() {
  operand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CompareExpr::operand() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.CompareExpr.operand)
  return operand_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompareExpr::set_operand(const ::std::string& value) {
  
  operand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.CompareExpr.operand)
}
 void CompareExpr::set_operand(const char* value) {
  
  operand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.CompareExpr.operand)
}
 void CompareExpr::set_operand(const char* value, size_t size) {
  
  operand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.CompareExpr.operand)
}
 ::std::string* CompareExpr::mutable_operand() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.CompareExpr.operand)
  return operand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CompareExpr::release_operand() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.CompareExpr.operand)
  
  return operand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompareExpr::set_allocated_operand(::std::string* operand) {
  if (operand != NULL) {
    
  } else {
    
  }
  operand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operand);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.CompareExpr.operand)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RangeQuery::kFieldNameFieldNumber;
const int RangeQuery::kOperandFieldNumber;
const int RangeQuery::kBoostFieldNumber;
const int RangeQuery::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RangeQuery::RangeQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.RangeQuery)
}

void RangeQuery::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RangeQuery::RangeQuery(const RangeQuery& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.RangeQuery)
}

void RangeQuery::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  boost_ = 0;
}

RangeQuery::~RangeQuery() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.RangeQuery)
  SharedDtor();
}

void RangeQuery::SharedDtor() {
  field_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RangeQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RangeQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RangeQuery_descriptor_;
}

const RangeQuery& RangeQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

RangeQuery* RangeQuery::default_instance_ = NULL;

RangeQuery* RangeQuery::New(::google::protobuf::Arena* arena) const {
  RangeQuery* n = new RangeQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RangeQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.RangeQuery)
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  boost_ = 0;
  operand_.Clear();
  extra_params_.Clear();
}

bool RangeQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.RangeQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string field_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_name().data(), this->field_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.RangeQuery.field_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_operand;
        break;
      }

      // repeated .suvlim.grpc.CompareExpr operand = 2;
      case 2: {
        if (tag == 18) {
         parse_operand:
          DO_(input->IncrementRecursionDepth());
         parse_loop_operand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_operand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_operand;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(29)) goto parse_boost;
        break;
      }

      // optional float boost = 3;
      case 3: {
        if (tag == 29) {
         parse_boost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &boost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_extra_params;
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
      case 4: {
        if (tag == 34) {
         parse_extra_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.RangeQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.RangeQuery)
  return false;
#undef DO_
}

void RangeQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.RangeQuery)
  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.RangeQuery.field_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field_name(), output);
  }

  // repeated .suvlim.grpc.CompareExpr operand = 2;
  for (unsigned int i = 0, n = this->operand_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->operand(i), output);
  }

  // optional float boost = 3;
  if (this->boost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->boost(), output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.RangeQuery)
}

::google::protobuf::uint8* RangeQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.RangeQuery)
  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.RangeQuery.field_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field_name(), target);
  }

  // repeated .suvlim.grpc.CompareExpr operand = 2;
  for (unsigned int i = 0, n = this->operand_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->operand(i), false, target);
  }

  // optional float boost = 3;
  if (this->boost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->boost(), target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.RangeQuery)
  return target;
}

int RangeQuery::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.RangeQuery)
  int total_size = 0;

  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_name());
  }

  // optional float boost = 3;
  if (this->boost() != 0) {
    total_size += 1 + 4;
  }

  // repeated .suvlim.grpc.CompareExpr operand = 2;
  total_size += 1 * this->operand_size();
  for (int i = 0; i < this->operand_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->operand(i));
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RangeQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.RangeQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RangeQuery* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RangeQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.RangeQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.RangeQuery)
    MergeFrom(*source);
  }
}

void RangeQuery::MergeFrom(const RangeQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.RangeQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  operand_.MergeFrom(from.operand_);
  extra_params_.MergeFrom(from.extra_params_);
  if (from.field_name().size() > 0) {

    field_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_name_);
  }
  if (from.boost() != 0) {
    set_boost(from.boost());
  }
}

void RangeQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.RangeQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RangeQuery::CopyFrom(const RangeQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.RangeQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RangeQuery::IsInitialized() const {

  return true;
}

void RangeQuery::Swap(RangeQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RangeQuery::InternalSwap(RangeQuery* other) {
  field_name_.Swap(&other->field_name_);
  operand_.UnsafeArenaSwap(&other->operand_);
  std::swap(boost_, other->boost_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RangeQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RangeQuery_descriptor_;
  metadata.reflection = RangeQuery_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RangeQuery

// optional string field_name = 1;
void RangeQuery::clear_field_name() {
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RangeQuery::field_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.RangeQuery.field_name)
  return field_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RangeQuery::set_field_name(const ::std::string& value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.RangeQuery.field_name)
}
 void RangeQuery::set_field_name(const char* value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.RangeQuery.field_name)
}
 void RangeQuery::set_field_name(const char* value, size_t size) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.RangeQuery.field_name)
}
 ::std::string* RangeQuery::mutable_field_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.RangeQuery.field_name)
  return field_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RangeQuery::release_field_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.RangeQuery.field_name)
  
  return field_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RangeQuery::set_allocated_field_name(::std::string* field_name) {
  if (field_name != NULL) {
    
  } else {
    
  }
  field_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.RangeQuery.field_name)
}

// repeated .suvlim.grpc.CompareExpr operand = 2;
int RangeQuery::operand_size() const {
  return operand_.size();
}
void RangeQuery::clear_operand() {
  operand_.Clear();
}
const ::suvlim::grpc::CompareExpr& RangeQuery::operand(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.RangeQuery.operand)
  return operand_.Get(index);
}
::suvlim::grpc::CompareExpr* RangeQuery::mutable_operand(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.RangeQuery.operand)
  return operand_.Mutable(index);
}
::suvlim::grpc::CompareExpr* RangeQuery::add_operand() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.RangeQuery.operand)
  return operand_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::CompareExpr >*
RangeQuery::mutable_operand() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.RangeQuery.operand)
  return &operand_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::CompareExpr >&
RangeQuery::operand() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.RangeQuery.operand)
  return operand_;
}

// optional float boost = 3;
void RangeQuery::clear_boost() {
  boost_ = 0;
}
 float RangeQuery::boost() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.RangeQuery.boost)
  return boost_;
}
 void RangeQuery::set_boost(float value) {
  
  boost_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.RangeQuery.boost)
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 4;
int RangeQuery::extra_params_size() const {
  return extra_params_.size();
}
void RangeQuery::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& RangeQuery::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.RangeQuery.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* RangeQuery::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.RangeQuery.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* RangeQuery::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.RangeQuery.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
RangeQuery::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.RangeQuery.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
RangeQuery::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.RangeQuery.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VectorQuery::kFieldNameFieldNumber;
const int VectorQuery::kQueryBoostFieldNumber;
const int VectorQuery::kRecordsFieldNumber;
const int VectorQuery::kTopkFieldNumber;
const int VectorQuery::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VectorQuery::VectorQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.VectorQuery)
}

void VectorQuery::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

VectorQuery::VectorQuery(const VectorQuery& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.VectorQuery)
}

void VectorQuery::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_boost_ = 0;
  topk_ = GOOGLE_LONGLONG(0);
}

VectorQuery::~VectorQuery() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.VectorQuery)
  SharedDtor();
}

void VectorQuery::SharedDtor() {
  field_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void VectorQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VectorQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VectorQuery_descriptor_;
}

const VectorQuery& VectorQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

VectorQuery* VectorQuery::default_instance_ = NULL;

VectorQuery* VectorQuery::New(::google::protobuf::Arena* arena) const {
  VectorQuery* n = new VectorQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VectorQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.VectorQuery)
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_boost_ = 0;
  topk_ = GOOGLE_LONGLONG(0);
  records_.Clear();
  extra_params_.Clear();
}

bool VectorQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.VectorQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string field_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_name().data(), this->field_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.VectorQuery.field_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_query_boost;
        break;
      }

      // optional float query_boost = 2;
      case 2: {
        if (tag == 21) {
         parse_query_boost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &query_boost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_records;
        break;
      }

      // repeated .suvlim.grpc.VectorRowRecord records = 3;
      case 3: {
        if (tag == 26) {
         parse_records:
          DO_(input->IncrementRecursionDepth());
         parse_loop_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_records;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_topk;
        break;
      }

      // optional int64 topk = 4;
      case 4: {
        if (tag == 32) {
         parse_topk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &topk_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_extra_params;
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
      case 5: {
        if (tag == 42) {
         parse_extra_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.VectorQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.VectorQuery)
  return false;
#undef DO_
}

void VectorQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.VectorQuery)
  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.VectorQuery.field_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field_name(), output);
  }

  // optional float query_boost = 2;
  if (this->query_boost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->query_boost(), output);
  }

  // repeated .suvlim.grpc.VectorRowRecord records = 3;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->records(i), output);
  }

  // optional int64 topk = 4;
  if (this->topk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->topk(), output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.VectorQuery)
}

::google::protobuf::uint8* VectorQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.VectorQuery)
  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.VectorQuery.field_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field_name(), target);
  }

  // optional float query_boost = 2;
  if (this->query_boost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->query_boost(), target);
  }

  // repeated .suvlim.grpc.VectorRowRecord records = 3;
  for (unsigned int i = 0, n = this->records_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->records(i), false, target);
  }

  // optional int64 topk = 4;
  if (this->topk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->topk(), target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.VectorQuery)
  return target;
}

int VectorQuery::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.VectorQuery)
  int total_size = 0;

  // optional string field_name = 1;
  if (this->field_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_name());
  }

  // optional float query_boost = 2;
  if (this->query_boost() != 0) {
    total_size += 1 + 4;
  }

  // optional int64 topk = 4;
  if (this->topk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->topk());
  }

  // repeated .suvlim.grpc.VectorRowRecord records = 3;
  total_size += 1 * this->records_size();
  for (int i = 0; i < this->records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->records(i));
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 5;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VectorQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.VectorQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VectorQuery* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VectorQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.VectorQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.VectorQuery)
    MergeFrom(*source);
  }
}

void VectorQuery::MergeFrom(const VectorQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.VectorQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  records_.MergeFrom(from.records_);
  extra_params_.MergeFrom(from.extra_params_);
  if (from.field_name().size() > 0) {

    field_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_name_);
  }
  if (from.query_boost() != 0) {
    set_query_boost(from.query_boost());
  }
  if (from.topk() != 0) {
    set_topk(from.topk());
  }
}

void VectorQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.VectorQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorQuery::CopyFrom(const VectorQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.VectorQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorQuery::IsInitialized() const {

  return true;
}

void VectorQuery::Swap(VectorQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VectorQuery::InternalSwap(VectorQuery* other) {
  field_name_.Swap(&other->field_name_);
  std::swap(query_boost_, other->query_boost_);
  records_.UnsafeArenaSwap(&other->records_);
  std::swap(topk_, other->topk_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VectorQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VectorQuery_descriptor_;
  metadata.reflection = VectorQuery_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VectorQuery

// optional string field_name = 1;
void VectorQuery::clear_field_name() {
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& VectorQuery::field_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorQuery.field_name)
  return field_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VectorQuery::set_field_name(const ::std::string& value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.VectorQuery.field_name)
}
 void VectorQuery::set_field_name(const char* value) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.VectorQuery.field_name)
}
 void VectorQuery::set_field_name(const char* value, size_t size) {
  
  field_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.VectorQuery.field_name)
}
 ::std::string* VectorQuery::mutable_field_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.VectorQuery.field_name)
  return field_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* VectorQuery::release_field_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.VectorQuery.field_name)
  
  return field_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VectorQuery::set_allocated_field_name(::std::string* field_name) {
  if (field_name != NULL) {
    
  } else {
    
  }
  field_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.VectorQuery.field_name)
}

// optional float query_boost = 2;
void VectorQuery::clear_query_boost() {
  query_boost_ = 0;
}
 float VectorQuery::query_boost() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorQuery.query_boost)
  return query_boost_;
}
 void VectorQuery::set_query_boost(float value) {
  
  query_boost_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.VectorQuery.query_boost)
}

// repeated .suvlim.grpc.VectorRowRecord records = 3;
int VectorQuery::records_size() const {
  return records_.size();
}
void VectorQuery::clear_records() {
  records_.Clear();
}
const ::suvlim::grpc::VectorRowRecord& VectorQuery::records(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorQuery.records)
  return records_.Get(index);
}
::suvlim::grpc::VectorRowRecord* VectorQuery::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.VectorQuery.records)
  return records_.Mutable(index);
}
::suvlim::grpc::VectorRowRecord* VectorQuery::add_records() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.VectorQuery.records)
  return records_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::VectorRowRecord >*
VectorQuery::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.VectorQuery.records)
  return &records_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::VectorRowRecord >&
VectorQuery::records() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.VectorQuery.records)
  return records_;
}

// optional int64 topk = 4;
void VectorQuery::clear_topk() {
  topk_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 VectorQuery::topk() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorQuery.topk)
  return topk_;
}
 void VectorQuery::set_topk(::google::protobuf::int64 value) {
  
  topk_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.VectorQuery.topk)
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 5;
int VectorQuery::extra_params_size() const {
  return extra_params_.size();
}
void VectorQuery::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& VectorQuery::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.VectorQuery.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* VectorQuery::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.VectorQuery.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* VectorQuery::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.VectorQuery.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
VectorQuery::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.VectorQuery.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
VectorQuery::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.VectorQuery.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BooleanQuery::kOccurFieldNumber;
const int BooleanQuery::kGeneralQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BooleanQuery::BooleanQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.BooleanQuery)
}

void BooleanQuery::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BooleanQuery::BooleanQuery(const BooleanQuery& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.BooleanQuery)
}

void BooleanQuery::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  occur_ = 0;
}

BooleanQuery::~BooleanQuery() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.BooleanQuery)
  SharedDtor();
}

void BooleanQuery::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BooleanQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BooleanQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BooleanQuery_descriptor_;
}

const BooleanQuery& BooleanQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

BooleanQuery* BooleanQuery::default_instance_ = NULL;

BooleanQuery* BooleanQuery::New(::google::protobuf::Arena* arena) const {
  BooleanQuery* n = new BooleanQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BooleanQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.BooleanQuery)
  occur_ = 0;
  general_query_.Clear();
}

bool BooleanQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.BooleanQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.Occur occur = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_occur(static_cast< ::suvlim::grpc::Occur >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_general_query;
        break;
      }

      // repeated .suvlim.grpc.GeneralQuery general_query = 2;
      case 2: {
        if (tag == 18) {
         parse_general_query:
          DO_(input->IncrementRecursionDepth());
         parse_loop_general_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_general_query()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_general_query;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.BooleanQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.BooleanQuery)
  return false;
#undef DO_
}

void BooleanQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.BooleanQuery)
  // optional .suvlim.grpc.Occur occur = 1;
  if (this->occur() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->occur(), output);
  }

  // repeated .suvlim.grpc.GeneralQuery general_query = 2;
  for (unsigned int i = 0, n = this->general_query_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->general_query(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.BooleanQuery)
}

::google::protobuf::uint8* BooleanQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.BooleanQuery)
  // optional .suvlim.grpc.Occur occur = 1;
  if (this->occur() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->occur(), target);
  }

  // repeated .suvlim.grpc.GeneralQuery general_query = 2;
  for (unsigned int i = 0, n = this->general_query_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->general_query(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.BooleanQuery)
  return target;
}

int BooleanQuery::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.BooleanQuery)
  int total_size = 0;

  // optional .suvlim.grpc.Occur occur = 1;
  if (this->occur() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->occur());
  }

  // repeated .suvlim.grpc.GeneralQuery general_query = 2;
  total_size += 1 * this->general_query_size();
  for (int i = 0; i < this->general_query_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->general_query(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BooleanQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.BooleanQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BooleanQuery* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BooleanQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.BooleanQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.BooleanQuery)
    MergeFrom(*source);
  }
}

void BooleanQuery::MergeFrom(const BooleanQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.BooleanQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  general_query_.MergeFrom(from.general_query_);
  if (from.occur() != 0) {
    set_occur(from.occur());
  }
}

void BooleanQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.BooleanQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BooleanQuery::CopyFrom(const BooleanQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.BooleanQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanQuery::IsInitialized() const {

  return true;
}

void BooleanQuery::Swap(BooleanQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BooleanQuery::InternalSwap(BooleanQuery* other) {
  std::swap(occur_, other->occur_);
  general_query_.UnsafeArenaSwap(&other->general_query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BooleanQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BooleanQuery_descriptor_;
  metadata.reflection = BooleanQuery_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BooleanQuery

// optional .suvlim.grpc.Occur occur = 1;
void BooleanQuery::clear_occur() {
  occur_ = 0;
}
 ::suvlim::grpc::Occur BooleanQuery::occur() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.BooleanQuery.occur)
  return static_cast< ::suvlim::grpc::Occur >(occur_);
}
 void BooleanQuery::set_occur(::suvlim::grpc::Occur value) {
  
  occur_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.BooleanQuery.occur)
}

// repeated .suvlim.grpc.GeneralQuery general_query = 2;
int BooleanQuery::general_query_size() const {
  return general_query_.size();
}
void BooleanQuery::clear_general_query() {
  general_query_.Clear();
}
const ::suvlim::grpc::GeneralQuery& BooleanQuery::general_query(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.BooleanQuery.general_query)
  return general_query_.Get(index);
}
::suvlim::grpc::GeneralQuery* BooleanQuery::mutable_general_query(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.BooleanQuery.general_query)
  return general_query_.Mutable(index);
}
::suvlim::grpc::GeneralQuery* BooleanQuery::add_general_query() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.BooleanQuery.general_query)
  return general_query_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::GeneralQuery >*
BooleanQuery::mutable_general_query() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.BooleanQuery.general_query)
  return &general_query_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::GeneralQuery >&
BooleanQuery::general_query() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.BooleanQuery.general_query)
  return general_query_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GeneralQuery::kBooleanQueryFieldNumber;
const int GeneralQuery::kTermQueryFieldNumber;
const int GeneralQuery::kRangeQueryFieldNumber;
const int GeneralQuery::kVectorQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GeneralQuery::GeneralQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.GeneralQuery)
}

void GeneralQuery::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  GeneralQuery_default_oneof_instance_->boolean_query_ = const_cast< ::suvlim::grpc::BooleanQuery*>(&::suvlim::grpc::BooleanQuery::default_instance());
  GeneralQuery_default_oneof_instance_->term_query_ = const_cast< ::suvlim::grpc::TermQuery*>(&::suvlim::grpc::TermQuery::default_instance());
  GeneralQuery_default_oneof_instance_->range_query_ = const_cast< ::suvlim::grpc::RangeQuery*>(&::suvlim::grpc::RangeQuery::default_instance());
  GeneralQuery_default_oneof_instance_->vector_query_ = const_cast< ::suvlim::grpc::VectorQuery*>(&::suvlim::grpc::VectorQuery::default_instance());
}

GeneralQuery::GeneralQuery(const GeneralQuery& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.GeneralQuery)
}

void GeneralQuery::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_query();
}

GeneralQuery::~GeneralQuery() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.GeneralQuery)
  SharedDtor();
}

void GeneralQuery::SharedDtor() {
  if (has_query()) {
    clear_query();
  }
  if (this != default_instance_) {
  }
}

void GeneralQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GeneralQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GeneralQuery_descriptor_;
}

const GeneralQuery& GeneralQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

GeneralQuery* GeneralQuery::default_instance_ = NULL;

GeneralQuery* GeneralQuery::New(::google::protobuf::Arena* arena) const {
  GeneralQuery* n = new GeneralQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GeneralQuery::clear_query() {
// @@protoc_insertion_point(one_of_clear_start:suvlim.grpc.GeneralQuery)
  switch(query_case()) {
    case kBooleanQuery: {
      delete query_.boolean_query_;
      break;
    }
    case kTermQuery: {
      delete query_.term_query_;
      break;
    }
    case kRangeQuery: {
      delete query_.range_query_;
      break;
    }
    case kVectorQuery: {
      delete query_.vector_query_;
      break;
    }
    case QUERY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = QUERY_NOT_SET;
}


void GeneralQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.GeneralQuery)
  clear_query();
}

bool GeneralQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.GeneralQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .suvlim.grpc.BooleanQuery boolean_query = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_boolean_query()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_term_query;
        break;
      }

      // optional .suvlim.grpc.TermQuery term_query = 2;
      case 2: {
        if (tag == 18) {
         parse_term_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_term_query()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_range_query;
        break;
      }

      // optional .suvlim.grpc.RangeQuery range_query = 3;
      case 3: {
        if (tag == 26) {
         parse_range_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_range_query()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_vector_query;
        break;
      }

      // optional .suvlim.grpc.VectorQuery vector_query = 4;
      case 4: {
        if (tag == 34) {
         parse_vector_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vector_query()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.GeneralQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.GeneralQuery)
  return false;
#undef DO_
}

void GeneralQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.GeneralQuery)
  // optional .suvlim.grpc.BooleanQuery boolean_query = 1;
  if (has_boolean_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *query_.boolean_query_, output);
  }

  // optional .suvlim.grpc.TermQuery term_query = 2;
  if (has_term_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *query_.term_query_, output);
  }

  // optional .suvlim.grpc.RangeQuery range_query = 3;
  if (has_range_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *query_.range_query_, output);
  }

  // optional .suvlim.grpc.VectorQuery vector_query = 4;
  if (has_vector_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *query_.vector_query_, output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.GeneralQuery)
}

::google::protobuf::uint8* GeneralQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.GeneralQuery)
  // optional .suvlim.grpc.BooleanQuery boolean_query = 1;
  if (has_boolean_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *query_.boolean_query_, false, target);
  }

  // optional .suvlim.grpc.TermQuery term_query = 2;
  if (has_term_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *query_.term_query_, false, target);
  }

  // optional .suvlim.grpc.RangeQuery range_query = 3;
  if (has_range_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *query_.range_query_, false, target);
  }

  // optional .suvlim.grpc.VectorQuery vector_query = 4;
  if (has_vector_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *query_.vector_query_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.GeneralQuery)
  return target;
}

int GeneralQuery::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.GeneralQuery)
  int total_size = 0;

  switch (query_case()) {
    // optional .suvlim.grpc.BooleanQuery boolean_query = 1;
    case kBooleanQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *query_.boolean_query_);
      break;
    }
    // optional .suvlim.grpc.TermQuery term_query = 2;
    case kTermQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *query_.term_query_);
      break;
    }
    // optional .suvlim.grpc.RangeQuery range_query = 3;
    case kRangeQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *query_.range_query_);
      break;
    }
    // optional .suvlim.grpc.VectorQuery vector_query = 4;
    case kVectorQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *query_.vector_query_);
      break;
    }
    case QUERY_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GeneralQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.GeneralQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GeneralQuery* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GeneralQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.GeneralQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.GeneralQuery)
    MergeFrom(*source);
  }
}

void GeneralQuery::MergeFrom(const GeneralQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.GeneralQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.query_case()) {
    case kBooleanQuery: {
      mutable_boolean_query()->::suvlim::grpc::BooleanQuery::MergeFrom(from.boolean_query());
      break;
    }
    case kTermQuery: {
      mutable_term_query()->::suvlim::grpc::TermQuery::MergeFrom(from.term_query());
      break;
    }
    case kRangeQuery: {
      mutable_range_query()->::suvlim::grpc::RangeQuery::MergeFrom(from.range_query());
      break;
    }
    case kVectorQuery: {
      mutable_vector_query()->::suvlim::grpc::VectorQuery::MergeFrom(from.vector_query());
      break;
    }
    case QUERY_NOT_SET: {
      break;
    }
  }
}

void GeneralQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.GeneralQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneralQuery::CopyFrom(const GeneralQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.GeneralQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralQuery::IsInitialized() const {

  return true;
}

void GeneralQuery::Swap(GeneralQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GeneralQuery::InternalSwap(GeneralQuery* other) {
  std::swap(query_, other->query_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GeneralQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GeneralQuery_descriptor_;
  metadata.reflection = GeneralQuery_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GeneralQuery

// optional .suvlim.grpc.BooleanQuery boolean_query = 1;
bool GeneralQuery::has_boolean_query() const {
  return query_case() == kBooleanQuery;
}
void GeneralQuery::set_has_boolean_query() {
  _oneof_case_[0] = kBooleanQuery;
}
void GeneralQuery::clear_boolean_query() {
  if (has_boolean_query()) {
    delete query_.boolean_query_;
    clear_has_query();
  }
}
 const ::suvlim::grpc::BooleanQuery& GeneralQuery::boolean_query() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.GeneralQuery.boolean_query)
  return has_boolean_query()
      ? *query_.boolean_query_
      : ::suvlim::grpc::BooleanQuery::default_instance();
}
::suvlim::grpc::BooleanQuery* GeneralQuery::mutable_boolean_query() {
  if (!has_boolean_query()) {
    clear_query();
    set_has_boolean_query();
    query_.boolean_query_ = new ::suvlim::grpc::BooleanQuery;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.GeneralQuery.boolean_query)
  return query_.boolean_query_;
}
::suvlim::grpc::BooleanQuery* GeneralQuery::release_boolean_query() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.GeneralQuery.boolean_query)
  if (has_boolean_query()) {
    clear_has_query();
    ::suvlim::grpc::BooleanQuery* temp = query_.boolean_query_;
    query_.boolean_query_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GeneralQuery::set_allocated_boolean_query(::suvlim::grpc::BooleanQuery* boolean_query) {
  clear_query();
  if (boolean_query) {
    set_has_boolean_query();
    query_.boolean_query_ = boolean_query;
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.GeneralQuery.boolean_query)
}

// optional .suvlim.grpc.TermQuery term_query = 2;
bool GeneralQuery::has_term_query() const {
  return query_case() == kTermQuery;
}
void GeneralQuery::set_has_term_query() {
  _oneof_case_[0] = kTermQuery;
}
void GeneralQuery::clear_term_query() {
  if (has_term_query()) {
    delete query_.term_query_;
    clear_has_query();
  }
}
 const ::suvlim::grpc::TermQuery& GeneralQuery::term_query() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.GeneralQuery.term_query)
  return has_term_query()
      ? *query_.term_query_
      : ::suvlim::grpc::TermQuery::default_instance();
}
::suvlim::grpc::TermQuery* GeneralQuery::mutable_term_query() {
  if (!has_term_query()) {
    clear_query();
    set_has_term_query();
    query_.term_query_ = new ::suvlim::grpc::TermQuery;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.GeneralQuery.term_query)
  return query_.term_query_;
}
::suvlim::grpc::TermQuery* GeneralQuery::release_term_query() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.GeneralQuery.term_query)
  if (has_term_query()) {
    clear_has_query();
    ::suvlim::grpc::TermQuery* temp = query_.term_query_;
    query_.term_query_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GeneralQuery::set_allocated_term_query(::suvlim::grpc::TermQuery* term_query) {
  clear_query();
  if (term_query) {
    set_has_term_query();
    query_.term_query_ = term_query;
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.GeneralQuery.term_query)
}

// optional .suvlim.grpc.RangeQuery range_query = 3;
bool GeneralQuery::has_range_query() const {
  return query_case() == kRangeQuery;
}
void GeneralQuery::set_has_range_query() {
  _oneof_case_[0] = kRangeQuery;
}
void GeneralQuery::clear_range_query() {
  if (has_range_query()) {
    delete query_.range_query_;
    clear_has_query();
  }
}
 const ::suvlim::grpc::RangeQuery& GeneralQuery::range_query() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.GeneralQuery.range_query)
  return has_range_query()
      ? *query_.range_query_
      : ::suvlim::grpc::RangeQuery::default_instance();
}
::suvlim::grpc::RangeQuery* GeneralQuery::mutable_range_query() {
  if (!has_range_query()) {
    clear_query();
    set_has_range_query();
    query_.range_query_ = new ::suvlim::grpc::RangeQuery;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.GeneralQuery.range_query)
  return query_.range_query_;
}
::suvlim::grpc::RangeQuery* GeneralQuery::release_range_query() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.GeneralQuery.range_query)
  if (has_range_query()) {
    clear_has_query();
    ::suvlim::grpc::RangeQuery* temp = query_.range_query_;
    query_.range_query_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GeneralQuery::set_allocated_range_query(::suvlim::grpc::RangeQuery* range_query) {
  clear_query();
  if (range_query) {
    set_has_range_query();
    query_.range_query_ = range_query;
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.GeneralQuery.range_query)
}

// optional .suvlim.grpc.VectorQuery vector_query = 4;
bool GeneralQuery::has_vector_query() const {
  return query_case() == kVectorQuery;
}
void GeneralQuery::set_has_vector_query() {
  _oneof_case_[0] = kVectorQuery;
}
void GeneralQuery::clear_vector_query() {
  if (has_vector_query()) {
    delete query_.vector_query_;
    clear_has_query();
  }
}
 const ::suvlim::grpc::VectorQuery& GeneralQuery::vector_query() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.GeneralQuery.vector_query)
  return has_vector_query()
      ? *query_.vector_query_
      : ::suvlim::grpc::VectorQuery::default_instance();
}
::suvlim::grpc::VectorQuery* GeneralQuery::mutable_vector_query() {
  if (!has_vector_query()) {
    clear_query();
    set_has_vector_query();
    query_.vector_query_ = new ::suvlim::grpc::VectorQuery;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.GeneralQuery.vector_query)
  return query_.vector_query_;
}
::suvlim::grpc::VectorQuery* GeneralQuery::release_vector_query() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.GeneralQuery.vector_query)
  if (has_vector_query()) {
    clear_has_query();
    ::suvlim::grpc::VectorQuery* temp = query_.vector_query_;
    query_.vector_query_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GeneralQuery::set_allocated_vector_query(::suvlim::grpc::VectorQuery* vector_query) {
  clear_query();
  if (vector_query) {
    set_has_vector_query();
    query_.vector_query_ = vector_query;
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.GeneralQuery.vector_query)
}

bool GeneralQuery::has_query() const {
  return query_case() != QUERY_NOT_SET;
}
void GeneralQuery::clear_has_query() {
  _oneof_case_[0] = QUERY_NOT_SET;
}
GeneralQuery::QueryCase GeneralQuery::query_case() const {
  return GeneralQuery::QueryCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchParamPB::kCollectionNameFieldNumber;
const int SearchParamPB::kPartitionTagArrayFieldNumber;
const int SearchParamPB::kGeneralQueryFieldNumber;
const int SearchParamPB::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchParamPB::SearchParamPB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.SearchParamPB)
}

void SearchParamPB::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  general_query_ = const_cast< ::suvlim::grpc::GeneralQuery*>(&::suvlim::grpc::GeneralQuery::default_instance());
}

SearchParamPB::SearchParamPB(const SearchParamPB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.SearchParamPB)
}

void SearchParamPB::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  general_query_ = NULL;
}

SearchParamPB::~SearchParamPB() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.SearchParamPB)
  SharedDtor();
}

void SearchParamPB::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete general_query_;
  }
}

void SearchParamPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchParamPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SearchParamPB_descriptor_;
}

const SearchParamPB& SearchParamPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

SearchParamPB* SearchParamPB::default_instance_ = NULL;

SearchParamPB* SearchParamPB::New(::google::protobuf::Arena* arena) const {
  SearchParamPB* n = new SearchParamPB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchParamPB::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.SearchParamPB)
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && general_query_ != NULL) delete general_query_;
  general_query_ = NULL;
  partition_tag_array_.Clear();
  extra_params_.Clear();
}

bool SearchParamPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.SearchParamPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.SearchParamPB.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_partition_tag_array;
        break;
      }

      // repeated string partition_tag_array = 2;
      case 2: {
        if (tag == 18) {
         parse_partition_tag_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_partition_tag_array()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partition_tag_array(this->partition_tag_array_size() - 1).data(),
            this->partition_tag_array(this->partition_tag_array_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.SearchParamPB.partition_tag_array"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_partition_tag_array;
        if (input->ExpectTag(26)) goto parse_general_query;
        break;
      }

      // optional .suvlim.grpc.GeneralQuery general_query = 3;
      case 3: {
        if (tag == 26) {
         parse_general_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_general_query()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_extra_params;
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
      case 4: {
        if (tag == 34) {
         parse_extra_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.SearchParamPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.SearchParamPB)
  return false;
#undef DO_
}

void SearchParamPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.SearchParamPB)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchParamPB.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // repeated string partition_tag_array = 2;
  for (int i = 0; i < this->partition_tag_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag_array(i).data(), this->partition_tag_array(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchParamPB.partition_tag_array");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->partition_tag_array(i), output);
  }

  // optional .suvlim.grpc.GeneralQuery general_query = 3;
  if (this->has_general_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->general_query_, output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.SearchParamPB)
}

::google::protobuf::uint8* SearchParamPB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.SearchParamPB)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchParamPB.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // repeated string partition_tag_array = 2;
  for (int i = 0; i < this->partition_tag_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag_array(i).data(), this->partition_tag_array(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchParamPB.partition_tag_array");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->partition_tag_array(i), target);
  }

  // optional .suvlim.grpc.GeneralQuery general_query = 3;
  if (this->has_general_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->general_query_, false, target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.SearchParamPB)
  return target;
}

int SearchParamPB::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.SearchParamPB)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional .suvlim.grpc.GeneralQuery general_query = 3;
  if (this->has_general_query()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->general_query_);
  }

  // repeated string partition_tag_array = 2;
  total_size += 1 * this->partition_tag_array_size();
  for (int i = 0; i < this->partition_tag_array_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->partition_tag_array(i));
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 4;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchParamPB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.SearchParamPB)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SearchParamPB* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchParamPB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.SearchParamPB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.SearchParamPB)
    MergeFrom(*source);
  }
}

void SearchParamPB::MergeFrom(const SearchParamPB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.SearchParamPB)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  partition_tag_array_.MergeFrom(from.partition_tag_array_);
  extra_params_.MergeFrom(from.extra_params_);
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.has_general_query()) {
    mutable_general_query()->::suvlim::grpc::GeneralQuery::MergeFrom(from.general_query());
  }
}

void SearchParamPB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.SearchParamPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchParamPB::CopyFrom(const SearchParamPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.SearchParamPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchParamPB::IsInitialized() const {

  return true;
}

void SearchParamPB::Swap(SearchParamPB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchParamPB::InternalSwap(SearchParamPB* other) {
  collection_name_.Swap(&other->collection_name_);
  partition_tag_array_.UnsafeArenaSwap(&other->partition_tag_array_);
  std::swap(general_query_, other->general_query_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchParamPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SearchParamPB_descriptor_;
  metadata.reflection = SearchParamPB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchParamPB

// optional string collection_name = 1;
void SearchParamPB::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SearchParamPB::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchParamPB.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SearchParamPB::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.SearchParamPB.collection_name)
}
 void SearchParamPB::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.SearchParamPB.collection_name)
}
 void SearchParamPB::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.SearchParamPB.collection_name)
}
 ::std::string* SearchParamPB::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchParamPB.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SearchParamPB::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.SearchParamPB.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SearchParamPB::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.SearchParamPB.collection_name)
}

// repeated string partition_tag_array = 2;
int SearchParamPB::partition_tag_array_size() const {
  return partition_tag_array_.size();
}
void SearchParamPB::clear_partition_tag_array() {
  partition_tag_array_.Clear();
}
 const ::std::string& SearchParamPB::partition_tag_array(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchParamPB.partition_tag_array)
  return partition_tag_array_.Get(index);
}
 ::std::string* SearchParamPB::mutable_partition_tag_array(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchParamPB.partition_tag_array)
  return partition_tag_array_.Mutable(index);
}
 void SearchParamPB::set_partition_tag_array(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:suvlim.grpc.SearchParamPB.partition_tag_array)
  partition_tag_array_.Mutable(index)->assign(value);
}
 void SearchParamPB::set_partition_tag_array(int index, const char* value) {
  partition_tag_array_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.SearchParamPB.partition_tag_array)
}
 void SearchParamPB::set_partition_tag_array(int index, const char* value, size_t size) {
  partition_tag_array_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.SearchParamPB.partition_tag_array)
}
 ::std::string* SearchParamPB::add_partition_tag_array() {
  // @@protoc_insertion_point(field_add_mutable:suvlim.grpc.SearchParamPB.partition_tag_array)
  return partition_tag_array_.Add();
}
 void SearchParamPB::add_partition_tag_array(const ::std::string& value) {
  partition_tag_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.SearchParamPB.partition_tag_array)
}
 void SearchParamPB::add_partition_tag_array(const char* value) {
  partition_tag_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:suvlim.grpc.SearchParamPB.partition_tag_array)
}
 void SearchParamPB::add_partition_tag_array(const char* value, size_t size) {
  partition_tag_array_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:suvlim.grpc.SearchParamPB.partition_tag_array)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchParamPB::partition_tag_array() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.SearchParamPB.partition_tag_array)
  return partition_tag_array_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchParamPB::mutable_partition_tag_array() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.SearchParamPB.partition_tag_array)
  return &partition_tag_array_;
}

// optional .suvlim.grpc.GeneralQuery general_query = 3;
bool SearchParamPB::has_general_query() const {
  return !_is_default_instance_ && general_query_ != NULL;
}
void SearchParamPB::clear_general_query() {
  if (GetArenaNoVirtual() == NULL && general_query_ != NULL) delete general_query_;
  general_query_ = NULL;
}
const ::suvlim::grpc::GeneralQuery& SearchParamPB::general_query() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchParamPB.general_query)
  return general_query_ != NULL ? *general_query_ : *default_instance_->general_query_;
}
::suvlim::grpc::GeneralQuery* SearchParamPB::mutable_general_query() {
  
  if (general_query_ == NULL) {
    general_query_ = new ::suvlim::grpc::GeneralQuery;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchParamPB.general_query)
  return general_query_;
}
::suvlim::grpc::GeneralQuery* SearchParamPB::release_general_query() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.SearchParamPB.general_query)
  
  ::suvlim::grpc::GeneralQuery* temp = general_query_;
  general_query_ = NULL;
  return temp;
}
void SearchParamPB::set_allocated_general_query(::suvlim::grpc::GeneralQuery* general_query) {
  delete general_query_;
  general_query_ = general_query;
  if (general_query) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.SearchParamPB.general_query)
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 4;
int SearchParamPB::extra_params_size() const {
  return extra_params_.size();
}
void SearchParamPB::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& SearchParamPB::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchParamPB.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* SearchParamPB::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchParamPB.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* SearchParamPB::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.SearchParamPB.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
SearchParamPB::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.SearchParamPB.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
SearchParamPB::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.SearchParamPB.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertOrDeleteMsg::kCollectionNameFieldNumber;
const int InsertOrDeleteMsg::kRowsDataFieldNumber;
const int InsertOrDeleteMsg::kUidFieldNumber;
const int InsertOrDeleteMsg::kPartitionTagFieldNumber;
const int InsertOrDeleteMsg::kTimestampFieldNumber;
const int InsertOrDeleteMsg::kSegmentIdFieldNumber;
const int InsertOrDeleteMsg::kChannelIdFieldNumber;
const int InsertOrDeleteMsg::kOpFieldNumber;
const int InsertOrDeleteMsg::kClientIdFieldNumber;
const int InsertOrDeleteMsg::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertOrDeleteMsg::InsertOrDeleteMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.InsertOrDeleteMsg)
}

void InsertOrDeleteMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  rows_data_ = const_cast< ::suvlim::grpc::RowData*>(&::suvlim::grpc::RowData::default_instance());
}

InsertOrDeleteMsg::InsertOrDeleteMsg(const InsertOrDeleteMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.InsertOrDeleteMsg)
}

void InsertOrDeleteMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rows_data_ = NULL;
  uid_ = GOOGLE_LONGLONG(0);
  partition_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
  segment_id_ = GOOGLE_LONGLONG(0);
  channel_id_ = GOOGLE_LONGLONG(0);
  op_ = 0;
  client_id_ = GOOGLE_LONGLONG(0);
}

InsertOrDeleteMsg::~InsertOrDeleteMsg() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.InsertOrDeleteMsg)
  SharedDtor();
}

void InsertOrDeleteMsg::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partition_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete rows_data_;
  }
}

void InsertOrDeleteMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InsertOrDeleteMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InsertOrDeleteMsg_descriptor_;
}

const InsertOrDeleteMsg& InsertOrDeleteMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

InsertOrDeleteMsg* InsertOrDeleteMsg::default_instance_ = NULL;

InsertOrDeleteMsg* InsertOrDeleteMsg::New(::google::protobuf::Arena* arena) const {
  InsertOrDeleteMsg* n = new InsertOrDeleteMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InsertOrDeleteMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.InsertOrDeleteMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InsertOrDeleteMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InsertOrDeleteMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(timestamp_, channel_id_);
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && rows_data_ != NULL) delete rows_data_;
  rows_data_ = NULL;
  uid_ = GOOGLE_LONGLONG(0);
  partition_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0;
  client_id_ = GOOGLE_LONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

  extra_params_.Clear();
}

bool InsertOrDeleteMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.InsertOrDeleteMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.InsertOrDeleteMsg.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rows_data;
        break;
      }

      // optional .suvlim.grpc.RowData rows_data = 2;
      case 2: {
        if (tag == 18) {
         parse_rows_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rows_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uid;
        break;
      }

      // optional int64 uid = 3;
      case 3: {
        if (tag == 24) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_partition_tag;
        break;
      }

      // optional string partition_tag = 4;
      case 4: {
        if (tag == 34) {
         parse_partition_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partition_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partition_tag().data(), this->partition_tag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.InsertOrDeleteMsg.partition_tag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_timestamp;
        break;
      }

      // optional int64 timestamp = 5;
      case 5: {
        if (tag == 40) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_segment_id;
        break;
      }

      // optional int64 segment_id = 6;
      case 6: {
        if (tag == 48) {
         parse_segment_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &segment_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_channel_id;
        break;
      }

      // optional int64 channel_id = 7;
      case 7: {
        if (tag == 56) {
         parse_channel_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &channel_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_op;
        break;
      }

      // optional .suvlim.grpc.OpType op = 8;
      case 8: {
        if (tag == 64) {
         parse_op:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::suvlim::grpc::OpType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_client_id;
        break;
      }

      // optional int64 client_id = 9;
      case 9: {
        if (tag == 72) {
         parse_client_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_extra_params;
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 10;
      case 10: {
        if (tag == 82) {
         parse_extra_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.InsertOrDeleteMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.InsertOrDeleteMsg)
  return false;
#undef DO_
}

void InsertOrDeleteMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.InsertOrDeleteMsg)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.InsertOrDeleteMsg.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // optional .suvlim.grpc.RowData rows_data = 2;
  if (this->has_rows_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rows_data_, output);
  }

  // optional int64 uid = 3;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uid(), output);
  }

  // optional string partition_tag = 4;
  if (this->partition_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag().data(), this->partition_tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.InsertOrDeleteMsg.partition_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->partition_tag(), output);
  }

  // optional int64 timestamp = 5;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->timestamp(), output);
  }

  // optional int64 segment_id = 6;
  if (this->segment_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->segment_id(), output);
  }

  // optional int64 channel_id = 7;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->channel_id(), output);
  }

  // optional .suvlim.grpc.OpType op = 8;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->op(), output);
  }

  // optional int64 client_id = 9;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->client_id(), output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 10;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.InsertOrDeleteMsg)
}

::google::protobuf::uint8* InsertOrDeleteMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.InsertOrDeleteMsg)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.InsertOrDeleteMsg.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // optional .suvlim.grpc.RowData rows_data = 2;
  if (this->has_rows_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rows_data_, false, target);
  }

  // optional int64 uid = 3;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uid(), target);
  }

  // optional string partition_tag = 4;
  if (this->partition_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag().data(), this->partition_tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.InsertOrDeleteMsg.partition_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->partition_tag(), target);
  }

  // optional int64 timestamp = 5;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->timestamp(), target);
  }

  // optional int64 segment_id = 6;
  if (this->segment_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->segment_id(), target);
  }

  // optional int64 channel_id = 7;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->channel_id(), target);
  }

  // optional .suvlim.grpc.OpType op = 8;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->op(), target);
  }

  // optional int64 client_id = 9;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->client_id(), target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 10;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.InsertOrDeleteMsg)
  return target;
}

int InsertOrDeleteMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.InsertOrDeleteMsg)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional .suvlim.grpc.RowData rows_data = 2;
  if (this->has_rows_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rows_data_);
  }

  // optional int64 uid = 3;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  // optional string partition_tag = 4;
  if (this->partition_tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->partition_tag());
  }

  // optional int64 timestamp = 5;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // optional int64 segment_id = 6;
  if (this->segment_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->segment_id());
  }

  // optional int64 channel_id = 7;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->channel_id());
  }

  // optional .suvlim.grpc.OpType op = 8;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  // optional int64 client_id = 9;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->client_id());
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 10;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InsertOrDeleteMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.InsertOrDeleteMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InsertOrDeleteMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertOrDeleteMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.InsertOrDeleteMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.InsertOrDeleteMsg)
    MergeFrom(*source);
  }
}

void InsertOrDeleteMsg::MergeFrom(const InsertOrDeleteMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.InsertOrDeleteMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  extra_params_.MergeFrom(from.extra_params_);
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.has_rows_data()) {
    mutable_rows_data()->::suvlim::grpc::RowData::MergeFrom(from.rows_data());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.partition_tag().size() > 0) {

    partition_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partition_tag_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.segment_id() != 0) {
    set_segment_id(from.segment_id());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
}

void InsertOrDeleteMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.InsertOrDeleteMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertOrDeleteMsg::CopyFrom(const InsertOrDeleteMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.InsertOrDeleteMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertOrDeleteMsg::IsInitialized() const {

  return true;
}

void InsertOrDeleteMsg::Swap(InsertOrDeleteMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertOrDeleteMsg::InternalSwap(InsertOrDeleteMsg* other) {
  collection_name_.Swap(&other->collection_name_);
  std::swap(rows_data_, other->rows_data_);
  std::swap(uid_, other->uid_);
  partition_tag_.Swap(&other->partition_tag_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(segment_id_, other->segment_id_);
  std::swap(channel_id_, other->channel_id_);
  std::swap(op_, other->op_);
  std::swap(client_id_, other->client_id_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InsertOrDeleteMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InsertOrDeleteMsg_descriptor_;
  metadata.reflection = InsertOrDeleteMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InsertOrDeleteMsg

// optional string collection_name = 1;
void InsertOrDeleteMsg::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InsertOrDeleteMsg::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertOrDeleteMsg.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertOrDeleteMsg::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.InsertOrDeleteMsg.collection_name)
}
 void InsertOrDeleteMsg::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.InsertOrDeleteMsg.collection_name)
}
 void InsertOrDeleteMsg::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.InsertOrDeleteMsg.collection_name)
}
 ::std::string* InsertOrDeleteMsg::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.InsertOrDeleteMsg.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InsertOrDeleteMsg::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.InsertOrDeleteMsg.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertOrDeleteMsg::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.InsertOrDeleteMsg.collection_name)
}

// optional .suvlim.grpc.RowData rows_data = 2;
bool InsertOrDeleteMsg::has_rows_data() const {
  return !_is_default_instance_ && rows_data_ != NULL;
}
void InsertOrDeleteMsg::clear_rows_data() {
  if (GetArenaNoVirtual() == NULL && rows_data_ != NULL) delete rows_data_;
  rows_data_ = NULL;
}
const ::suvlim::grpc::RowData& InsertOrDeleteMsg::rows_data() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertOrDeleteMsg.rows_data)
  return rows_data_ != NULL ? *rows_data_ : *default_instance_->rows_data_;
}
::suvlim::grpc::RowData* InsertOrDeleteMsg::mutable_rows_data() {
  
  if (rows_data_ == NULL) {
    rows_data_ = new ::suvlim::grpc::RowData;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.InsertOrDeleteMsg.rows_data)
  return rows_data_;
}
::suvlim::grpc::RowData* InsertOrDeleteMsg::release_rows_data() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.InsertOrDeleteMsg.rows_data)
  
  ::suvlim::grpc::RowData* temp = rows_data_;
  rows_data_ = NULL;
  return temp;
}
void InsertOrDeleteMsg::set_allocated_rows_data(::suvlim::grpc::RowData* rows_data) {
  delete rows_data_;
  rows_data_ = rows_data;
  if (rows_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.InsertOrDeleteMsg.rows_data)
}

// optional int64 uid = 3;
void InsertOrDeleteMsg::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 InsertOrDeleteMsg::uid() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertOrDeleteMsg.uid)
  return uid_;
}
 void InsertOrDeleteMsg::set_uid(::google::protobuf::int64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.InsertOrDeleteMsg.uid)
}

// optional string partition_tag = 4;
void InsertOrDeleteMsg::clear_partition_tag() {
  partition_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InsertOrDeleteMsg::partition_tag() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertOrDeleteMsg.partition_tag)
  return partition_tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertOrDeleteMsg::set_partition_tag(const ::std::string& value) {
  
  partition_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.InsertOrDeleteMsg.partition_tag)
}
 void InsertOrDeleteMsg::set_partition_tag(const char* value) {
  
  partition_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.InsertOrDeleteMsg.partition_tag)
}
 void InsertOrDeleteMsg::set_partition_tag(const char* value, size_t size) {
  
  partition_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.InsertOrDeleteMsg.partition_tag)
}
 ::std::string* InsertOrDeleteMsg::mutable_partition_tag() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.InsertOrDeleteMsg.partition_tag)
  return partition_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InsertOrDeleteMsg::release_partition_tag() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.InsertOrDeleteMsg.partition_tag)
  
  return partition_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertOrDeleteMsg::set_allocated_partition_tag(::std::string* partition_tag) {
  if (partition_tag != NULL) {
    
  } else {
    
  }
  partition_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), partition_tag);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.InsertOrDeleteMsg.partition_tag)
}

// optional int64 timestamp = 5;
void InsertOrDeleteMsg::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 InsertOrDeleteMsg::timestamp() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertOrDeleteMsg.timestamp)
  return timestamp_;
}
 void InsertOrDeleteMsg::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.InsertOrDeleteMsg.timestamp)
}

// optional int64 segment_id = 6;
void InsertOrDeleteMsg::clear_segment_id() {
  segment_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 InsertOrDeleteMsg::segment_id() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertOrDeleteMsg.segment_id)
  return segment_id_;
}
 void InsertOrDeleteMsg::set_segment_id(::google::protobuf::int64 value) {
  
  segment_id_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.InsertOrDeleteMsg.segment_id)
}

// optional int64 channel_id = 7;
void InsertOrDeleteMsg::clear_channel_id() {
  channel_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 InsertOrDeleteMsg::channel_id() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertOrDeleteMsg.channel_id)
  return channel_id_;
}
 void InsertOrDeleteMsg::set_channel_id(::google::protobuf::int64 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.InsertOrDeleteMsg.channel_id)
}

// optional .suvlim.grpc.OpType op = 8;
void InsertOrDeleteMsg::clear_op() {
  op_ = 0;
}
 ::suvlim::grpc::OpType InsertOrDeleteMsg::op() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertOrDeleteMsg.op)
  return static_cast< ::suvlim::grpc::OpType >(op_);
}
 void InsertOrDeleteMsg::set_op(::suvlim::grpc::OpType value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.InsertOrDeleteMsg.op)
}

// optional int64 client_id = 9;
void InsertOrDeleteMsg::clear_client_id() {
  client_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 InsertOrDeleteMsg::client_id() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertOrDeleteMsg.client_id)
  return client_id_;
}
 void InsertOrDeleteMsg::set_client_id(::google::protobuf::int64 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.InsertOrDeleteMsg.client_id)
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 10;
int InsertOrDeleteMsg::extra_params_size() const {
  return extra_params_.size();
}
void InsertOrDeleteMsg::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& InsertOrDeleteMsg::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.InsertOrDeleteMsg.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* InsertOrDeleteMsg::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.InsertOrDeleteMsg.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* InsertOrDeleteMsg::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.InsertOrDeleteMsg.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
InsertOrDeleteMsg::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.InsertOrDeleteMsg.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
InsertOrDeleteMsg::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.InsertOrDeleteMsg.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchMsg::kCollectionNameFieldNumber;
const int SearchMsg::kRecordsFieldNumber;
const int SearchMsg::kPartitionTagFieldNumber;
const int SearchMsg::kUidFieldNumber;
const int SearchMsg::kTimestampFieldNumber;
const int SearchMsg::kClientIdFieldNumber;
const int SearchMsg::kExtraParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchMsg::SearchMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.SearchMsg)
}

void SearchMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  records_ = const_cast< ::suvlim::grpc::VectorRowRecord*>(&::suvlim::grpc::VectorRowRecord::default_instance());
}

SearchMsg::SearchMsg(const SearchMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.SearchMsg)
}

void SearchMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  records_ = NULL;
  partition_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = GOOGLE_LONGLONG(0);
  timestamp_ = GOOGLE_LONGLONG(0);
  client_id_ = GOOGLE_LONGLONG(0);
}

SearchMsg::~SearchMsg() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.SearchMsg)
  SharedDtor();
}

void SearchMsg::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partition_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete records_;
  }
}

void SearchMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SearchMsg_descriptor_;
}

const SearchMsg& SearchMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

SearchMsg* SearchMsg::default_instance_ = NULL;

SearchMsg* SearchMsg::New(::google::protobuf::Arena* arena) const {
  SearchMsg* n = new SearchMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.SearchMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SearchMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SearchMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uid_, client_id_);
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && records_ != NULL) delete records_;
  records_ = NULL;
  partition_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  extra_params_.Clear();
}

bool SearchMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.SearchMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collection_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.SearchMsg.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_records;
        break;
      }

      // optional .suvlim.grpc.VectorRowRecord records = 2;
      case 2: {
        if (tag == 18) {
         parse_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_partition_tag;
        break;
      }

      // optional string partition_tag = 3;
      case 3: {
        if (tag == 26) {
         parse_partition_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partition_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partition_tag().data(), this->partition_tag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "suvlim.grpc.SearchMsg.partition_tag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uid;
        break;
      }

      // optional int64 uid = 4;
      case 4: {
        if (tag == 32) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_timestamp;
        break;
      }

      // optional int64 timestamp = 5;
      case 5: {
        if (tag == 40) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_client_id;
        break;
      }

      // optional int64 client_id = 6;
      case 6: {
        if (tag == 48) {
         parse_client_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_extra_params;
        break;
      }

      // repeated .suvlim.grpc.KeyValuePair extra_params = 7;
      case 7: {
        if (tag == 58) {
         parse_extra_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_extra_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.SearchMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.SearchMsg)
  return false;
#undef DO_
}

void SearchMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.SearchMsg)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchMsg.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collection_name(), output);
  }

  // optional .suvlim.grpc.VectorRowRecord records = 2;
  if (this->has_records()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->records_, output);
  }

  // optional string partition_tag = 3;
  if (this->partition_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag().data(), this->partition_tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchMsg.partition_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->partition_tag(), output);
  }

  // optional int64 uid = 4;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uid(), output);
  }

  // optional int64 timestamp = 5;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->timestamp(), output);
  }

  // optional int64 client_id = 6;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->client_id(), output);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 7;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->extra_params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.SearchMsg)
}

::google::protobuf::uint8* SearchMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.SearchMsg)
  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchMsg.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collection_name(), target);
  }

  // optional .suvlim.grpc.VectorRowRecord records = 2;
  if (this->has_records()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->records_, false, target);
  }

  // optional string partition_tag = 3;
  if (this->partition_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition_tag().data(), this->partition_tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "suvlim.grpc.SearchMsg.partition_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->partition_tag(), target);
  }

  // optional int64 uid = 4;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uid(), target);
  }

  // optional int64 timestamp = 5;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->timestamp(), target);
  }

  // optional int64 client_id = 6;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->client_id(), target);
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 7;
  for (unsigned int i = 0, n = this->extra_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->extra_params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.SearchMsg)
  return target;
}

int SearchMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.SearchMsg)
  int total_size = 0;

  // optional string collection_name = 1;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional .suvlim.grpc.VectorRowRecord records = 2;
  if (this->has_records()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->records_);
  }

  // optional string partition_tag = 3;
  if (this->partition_tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->partition_tag());
  }

  // optional int64 uid = 4;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  // optional int64 timestamp = 5;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // optional int64 client_id = 6;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->client_id());
  }

  // repeated .suvlim.grpc.KeyValuePair extra_params = 7;
  total_size += 1 * this->extra_params_size();
  for (int i = 0; i < this->extra_params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_params(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.SearchMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SearchMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.SearchMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.SearchMsg)
    MergeFrom(*source);
  }
}

void SearchMsg::MergeFrom(const SearchMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.SearchMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  extra_params_.MergeFrom(from.extra_params_);
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.has_records()) {
    mutable_records()->::suvlim::grpc::VectorRowRecord::MergeFrom(from.records());
  }
  if (from.partition_tag().size() > 0) {

    partition_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partition_tag_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
}

void SearchMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.SearchMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchMsg::CopyFrom(const SearchMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.SearchMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchMsg::IsInitialized() const {

  return true;
}

void SearchMsg::Swap(SearchMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchMsg::InternalSwap(SearchMsg* other) {
  collection_name_.Swap(&other->collection_name_);
  std::swap(records_, other->records_);
  partition_tag_.Swap(&other->partition_tag_);
  std::swap(uid_, other->uid_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(client_id_, other->client_id_);
  extra_params_.UnsafeArenaSwap(&other->extra_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SearchMsg_descriptor_;
  metadata.reflection = SearchMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchMsg

// optional string collection_name = 1;
void SearchMsg::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SearchMsg::collection_name() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchMsg.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SearchMsg::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.SearchMsg.collection_name)
}
 void SearchMsg::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.SearchMsg.collection_name)
}
 void SearchMsg::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.SearchMsg.collection_name)
}
 ::std::string* SearchMsg::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchMsg.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SearchMsg::release_collection_name() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.SearchMsg.collection_name)
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SearchMsg::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.SearchMsg.collection_name)
}

// optional .suvlim.grpc.VectorRowRecord records = 2;
bool SearchMsg::has_records() const {
  return !_is_default_instance_ && records_ != NULL;
}
void SearchMsg::clear_records() {
  if (GetArenaNoVirtual() == NULL && records_ != NULL) delete records_;
  records_ = NULL;
}
const ::suvlim::grpc::VectorRowRecord& SearchMsg::records() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchMsg.records)
  return records_ != NULL ? *records_ : *default_instance_->records_;
}
::suvlim::grpc::VectorRowRecord* SearchMsg::mutable_records() {
  
  if (records_ == NULL) {
    records_ = new ::suvlim::grpc::VectorRowRecord;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchMsg.records)
  return records_;
}
::suvlim::grpc::VectorRowRecord* SearchMsg::release_records() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.SearchMsg.records)
  
  ::suvlim::grpc::VectorRowRecord* temp = records_;
  records_ = NULL;
  return temp;
}
void SearchMsg::set_allocated_records(::suvlim::grpc::VectorRowRecord* records) {
  delete records_;
  records_ = records;
  if (records) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.SearchMsg.records)
}

// optional string partition_tag = 3;
void SearchMsg::clear_partition_tag() {
  partition_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SearchMsg::partition_tag() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchMsg.partition_tag)
  return partition_tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SearchMsg::set_partition_tag(const ::std::string& value) {
  
  partition_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.SearchMsg.partition_tag)
}
 void SearchMsg::set_partition_tag(const char* value) {
  
  partition_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:suvlim.grpc.SearchMsg.partition_tag)
}
 void SearchMsg::set_partition_tag(const char* value, size_t size) {
  
  partition_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:suvlim.grpc.SearchMsg.partition_tag)
}
 ::std::string* SearchMsg::mutable_partition_tag() {
  
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchMsg.partition_tag)
  return partition_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SearchMsg::release_partition_tag() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.SearchMsg.partition_tag)
  
  return partition_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SearchMsg::set_allocated_partition_tag(::std::string* partition_tag) {
  if (partition_tag != NULL) {
    
  } else {
    
  }
  partition_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), partition_tag);
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.SearchMsg.partition_tag)
}

// optional int64 uid = 4;
void SearchMsg::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 SearchMsg::uid() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchMsg.uid)
  return uid_;
}
 void SearchMsg::set_uid(::google::protobuf::int64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.SearchMsg.uid)
}

// optional int64 timestamp = 5;
void SearchMsg::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 SearchMsg::timestamp() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchMsg.timestamp)
  return timestamp_;
}
 void SearchMsg::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.SearchMsg.timestamp)
}

// optional int64 client_id = 6;
void SearchMsg::clear_client_id() {
  client_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 SearchMsg::client_id() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchMsg.client_id)
  return client_id_;
}
 void SearchMsg::set_client_id(::google::protobuf::int64 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.SearchMsg.client_id)
}

// repeated .suvlim.grpc.KeyValuePair extra_params = 7;
int SearchMsg::extra_params_size() const {
  return extra_params_.size();
}
void SearchMsg::clear_extra_params() {
  extra_params_.Clear();
}
const ::suvlim::grpc::KeyValuePair& SearchMsg::extra_params(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SearchMsg.extra_params)
  return extra_params_.Get(index);
}
::suvlim::grpc::KeyValuePair* SearchMsg::mutable_extra_params(int index) {
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.SearchMsg.extra_params)
  return extra_params_.Mutable(index);
}
::suvlim::grpc::KeyValuePair* SearchMsg::add_extra_params() {
  // @@protoc_insertion_point(field_add:suvlim.grpc.SearchMsg.extra_params)
  return extra_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >*
SearchMsg::mutable_extra_params() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.SearchMsg.extra_params)
  return &extra_params_;
}
const ::google::protobuf::RepeatedPtrField< ::suvlim::grpc::KeyValuePair >&
SearchMsg::extra_params() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.SearchMsg.extra_params)
  return extra_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeSyncMsg::kClientIdFieldNumber;
const int TimeSyncMsg::kTimestampFieldNumber;
const int TimeSyncMsg::kMsgTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeSyncMsg::TimeSyncMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.TimeSyncMsg)
}

void TimeSyncMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TimeSyncMsg::TimeSyncMsg(const TimeSyncMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.TimeSyncMsg)
}

void TimeSyncMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clientid_ = GOOGLE_LONGLONG(0);
  timestamp_ = GOOGLE_LONGLONG(0);
  msgtype_ = 0;
}

TimeSyncMsg::~TimeSyncMsg() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.TimeSyncMsg)
  SharedDtor();
}

void TimeSyncMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TimeSyncMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeSyncMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TimeSyncMsg_descriptor_;
}

const TimeSyncMsg& TimeSyncMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

TimeSyncMsg* TimeSyncMsg::default_instance_ = NULL;

TimeSyncMsg* TimeSyncMsg::New(::google::protobuf::Arena* arena) const {
  TimeSyncMsg* n = new TimeSyncMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeSyncMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.TimeSyncMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TimeSyncMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TimeSyncMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(clientid_, msgtype_);

#undef ZR_HELPER_
#undef ZR_

}

bool TimeSyncMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.TimeSyncMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ClientId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &clientid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Timestamp;
        break;
      }

      // optional int64 Timestamp = 2;
      case 2: {
        if (tag == 16) {
         parse_Timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MsgType;
        break;
      }

      // optional .suvlim.grpc.OpType MsgType = 3;
      case 3: {
        if (tag == 24) {
         parse_MsgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgtype(static_cast< ::suvlim::grpc::OpType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.TimeSyncMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.TimeSyncMsg)
  return false;
#undef DO_
}

void TimeSyncMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.TimeSyncMsg)
  // optional int64 ClientId = 1;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->clientid(), output);
  }

  // optional int64 Timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // optional .suvlim.grpc.OpType MsgType = 3;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->msgtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.TimeSyncMsg)
}

::google::protobuf::uint8* TimeSyncMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.TimeSyncMsg)
  // optional int64 ClientId = 1;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->clientid(), target);
  }

  // optional int64 Timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // optional .suvlim.grpc.OpType MsgType = 3;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->msgtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.TimeSyncMsg)
  return target;
}

int TimeSyncMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.TimeSyncMsg)
  int total_size = 0;

  // optional int64 ClientId = 1;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->clientid());
  }

  // optional int64 Timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // optional .suvlim.grpc.OpType MsgType = 3;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeSyncMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.TimeSyncMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TimeSyncMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeSyncMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.TimeSyncMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.TimeSyncMsg)
    MergeFrom(*source);
  }
}

void TimeSyncMsg::MergeFrom(const TimeSyncMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.TimeSyncMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
}

void TimeSyncMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.TimeSyncMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeSyncMsg::CopyFrom(const TimeSyncMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.TimeSyncMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeSyncMsg::IsInitialized() const {

  return true;
}

void TimeSyncMsg::Swap(TimeSyncMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeSyncMsg::InternalSwap(TimeSyncMsg* other) {
  std::swap(clientid_, other->clientid_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(msgtype_, other->msgtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeSyncMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TimeSyncMsg_descriptor_;
  metadata.reflection = TimeSyncMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimeSyncMsg

// optional int64 ClientId = 1;
void TimeSyncMsg::clear_clientid() {
  clientid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TimeSyncMsg::clientid() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.TimeSyncMsg.ClientId)
  return clientid_;
}
 void TimeSyncMsg::set_clientid(::google::protobuf::int64 value) {
  
  clientid_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.TimeSyncMsg.ClientId)
}

// optional int64 Timestamp = 2;
void TimeSyncMsg::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TimeSyncMsg::timestamp() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.TimeSyncMsg.Timestamp)
  return timestamp_;
}
 void TimeSyncMsg::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.TimeSyncMsg.Timestamp)
}

// optional .suvlim.grpc.OpType MsgType = 3;
void TimeSyncMsg::clear_msgtype() {
  msgtype_ = 0;
}
 ::suvlim::grpc::OpType TimeSyncMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.TimeSyncMsg.MsgType)
  return static_cast< ::suvlim::grpc::OpType >(msgtype_);
}
 void TimeSyncMsg::set_msgtype(::suvlim::grpc::OpType value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.TimeSyncMsg.MsgType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SegmentRecord::kUidFieldNumber;
const int SegmentRecord::kSegmentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SegmentRecord::SegmentRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.SegmentRecord)
}

void SegmentRecord::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SegmentRecord::SegmentRecord(const SegmentRecord& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.SegmentRecord)
}

void SegmentRecord::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  uid_ = GOOGLE_LONGLONG(0);
}

SegmentRecord::~SegmentRecord() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.SegmentRecord)
  SharedDtor();
}

void SegmentRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SegmentRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SegmentRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SegmentRecord_descriptor_;
}

const SegmentRecord& SegmentRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

SegmentRecord* SegmentRecord::default_instance_ = NULL;

SegmentRecord* SegmentRecord::New(::google::protobuf::Arena* arena) const {
  SegmentRecord* n = new SegmentRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SegmentRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.SegmentRecord)
  uid_ = GOOGLE_LONGLONG(0);
  segment_id_.Clear();
}

bool SegmentRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.SegmentRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_segment_id;
        break;
      }

      // repeated int64 segment_id = 2;
      case 2: {
        if (tag == 18) {
         parse_segment_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_segment_id())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18, input, this->mutable_segment_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.SegmentRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.SegmentRecord)
  return false;
#undef DO_
}

void SegmentRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.SegmentRecord)
  // optional int64 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uid(), output);
  }

  // repeated int64 segment_id = 2;
  if (this->segment_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_segment_id_cached_byte_size_);
  }
  for (int i = 0; i < this->segment_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->segment_id(i), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.SegmentRecord)
}

::google::protobuf::uint8* SegmentRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.SegmentRecord)
  // optional int64 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uid(), target);
  }

  // repeated int64 segment_id = 2;
  if (this->segment_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _segment_id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->segment_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->segment_id(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.SegmentRecord)
  return target;
}

int SegmentRecord::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.SegmentRecord)
  int total_size = 0;

  // optional int64 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  // repeated int64 segment_id = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->segment_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->segment_id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _segment_id_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SegmentRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.SegmentRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SegmentRecord* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SegmentRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.SegmentRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.SegmentRecord)
    MergeFrom(*source);
  }
}

void SegmentRecord::MergeFrom(const SegmentRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.SegmentRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  segment_id_.MergeFrom(from.segment_id_);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void SegmentRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.SegmentRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SegmentRecord::CopyFrom(const SegmentRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.SegmentRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SegmentRecord::IsInitialized() const {

  return true;
}

void SegmentRecord::Swap(SegmentRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SegmentRecord::InternalSwap(SegmentRecord* other) {
  std::swap(uid_, other->uid_);
  segment_id_.UnsafeArenaSwap(&other->segment_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SegmentRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SegmentRecord_descriptor_;
  metadata.reflection = SegmentRecord_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SegmentRecord

// optional int64 uid = 1;
void SegmentRecord::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 SegmentRecord::uid() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SegmentRecord.uid)
  return uid_;
}
 void SegmentRecord::set_uid(::google::protobuf::int64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.SegmentRecord.uid)
}

// repeated int64 segment_id = 2;
int SegmentRecord::segment_id_size() const {
  return segment_id_.size();
}
void SegmentRecord::clear_segment_id() {
  segment_id_.Clear();
}
 ::google::protobuf::int64 SegmentRecord::segment_id(int index) const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.SegmentRecord.segment_id)
  return segment_id_.Get(index);
}
 void SegmentRecord::set_segment_id(int index, ::google::protobuf::int64 value) {
  segment_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:suvlim.grpc.SegmentRecord.segment_id)
}
 void SegmentRecord::add_segment_id(::google::protobuf::int64 value) {
  segment_id_.Add(value);
  // @@protoc_insertion_point(field_add:suvlim.grpc.SegmentRecord.segment_id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
SegmentRecord::segment_id() const {
  // @@protoc_insertion_point(field_list:suvlim.grpc.SegmentRecord.segment_id)
  return segment_id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
SegmentRecord::mutable_segment_id() {
  // @@protoc_insertion_point(field_mutable_list:suvlim.grpc.SegmentRecord.segment_id)
  return &segment_id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Key2SegMsg::kClientIdFieldNumber;
const int Key2SegMsg::kRecordsFieldNumber;
const int Key2SegMsg::kMsgTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Key2SegMsg::Key2SegMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:suvlim.grpc.Key2SegMsg)
}

void Key2SegMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  records_ = const_cast< ::suvlim::grpc::SegmentRecord*>(&::suvlim::grpc::SegmentRecord::default_instance());
}

Key2SegMsg::Key2SegMsg(const Key2SegMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:suvlim.grpc.Key2SegMsg)
}

void Key2SegMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = GOOGLE_LONGLONG(0);
  records_ = NULL;
  msg_type_ = 0;
}

Key2SegMsg::~Key2SegMsg() {
  // @@protoc_insertion_point(destructor:suvlim.grpc.Key2SegMsg)
  SharedDtor();
}

void Key2SegMsg::SharedDtor() {
  if (this != default_instance_) {
    delete records_;
  }
}

void Key2SegMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Key2SegMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Key2SegMsg_descriptor_;
}

const Key2SegMsg& Key2SegMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_suvlim_2eproto();
  return *default_instance_;
}

Key2SegMsg* Key2SegMsg::default_instance_ = NULL;

Key2SegMsg* Key2SegMsg::New(::google::protobuf::Arena* arena) const {
  Key2SegMsg* n = new Key2SegMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Key2SegMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:suvlim.grpc.Key2SegMsg)
  client_id_ = GOOGLE_LONGLONG(0);
  if (GetArenaNoVirtual() == NULL && records_ != NULL) delete records_;
  records_ = NULL;
  msg_type_ = 0;
}

bool Key2SegMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:suvlim.grpc.Key2SegMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_records;
        break;
      }

      // optional .suvlim.grpc.SegmentRecord records = 2;
      case 2: {
        if (tag == 18) {
         parse_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_msg_type;
        break;
      }

      // optional .suvlim.grpc.OpType msg_type = 3;
      case 3: {
        if (tag == 24) {
         parse_msg_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_type(static_cast< ::suvlim::grpc::OpType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:suvlim.grpc.Key2SegMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:suvlim.grpc.Key2SegMsg)
  return false;
#undef DO_
}

void Key2SegMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:suvlim.grpc.Key2SegMsg)
  // optional int64 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->client_id(), output);
  }

  // optional .suvlim.grpc.SegmentRecord records = 2;
  if (this->has_records()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->records_, output);
  }

  // optional .suvlim.grpc.OpType msg_type = 3;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->msg_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:suvlim.grpc.Key2SegMsg)
}

::google::protobuf::uint8* Key2SegMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:suvlim.grpc.Key2SegMsg)
  // optional int64 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->client_id(), target);
  }

  // optional .suvlim.grpc.SegmentRecord records = 2;
  if (this->has_records()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->records_, false, target);
  }

  // optional .suvlim.grpc.OpType msg_type = 3;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->msg_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:suvlim.grpc.Key2SegMsg)
  return target;
}

int Key2SegMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:suvlim.grpc.Key2SegMsg)
  int total_size = 0;

  // optional int64 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->client_id());
  }

  // optional .suvlim.grpc.SegmentRecord records = 2;
  if (this->has_records()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->records_);
  }

  // optional .suvlim.grpc.OpType msg_type = 3;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Key2SegMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:suvlim.grpc.Key2SegMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Key2SegMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Key2SegMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:suvlim.grpc.Key2SegMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:suvlim.grpc.Key2SegMsg)
    MergeFrom(*source);
  }
}

void Key2SegMsg::MergeFrom(const Key2SegMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:suvlim.grpc.Key2SegMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.has_records()) {
    mutable_records()->::suvlim::grpc::SegmentRecord::MergeFrom(from.records());
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
}

void Key2SegMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:suvlim.grpc.Key2SegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Key2SegMsg::CopyFrom(const Key2SegMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:suvlim.grpc.Key2SegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Key2SegMsg::IsInitialized() const {

  return true;
}

void Key2SegMsg::Swap(Key2SegMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Key2SegMsg::InternalSwap(Key2SegMsg* other) {
  std::swap(client_id_, other->client_id_);
  std::swap(records_, other->records_);
  std::swap(msg_type_, other->msg_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Key2SegMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Key2SegMsg_descriptor_;
  metadata.reflection = Key2SegMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Key2SegMsg

// optional int64 client_id = 1;
void Key2SegMsg::clear_client_id() {
  client_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Key2SegMsg::client_id() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Key2SegMsg.client_id)
  return client_id_;
}
 void Key2SegMsg::set_client_id(::google::protobuf::int64 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.Key2SegMsg.client_id)
}

// optional .suvlim.grpc.SegmentRecord records = 2;
bool Key2SegMsg::has_records() const {
  return !_is_default_instance_ && records_ != NULL;
}
void Key2SegMsg::clear_records() {
  if (GetArenaNoVirtual() == NULL && records_ != NULL) delete records_;
  records_ = NULL;
}
const ::suvlim::grpc::SegmentRecord& Key2SegMsg::records() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Key2SegMsg.records)
  return records_ != NULL ? *records_ : *default_instance_->records_;
}
::suvlim::grpc::SegmentRecord* Key2SegMsg::mutable_records() {
  
  if (records_ == NULL) {
    records_ = new ::suvlim::grpc::SegmentRecord;
  }
  // @@protoc_insertion_point(field_mutable:suvlim.grpc.Key2SegMsg.records)
  return records_;
}
::suvlim::grpc::SegmentRecord* Key2SegMsg::release_records() {
  // @@protoc_insertion_point(field_release:suvlim.grpc.Key2SegMsg.records)
  
  ::suvlim::grpc::SegmentRecord* temp = records_;
  records_ = NULL;
  return temp;
}
void Key2SegMsg::set_allocated_records(::suvlim::grpc::SegmentRecord* records) {
  delete records_;
  records_ = records;
  if (records) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:suvlim.grpc.Key2SegMsg.records)
}

// optional .suvlim.grpc.OpType msg_type = 3;
void Key2SegMsg::clear_msg_type() {
  msg_type_ = 0;
}
 ::suvlim::grpc::OpType Key2SegMsg::msg_type() const {
  // @@protoc_insertion_point(field_get:suvlim.grpc.Key2SegMsg.msg_type)
  return static_cast< ::suvlim::grpc::OpType >(msg_type_);
}
 void Key2SegMsg::set_msg_type(::suvlim::grpc::OpType value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:suvlim.grpc.Key2SegMsg.msg_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace grpc
}  // namespace suvlim

// @@protoc_insertion_point(global_scope)
